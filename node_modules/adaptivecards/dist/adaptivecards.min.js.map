{"version":3,"sources":["webpack:///adaptivecards.min.js","webpack:///webpack/bootstrap 89fd00e9a8f0ac7e7620","webpack:///./src/enums.ts","webpack:///./src/utils.ts","webpack:///./src/host-config.ts","webpack:///./src/adaptivecards.ts","webpack:///./src/card-elements.ts","webpack:///./src/text-formatters.ts"],"names":["AdaptiveCards","modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","Size","SizeUnit","TextSize","Spacing","TextWeight","TextColor","HorizontalAlignment","VerticalAlignment","ActionAlignment","ImageStyle","ShowCardActionMode","Orientation","BackgroundImageMode","ActionIconPlacement","InputTextStyle","ContainerStyle","Default","Emphasis","ValidationError","ContainerFitStatus","getValueOrDefault","obj","defaultValue","isNullOrEmpty","undefined","appendChild","node","child","setProperty","target","propertyName","propertyValue","setEnumProperty","enumType","getEnumValueOrDefault","targetEnum","key","parseInt","toLowerCase","parseHostConfigEnum","renderSeparation","separationDefinition","orientation","spacing","lineThickness","separator","document","createElement","Enums","Horizontal","style","marginTop","paddingTop","borderTop","stringToCssColor","lineColor","height","marginLeft","paddingLeft","borderLeft","width","overflow","color","regEx","matches","exec","a","truncate","element","maxHeight","lineHeight","fits","scrollHeight","fullText","innerHTML","truncateAt","idx","substring","breakableIndices","findBreakableIndices","lo","hi","length","bestBreakIdx","mid","Math","floor","findNextCharacter","html","results","push","currIdx","getFitStatus","containerEnd","start","offsetTop","clientHeight","FullyInContainer","Overflowing","FullyOutOfContainer","UUID","generate","d0","random","d1","d2","d3","lut","initialize","toString","ContentTypes","applicationJson","applicationXWwwFormUrlencoded","StringWithSubstitutions","this","_isProcessed","_original","_processed","substituteInputValues","inputs","contentType","matchedInput","id","valueForReplace","JSON","stringify","slice","encodeURIComponent","replace","getOriginal","set","SizeAndUnit","physicalSize","unit","parse","input","result","Weight","regExp","Pixel","Error","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","Utils","TextColorDefinition","default","subtle","AdaptiveCardConfig","allowCustomStyle","ImageSetConfig","imageSize","Medium","maxImageHeight","toJSON","MediaConfig","allowInlinePlayback","defaultPoster","FactTextDefinition","size","isSubtle","weight","wrap","getDefaultWeight","FactTitleDefinition","_super","_this","maxWidth","Bolder","FactSetConfig","title","ShowCardActionConfig","actionMode","Inline","inlineTopMargin","ActionsConfig","maxActions","buttonSpacing","showCard","preExpandSingleShowCardAction","actionsOrientation","actionAlignment","Left","iconPlacement","LeftOfTitle","allowTitleToWrap","iconSize","sizeAndUnit","e","ContainerStyleDefinition","foregroundColors","dark","light","accent","good","warning","attention","getTextColorDefinitionOrDefault","backgroundColor","BuiltInContainerStyleDefinition","apply","arguments","ContainerStyleSet","_allStyles","customStyleArray","isArray","_i","customStyleArray_1","customStyle","styleName","keys","forEach","isBuiltIn","emphasis","customStyles","getStyleByName","HostConfig","choiceSetInputValueSeparator","supportsInteractivity","fontFamily","small","medium","large","extraLarge","padding","fontSizes","fontWeights","lighter","bolder","imageSizes","containerStyles","actions","adaptiveCard","imageSet","media","factSet","cssClassNamePrefix","String","lineHeights","getEffectiveSpacing","Small","Large","ExtraLarge","Padding","makeCssClassName","classNames","__export","utils_1","invokeSetCollection","action","collection","isActionAllowed","forbiddenActionTypes","getJsonTypeName","generateUniqueId","createActionInstance","json","errors","actionType","AdaptiveCard","actionTypeRegistry","createInstance","raiseParseError","error","UnknownActionType","message","raiseImageLoadedEvent","image","card","getRootElement","onImageLoadedHandler","onImageLoaded","raiseAnchorClickedEvent","anchor","onAnchorClickedHandler","onAnchorClicked","raiseExecuteActionEvent","parent","onExecuteActionHandler","onExecuteAction","prepare","getAllInputs","raiseInlineCardExpandedEvent","isExpanded","onInlineCardExpandedHandler","onInlineCardExpanded","raiseElementVisibilityChangedEvent","shouldUpdateLayout","rootElement","updateLayout","onElementVisibilityChangedHandler","onElementVisibilityChanged","raiseParseElementEvent","onParseElementHandler","onParseElement","raiseParseActionEvent","onParseActionHandler","onParseAction","onParseError","TextFormatters","SpacingDefinition","top","right","bottom","left","PaddingDefinition","None","toSpacingDefinition","hostConfig","CardElement","_lang","_hostConfig","_internalPadding","_parent","_renderedElement","_separatorElement","_isVisible","_truncatedDueToOverflow","_defaultRenderedElementDisplayMode","_padding","horizontalAlignment","customCssSelector","internalRenderSeparator","separatorOrientation","updateRenderedElementVisibility","display","isFirstElement","hideElementDueToOverflow","visibility","showElementHiddenDueToOverflow","handleOverflow","isVisible","isHiddenDueToOverflow","handled","truncateOverflow","resetOverflow","sizeChanged","undoOverflowTruncation","createPlaceholderElement","border","minHeight","fontSize","innerText","internalGetNonZeroPadding","processTop","processRight","processBottom","processLeft","internalPadding","isAtTheVeryTop","isAtTheVeryRight","isAtTheVeryBottom","isAtTheVeryLeft","adjustRenderedElementSize","renderedElement","flex","isDesignMode","designMode","allowCustomPadding","defaultPadding","getPadding","setPadding","useAutomaticContainerBleeding","setParent","getNonZeroPadding","getForbiddenElementTypes","getForbiddenActionTypes","speak","jsonSeparation","Deprecated","jsonHeight","getActionCount","getActionAt","index","validate","remove","CardElementContainer","removeItem","render","internalRender","classList","add","boxSizing","processChildren","indexOf","cardElement","isRendered","offsetHeight","isLastElement","isLeftMostElement","isBleeding","isRightMostElement","canContentBleed","getParentContainer","currentElement","Container","getResourceInformation","getElementById","getActionById","lang","defaultHostConfig","useAdvancedCardBottomTruncation","parentContainer","separatorElement","TextBlock","_processedText","_selectAction","useMarkdown","restoreOriginalContent","maxLines","_computedLineHeight","_originalInnerHtml","truncateIfSupported","children","isTextOnly","tagName","getRenderedDomElementType","text","applyStylesTo","selectAction","onclick","execute","cancelBubble","formattedText","formatText","processMarkdown","firstElementChild","HTMLElement","textOverflow","lastElementChild","marginBottom","anchors","getElementsByTagName","preventDefault","wordWrap","whiteSpace","useAdvancedTextBlockTruncation","tabIndex","setAttribute","targetElement","Center","textAlign","Right","colorDefinition","styleDefinition","actualTextColor","Accent","Dark","Light","Good","Warning","Attention","fontWeight","Lighter","sizeString","weightString","renderSpeech","_text","Label","forElementId","htmlFor","Fact","FactSet","facts","borderWidth","borderSpacing","borderStyle","borderCollapse","trElement","tdElement","verticalAlign","textBlock","_a","fact","jsonFacts","speech","Image","Auto","pixelWidth","pixelHeight","altText","parseDimension","InvalidPropertyValue","applySize","Stretch","url","alignItems","onkeypress","keyCode","justifyContent","imageElement","onload","onerror","errorElement","minWidth","Person","borderRadius","backgroundPosition","backgroundRepeat","src","alt","styleString","selectActionJson","mimeType","ImageSet","_images","flexWrap","renderedImage","margin","marginRight","getItemCount","getItemAt","concat","item","itemIndex","splice","images","jsonImages","addImage","MediaSource","Media","sources","getPosterUrl","poster","processSources","_selectedSources","_selectedMediaType","source","mimeComponents","split","supportedMediaTypes","renderPoster","posterRootElement","className","position","posterUrl","posterImageElement_1","parentNode","removeChild","playButtonOuterElement","mediaPlayerElement","renderMediaPlayer","play","onPlay","playButtonInnerElement","playButtonArrowWidth","playButtonArrowHeight","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderTopColor","borderRightColor","borderBottomColor","transform","playButtonContainer","mediaElement","videoPlayer","controls","preload","type","jsonSources","serializedSources","mediaSource","Input","valueChanged","onValueChanged","PropertyCantBeNull","TextInput","Text","isMultiline","_textareaElement","placeholder","maxLength","oninput","_inputElement","ToggleInput","valueOn","valueOff","_checkboxInputElement","checked","onchange","label","useMarkdownInRadioButtonAndCheckbox","labelElement","Choice","ChoiceSetInput","choices","getUniqueCategoryName","uniqueCwtegoryName","uniqueCategoryCounter","isMultiSelect","defaultValues","_toggleInputs","checkboxInput","compoundInput","isCompact","_selectElement","option","selected","disabled","hidden","uniqueCategoryName","radioInput","choice","CollectionCantBeEmpty","choiceArray","NumberInput","_numberInputElement","min","max","DateInput","_dateInputElement","TimeInput","_timeInputElement","ActionButtonState","ActionButton","parentContainerStyle","_element","_state","Normal","onClick","_parentContainerStyle","click","updateCssStyle","ShowCardAction","Expanded","Subdued","isPrimary","Action","_actionCollection","setCollection","actionCollection","addCssClasses","iconUrl","buttonElement","hasTitle","titleElement","AboveTitle","iconElement","flexDirection","onExecute","setStatus","status","statusCard","InlineAdaptiveCard","showStatusCard","hideStatusCard","removeAction","SubmitAction","_isPrepared","_originalData","_processedData","data","OpenUrlAction","HttpHeader","_value","newValue","HttpAction","_url","_body","_headers","method","headers","header","body","jsonHeaders","httpHeader","ActionCollection","owner","_expandedAction","_renderedActionCount","_statusCard","_actionCard","items","buttons","_owner","isActionCardContainerVisible","_actionCardContainer","refreshContainer","paddingRight","layoutChanged","hideActionCard","previouslyExpandedAction","showActionCard","suppressStyle","raiseEvent","renderedCard","collapseExpandedAction","state","expandShowCardAction","actionClicked","actionButton","Popup","findActionButton","TooManyActions","InteractivityNotAllowed","ActionTypeNotAllowed","buttonStrip","ab","spacer","buttonStripContainer","addAction","expandedAction","actionIndex","clear","ActionSet","jsonOrientation","jsonActions","BackgroundImage","mode","verticalAlignment","Top","backgroundImage","Repeat","RepeatHorizontally","RepeatVertically","backgroundSize","backgroundPositionX","backgroundPositionY","Bottom","_items","_renderedItems","_style","verticalContentAlignment","isElementAllowed","forbiddenElementTypes","isInteractive","insertItemAt","isStandalone","getItemsCollectionPropertyName","isLastElementBleeding","applyPadding","physicalPadding","paddingBottom","hasBackground","physicalMargin","useAutoPadding","effectivePadding","effectiveMargin","assign","placeholderElement","boundary","handleElement","elt","maxHeight_1","hasExplicitStyle","elements","jsonBackgroundImage","elementType","elementTypeRegistry","addItem","UnknownElementType","insertItemBefore","insertBefore","insertItemAfter","insertAfter","defaultStyle","Column","_computedWeight","Vertical","jsonWidth","invalidWidth","ColumnSet","_columns","totalWeight","column","renderedColumnCount","_b","_c","computedWeight","renderedColumn","columns","getCount","getColumnAt","jsonColumns","addColumn","weightedColumns","stretchedColumns","Hint","Version","major","minor","_isValid","_major","_minor","versionString","_versionString","ContainerWithActions","renderedActions","renderedActionCount","TypeRegistry","reset","findTypeRegistration","typeName","registerType","registrationInfo","unregisterType","ElementTypeRegistry","ActionTypeRegistry","_cardTypeName","version","isVersionSupported","bypassVersionCheck","currentVersion","fallbackText","MissingCardType","isValid","UnsupportedCardVersion","langId","window","removeAttribute","formatters","DateFormatter","TimeFormatter","format","AbstractTextFormatter","regularExpression","_regularExpression","internalFormat","date","Date","toLocaleDateString","day","weekday","month","year","toLocaleTimeString","hour","minute"],"mappings":"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","file":"adaptivecards.min.js","sourcesContent":["var AdaptiveCards =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Size;\r\n(function (Size) {\r\n    Size[Size[\"Auto\"] = 0] = \"Auto\";\r\n    Size[Size[\"Stretch\"] = 1] = \"Stretch\";\r\n    Size[Size[\"Small\"] = 2] = \"Small\";\r\n    Size[Size[\"Medium\"] = 3] = \"Medium\";\r\n    Size[Size[\"Large\"] = 4] = \"Large\";\r\n})(Size = exports.Size || (exports.Size = {}));\r\nvar SizeUnit;\r\n(function (SizeUnit) {\r\n    SizeUnit[SizeUnit[\"Weight\"] = 0] = \"Weight\";\r\n    SizeUnit[SizeUnit[\"Pixel\"] = 1] = \"Pixel\";\r\n})(SizeUnit = exports.SizeUnit || (exports.SizeUnit = {}));\r\nvar TextSize;\r\n(function (TextSize) {\r\n    TextSize[TextSize[\"Small\"] = 0] = \"Small\";\r\n    TextSize[TextSize[\"Default\"] = 1] = \"Default\";\r\n    TextSize[TextSize[\"Medium\"] = 2] = \"Medium\";\r\n    TextSize[TextSize[\"Large\"] = 3] = \"Large\";\r\n    TextSize[TextSize[\"ExtraLarge\"] = 4] = \"ExtraLarge\";\r\n})(TextSize = exports.TextSize || (exports.TextSize = {}));\r\nvar Spacing;\r\n(function (Spacing) {\r\n    Spacing[Spacing[\"None\"] = 0] = \"None\";\r\n    Spacing[Spacing[\"Small\"] = 1] = \"Small\";\r\n    Spacing[Spacing[\"Default\"] = 2] = \"Default\";\r\n    Spacing[Spacing[\"Medium\"] = 3] = \"Medium\";\r\n    Spacing[Spacing[\"Large\"] = 4] = \"Large\";\r\n    Spacing[Spacing[\"ExtraLarge\"] = 5] = \"ExtraLarge\";\r\n    Spacing[Spacing[\"Padding\"] = 6] = \"Padding\";\r\n})(Spacing = exports.Spacing || (exports.Spacing = {}));\r\nvar TextWeight;\r\n(function (TextWeight) {\r\n    TextWeight[TextWeight[\"Lighter\"] = 0] = \"Lighter\";\r\n    TextWeight[TextWeight[\"Default\"] = 1] = \"Default\";\r\n    TextWeight[TextWeight[\"Bolder\"] = 2] = \"Bolder\";\r\n})(TextWeight = exports.TextWeight || (exports.TextWeight = {}));\r\nvar TextColor;\r\n(function (TextColor) {\r\n    TextColor[TextColor[\"Default\"] = 0] = \"Default\";\r\n    TextColor[TextColor[\"Dark\"] = 1] = \"Dark\";\r\n    TextColor[TextColor[\"Light\"] = 2] = \"Light\";\r\n    TextColor[TextColor[\"Accent\"] = 3] = \"Accent\";\r\n    TextColor[TextColor[\"Good\"] = 4] = \"Good\";\r\n    TextColor[TextColor[\"Warning\"] = 5] = \"Warning\";\r\n    TextColor[TextColor[\"Attention\"] = 6] = \"Attention\";\r\n})(TextColor = exports.TextColor || (exports.TextColor = {}));\r\nvar HorizontalAlignment;\r\n(function (HorizontalAlignment) {\r\n    HorizontalAlignment[HorizontalAlignment[\"Left\"] = 0] = \"Left\";\r\n    HorizontalAlignment[HorizontalAlignment[\"Center\"] = 1] = \"Center\";\r\n    HorizontalAlignment[HorizontalAlignment[\"Right\"] = 2] = \"Right\";\r\n})(HorizontalAlignment = exports.HorizontalAlignment || (exports.HorizontalAlignment = {}));\r\nvar VerticalAlignment;\r\n(function (VerticalAlignment) {\r\n    VerticalAlignment[VerticalAlignment[\"Top\"] = 0] = \"Top\";\r\n    VerticalAlignment[VerticalAlignment[\"Center\"] = 1] = \"Center\";\r\n    VerticalAlignment[VerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\r\n})(VerticalAlignment = exports.VerticalAlignment || (exports.VerticalAlignment = {}));\r\nvar ActionAlignment;\r\n(function (ActionAlignment) {\r\n    ActionAlignment[ActionAlignment[\"Left\"] = 0] = \"Left\";\r\n    ActionAlignment[ActionAlignment[\"Center\"] = 1] = \"Center\";\r\n    ActionAlignment[ActionAlignment[\"Right\"] = 2] = \"Right\";\r\n    ActionAlignment[ActionAlignment[\"Stretch\"] = 3] = \"Stretch\";\r\n})(ActionAlignment = exports.ActionAlignment || (exports.ActionAlignment = {}));\r\nvar ImageStyle;\r\n(function (ImageStyle) {\r\n    ImageStyle[ImageStyle[\"Default\"] = 0] = \"Default\";\r\n    ImageStyle[ImageStyle[\"Person\"] = 1] = \"Person\";\r\n})(ImageStyle = exports.ImageStyle || (exports.ImageStyle = {}));\r\nvar ShowCardActionMode;\r\n(function (ShowCardActionMode) {\r\n    ShowCardActionMode[ShowCardActionMode[\"Inline\"] = 0] = \"Inline\";\r\n    ShowCardActionMode[ShowCardActionMode[\"Popup\"] = 1] = \"Popup\";\r\n})(ShowCardActionMode = exports.ShowCardActionMode || (exports.ShowCardActionMode = {}));\r\nvar Orientation;\r\n(function (Orientation) {\r\n    Orientation[Orientation[\"Horizontal\"] = 0] = \"Horizontal\";\r\n    Orientation[Orientation[\"Vertical\"] = 1] = \"Vertical\";\r\n})(Orientation = exports.Orientation || (exports.Orientation = {}));\r\nvar BackgroundImageMode;\r\n(function (BackgroundImageMode) {\r\n    BackgroundImageMode[BackgroundImageMode[\"Stretch\"] = 0] = \"Stretch\";\r\n    BackgroundImageMode[BackgroundImageMode[\"RepeatHorizontally\"] = 1] = \"RepeatHorizontally\";\r\n    BackgroundImageMode[BackgroundImageMode[\"RepeatVertically\"] = 2] = \"RepeatVertically\";\r\n    BackgroundImageMode[BackgroundImageMode[\"Repeat\"] = 3] = \"Repeat\";\r\n})(BackgroundImageMode = exports.BackgroundImageMode || (exports.BackgroundImageMode = {}));\r\nvar ActionIconPlacement;\r\n(function (ActionIconPlacement) {\r\n    ActionIconPlacement[ActionIconPlacement[\"LeftOfTitle\"] = 0] = \"LeftOfTitle\";\r\n    ActionIconPlacement[ActionIconPlacement[\"AboveTitle\"] = 1] = \"AboveTitle\";\r\n})(ActionIconPlacement = exports.ActionIconPlacement || (exports.ActionIconPlacement = {}));\r\nvar InputTextStyle;\r\n(function (InputTextStyle) {\r\n    InputTextStyle[InputTextStyle[\"Text\"] = 0] = \"Text\";\r\n    InputTextStyle[InputTextStyle[\"Tel\"] = 1] = \"Tel\";\r\n    InputTextStyle[InputTextStyle[\"Url\"] = 2] = \"Url\";\r\n    InputTextStyle[InputTextStyle[\"Email\"] = 3] = \"Email\";\r\n})(InputTextStyle = exports.InputTextStyle || (exports.InputTextStyle = {}));\r\n/*\r\n    This should really be a string enum, e.g.\r\n    \r\n        export enum ContainerStyle {\r\n            Default = \"default\",\r\n            Emphasis = \"emphasis\"\r\n        }\r\n\r\n    However, some hosts do not use a version of TypeScript\r\n    recent enough to understand string enums. This is\r\n    a compatible construct that does not require using\r\n    a more recent version of TypeScript.\r\n*/\r\nvar ContainerStyle = /** @class */ (function () {\r\n    function ContainerStyle() {\r\n    }\r\n    ContainerStyle.Default = \"default\";\r\n    ContainerStyle.Emphasis = \"emphasis\";\r\n    return ContainerStyle;\r\n}());\r\nexports.ContainerStyle = ContainerStyle;\r\nvar ValidationError;\r\n(function (ValidationError) {\r\n    ValidationError[ValidationError[\"Hint\"] = 0] = \"Hint\";\r\n    ValidationError[ValidationError[\"ActionTypeNotAllowed\"] = 1] = \"ActionTypeNotAllowed\";\r\n    ValidationError[ValidationError[\"CollectionCantBeEmpty\"] = 2] = \"CollectionCantBeEmpty\";\r\n    ValidationError[ValidationError[\"Deprecated\"] = 3] = \"Deprecated\";\r\n    ValidationError[ValidationError[\"ElementTypeNotAllowed\"] = 4] = \"ElementTypeNotAllowed\";\r\n    ValidationError[ValidationError[\"InteractivityNotAllowed\"] = 5] = \"InteractivityNotAllowed\";\r\n    ValidationError[ValidationError[\"InvalidPropertyValue\"] = 6] = \"InvalidPropertyValue\";\r\n    ValidationError[ValidationError[\"MissingCardType\"] = 7] = \"MissingCardType\";\r\n    ValidationError[ValidationError[\"PropertyCantBeNull\"] = 8] = \"PropertyCantBeNull\";\r\n    ValidationError[ValidationError[\"TooManyActions\"] = 9] = \"TooManyActions\";\r\n    ValidationError[ValidationError[\"UnknownActionType\"] = 10] = \"UnknownActionType\";\r\n    ValidationError[ValidationError[\"UnknownElementType\"] = 11] = \"UnknownElementType\";\r\n    ValidationError[ValidationError[\"UnsupportedCardVersion\"] = 12] = \"UnsupportedCardVersion\";\r\n})(ValidationError = exports.ValidationError || (exports.ValidationError = {}));\r\nvar ContainerFitStatus;\r\n(function (ContainerFitStatus) {\r\n    ContainerFitStatus[ContainerFitStatus[\"FullyInContainer\"] = 0] = \"FullyInContainer\";\r\n    ContainerFitStatus[ContainerFitStatus[\"Overflowing\"] = 1] = \"Overflowing\";\r\n    ContainerFitStatus[ContainerFitStatus[\"FullyOutOfContainer\"] = 2] = \"FullyOutOfContainer\";\r\n})(ContainerFitStatus = exports.ContainerFitStatus || (exports.ContainerFitStatus = {}));\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Enums = __webpack_require__(0);\r\n/**\r\n * Fast UUID generator, RFC4122 version 4 compliant.\r\n * @author Jeff Ward (jcward.com).\r\n * @license MIT license\r\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n **/\r\nvar UUID = /** @class */ (function () {\r\n    function UUID() {\r\n    }\r\n    UUID.generate = function () {\r\n        var d0 = Math.random() * 0xffffffff | 0;\r\n        var d1 = Math.random() * 0xffffffff | 0;\r\n        var d2 = Math.random() * 0xffffffff | 0;\r\n        var d3 = Math.random() * 0xffffffff | 0;\r\n        return UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + '-' +\r\n            UUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + '-' + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + '-' +\r\n            UUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + '-' + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] +\r\n            UUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];\r\n    };\r\n    UUID.initialize = function () {\r\n        for (var i = 0; i < 256; i++) {\r\n            UUID.lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n        }\r\n    };\r\n    UUID.lut = [];\r\n    return UUID;\r\n}());\r\nexports.UUID = UUID;\r\nUUID.initialize();\r\nexports.ContentTypes = {\r\n    applicationJson: \"application/json\",\r\n    applicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\r\n};\r\nfunction getValueOrDefault(obj, defaultValue) {\r\n    return obj ? obj : defaultValue;\r\n}\r\nexports.getValueOrDefault = getValueOrDefault;\r\nfunction isNullOrEmpty(value) {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\nexports.isNullOrEmpty = isNullOrEmpty;\r\nfunction appendChild(node, child) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\nexports.appendChild = appendChild;\r\nfunction setProperty(target, propertyName, propertyValue, defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = undefined; }\r\n    if (propertyValue && (!defaultValue || defaultValue !== propertyValue)) {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\nexports.setProperty = setProperty;\r\nfunction setEnumProperty(enumType, target, propertyName, propertyValue, defaultValue) {\r\n    if (defaultValue === undefined || defaultValue !== propertyValue) {\r\n        target[propertyName] = enumType[propertyValue];\r\n    }\r\n}\r\nexports.setEnumProperty = setEnumProperty;\r\nfunction getEnumValueOrDefault(targetEnum, name, defaultValue) {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n    for (var key in targetEnum) {\r\n        var isValueProperty = parseInt(key, 10) >= 0;\r\n        if (isValueProperty) {\r\n            var value = targetEnum[key];\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return defaultValue;\r\n}\r\nexports.getEnumValueOrDefault = getEnumValueOrDefault;\r\nfunction parseHostConfigEnum(targetEnum, value, defaultValue) {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValueOrDefault(targetEnum, value, defaultValue);\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return getValueOrDefault(value, defaultValue);\r\n    }\r\n    else {\r\n        return defaultValue;\r\n    }\r\n}\r\nexports.parseHostConfigEnum = parseHostConfigEnum;\r\nfunction renderSeparation(separationDefinition, orientation) {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        var separator = document.createElement(\"div\");\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderTop = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderLeft = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        separator.style.overflow = \"hidden\";\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\nexports.renderSeparation = renderSeparation;\r\nfunction stringToCssColor(color) {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n    var matches = regEx.exec(color);\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\nexports.stringToCssColor = stringToCssColor;\r\nvar StringWithSubstitutions = /** @class */ (function () {\r\n    function StringWithSubstitutions() {\r\n        this._isProcessed = false;\r\n        this._original = null;\r\n        this._processed = null;\r\n    }\r\n    StringWithSubstitutions.prototype.substituteInputValues = function (inputs, contentType) {\r\n        this._processed = this._original;\r\n        var regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n        var matches;\r\n        while ((matches = regEx.exec(this._original)) != null) {\r\n            var matchedInput = null;\r\n            for (var i = 0; i < inputs.length; i++) {\r\n                if (inputs[i].id.toLowerCase() == matches[1].toLowerCase()) {\r\n                    matchedInput = inputs[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (matchedInput) {\r\n                var valueForReplace = \"\";\r\n                if (matchedInput.value) {\r\n                    valueForReplace = matchedInput.value;\r\n                }\r\n                if (contentType === exports.ContentTypes.applicationJson) {\r\n                    valueForReplace = JSON.stringify(valueForReplace);\r\n                    valueForReplace = valueForReplace.slice(1, -1);\r\n                }\r\n                else if (contentType === exports.ContentTypes.applicationXWwwFormUrlencoded) {\r\n                    valueForReplace = encodeURIComponent(valueForReplace);\r\n                }\r\n                this._processed = this._processed.replace(matches[0], valueForReplace);\r\n            }\r\n        }\r\n        ;\r\n        this._isProcessed = true;\r\n    };\r\n    StringWithSubstitutions.prototype.getOriginal = function () {\r\n        return this._original;\r\n    };\r\n    StringWithSubstitutions.prototype.get = function () {\r\n        if (!this._isProcessed) {\r\n            return this._original;\r\n        }\r\n        else {\r\n            return this._processed;\r\n        }\r\n    };\r\n    StringWithSubstitutions.prototype.set = function (value) {\r\n        this._original = value;\r\n        this._isProcessed = false;\r\n    };\r\n    return StringWithSubstitutions;\r\n}());\r\nexports.StringWithSubstitutions = StringWithSubstitutions;\r\nvar SizeAndUnit = /** @class */ (function () {\r\n    function SizeAndUnit(physicalSize, unit) {\r\n        this.physicalSize = physicalSize;\r\n        this.unit = unit;\r\n    }\r\n    SizeAndUnit.parse = function (input) {\r\n        var result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n        var regExp = /^([0-9]+)(px|\\*)?$/g;\r\n        var matches = regExp.exec(input);\r\n        if (matches && matches.length >= 2) {\r\n            result.physicalSize = parseInt(matches[1]);\r\n            if (matches.length == 3) {\r\n                if (matches[2] == \"px\") {\r\n                    result.unit = Enums.SizeUnit.Pixel;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        throw new Error(\"Invalid size: \" + input);\r\n    };\r\n    return SizeAndUnit;\r\n}());\r\nexports.SizeAndUnit = SizeAndUnit;\r\nfunction truncate(element, maxHeight, lineHeight) {\r\n    var fits = function () {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n    if (fits())\r\n        return;\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = function (idx) {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    };\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n    truncateAt(bestBreakIdx);\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        var idx = findNextCharacter(fullText, bestBreakIdx);\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\nexports.truncate = truncate;\r\nfunction findBreakableIndices(html) {\r\n    var results = [];\r\n    var idx = findNextCharacter(html, -1);\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n    return results;\r\n}\r\nfunction findNextCharacter(html, currIdx) {\r\n    currIdx += 1;\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>')\r\n            ;\r\n    }\r\n    return currIdx;\r\n}\r\nfunction getFitStatus(element, containerEnd) {\r\n    var start = element.offsetTop;\r\n    var end = start + element.clientHeight;\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    }\r\n    else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    }\r\n    else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\nexports.getFitStatus = getFitStatus;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Enums = __webpack_require__(0);\r\nvar Utils = __webpack_require__(1);\r\nvar TextColorDefinition = /** @class */ (function () {\r\n    function TextColorDefinition(obj) {\r\n        this.default = \"#000000\";\r\n        this.subtle = \"#666666\";\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n    return TextColorDefinition;\r\n}());\r\nexports.TextColorDefinition = TextColorDefinition;\r\nvar AdaptiveCardConfig = /** @class */ (function () {\r\n    function AdaptiveCardConfig(obj) {\r\n        this.allowCustomStyle = false;\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n    return AdaptiveCardConfig;\r\n}());\r\nexports.AdaptiveCardConfig = AdaptiveCardConfig;\r\nvar ImageSetConfig = /** @class */ (function () {\r\n    function ImageSetConfig(obj) {\r\n        this.imageSize = Enums.Size.Medium;\r\n        this.maxImageHeight = 100;\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getValueOrDefault(obj[\"maxImageHeight\"], 100);\r\n        }\r\n    }\r\n    ImageSetConfig.prototype.toJSON = function () {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        };\r\n    };\r\n    return ImageSetConfig;\r\n}());\r\nexports.ImageSetConfig = ImageSetConfig;\r\nvar MediaConfig = /** @class */ (function () {\r\n    function MediaConfig(obj) {\r\n        this.allowInlinePlayback = true;\r\n        if (obj) {\r\n            this.defaultPoster = obj[\"defaultPoster\"];\r\n            this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\r\n        }\r\n    }\r\n    MediaConfig.prototype.toJSON = function () {\r\n        return {\r\n            defaultPoster: this.defaultPoster,\r\n            allowInlinePlayback: this.allowInlinePlayback\r\n        };\r\n    };\r\n    return MediaConfig;\r\n}());\r\nexports.MediaConfig = MediaConfig;\r\nvar FactTextDefinition = /** @class */ (function () {\r\n    function FactTextDefinition(obj) {\r\n        this.size = Enums.TextSize.Default;\r\n        this.color = Enums.TextColor.Default;\r\n        this.isSubtle = false;\r\n        this.weight = Enums.TextWeight.Default;\r\n        this.wrap = true;\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], this.getDefaultWeight());\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n    ;\r\n    FactTextDefinition.prototype.getDefaultWeight = function () {\r\n        return Enums.TextWeight.Default;\r\n    };\r\n    FactTextDefinition.prototype.toJSON = function () {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            wrap: this.wrap\r\n        };\r\n    };\r\n    return FactTextDefinition;\r\n}());\r\nexports.FactTextDefinition = FactTextDefinition;\r\nvar FactTitleDefinition = /** @class */ (function (_super) {\r\n    __extends(FactTitleDefinition, _super);\r\n    function FactTitleDefinition(obj) {\r\n        var _this = _super.call(this, obj) || this;\r\n        _this.maxWidth = 150;\r\n        _this.weight = Enums.TextWeight.Bolder;\r\n        if (obj) {\r\n            _this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : _this.maxWidth;\r\n            _this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Bolder);\r\n        }\r\n        return _this;\r\n    }\r\n    FactTitleDefinition.prototype.getDefaultWeight = function () {\r\n        return Enums.TextWeight.Bolder;\r\n    };\r\n    return FactTitleDefinition;\r\n}(FactTextDefinition));\r\nexports.FactTitleDefinition = FactTitleDefinition;\r\nvar FactSetConfig = /** @class */ (function () {\r\n    function FactSetConfig(obj) {\r\n        this.title = new FactTitleDefinition();\r\n        this.value = new FactTextDefinition();\r\n        this.spacing = 10;\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n    return FactSetConfig;\r\n}());\r\nexports.FactSetConfig = FactSetConfig;\r\nvar ShowCardActionConfig = /** @class */ (function () {\r\n    function ShowCardActionConfig(obj) {\r\n        this.actionMode = Enums.ShowCardActionMode.Inline;\r\n        this.inlineTopMargin = 16;\r\n        this.style = Enums.ContainerStyle.Emphasis;\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n    ShowCardActionConfig.prototype.toJSON = function () {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        };\r\n    };\r\n    return ShowCardActionConfig;\r\n}());\r\nexports.ShowCardActionConfig = ShowCardActionConfig;\r\nvar ActionsConfig = /** @class */ (function () {\r\n    function ActionsConfig(obj) {\r\n        this.maxActions = 5;\r\n        this.spacing = Enums.Spacing.Default;\r\n        this.buttonSpacing = 20;\r\n        this.showCard = new ShowCardActionConfig();\r\n        this.preExpandSingleShowCardAction = false;\r\n        this.actionsOrientation = Enums.Orientation.Horizontal;\r\n        this.actionAlignment = Enums.ActionAlignment.Left;\r\n        this.iconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\r\n        this.allowTitleToWrap = false;\r\n        this.iconSize = 24;\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getValueOrDefault(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n            this.iconPlacement = Utils.parseHostConfigEnum(Enums.ActionIconPlacement, obj[\"iconPlacement\"], Enums.ActionIconPlacement.LeftOfTitle);\r\n            this.allowTitleToWrap = obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\r\n            try {\r\n                var sizeAndUnit = Utils.SizeAndUnit.parse(obj[\"iconSize\"]);\r\n                if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                    this.iconSize = sizeAndUnit.physicalSize;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Swallow this, keep default icon size\r\n            }\r\n        }\r\n    }\r\n    ActionsConfig.prototype.toJSON = function () {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        };\r\n    };\r\n    return ActionsConfig;\r\n}());\r\nexports.ActionsConfig = ActionsConfig;\r\nvar ContainerStyleDefinition = /** @class */ (function () {\r\n    function ContainerStyleDefinition(obj) {\r\n        this.foregroundColors = {\r\n            default: new TextColorDefinition(),\r\n            dark: new TextColorDefinition(),\r\n            light: new TextColorDefinition(),\r\n            accent: new TextColorDefinition(),\r\n            good: new TextColorDefinition(),\r\n            warning: new TextColorDefinition(),\r\n            attention: new TextColorDefinition()\r\n        };\r\n        this.parse(obj);\r\n    }\r\n    ContainerStyleDefinition.prototype.getTextColorDefinitionOrDefault = function (obj, defaultValue) {\r\n        return new TextColorDefinition(obj ? obj : defaultValue);\r\n    };\r\n    ContainerStyleDefinition.prototype.parse = function (obj) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n            if (obj.foregroundColors) {\r\n                this.foregroundColors.default = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"default\"], { default: \"#333333\", subtle: \"#EE333333\" });\r\n                this.foregroundColors.dark = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"dark\"], { default: \"#000000\", subtle: \"#66000000\" });\r\n                this.foregroundColors.light = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"light\"], { default: \"#FFFFFF\", subtle: \"#33000000\" });\r\n                this.foregroundColors.accent = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"accent\"], { default: \"#2E89FC\", subtle: \"#882E89FC\" });\r\n                this.foregroundColors.good = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"good\"], { default: \"#54A254\", subtle: \"#DD54A254\" });\r\n                this.foregroundColors.warning = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"warning\"], { default: \"#E69500\", subtle: \"#DDE69500\" });\r\n                this.foregroundColors.attention = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"attention\"], { default: \"#CC3300\", subtle: \"#DDCC3300\" });\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ContainerStyleDefinition.prototype, \"isBuiltIn\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContainerStyleDefinition;\r\n}());\r\nexports.ContainerStyleDefinition = ContainerStyleDefinition;\r\nvar BuiltInContainerStyleDefinition = /** @class */ (function (_super) {\r\n    __extends(BuiltInContainerStyleDefinition, _super);\r\n    function BuiltInContainerStyleDefinition() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(BuiltInContainerStyleDefinition.prototype, \"isBuiltIn\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return BuiltInContainerStyleDefinition;\r\n}(ContainerStyleDefinition));\r\nvar ContainerStyleSet = /** @class */ (function () {\r\n    function ContainerStyleSet(obj) {\r\n        this._allStyles = {};\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\r\n            var customStyleArray = obj[\"customStyles\"];\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (var _i = 0, customStyleArray_1 = customStyleArray; _i < customStyleArray_1.length; _i++) {\r\n                    var customStyle = customStyleArray_1[_i];\r\n                    if (customStyle) {\r\n                        var styleName = customStyle[\"name\"];\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            }\r\n                            else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    ContainerStyleSet.prototype.toJSON = function () {\r\n        var _this = this;\r\n        var customStyleArray = [];\r\n        Object.keys(this._allStyles).forEach(function (key) {\r\n            if (!_this._allStyles[key].isBuiltIn) {\r\n                customStyleArray.push({\r\n                    name: key,\r\n                    style: _this._allStyles[key]\r\n                });\r\n            }\r\n        });\r\n        var result = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        };\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n        return result;\r\n    };\r\n    ContainerStyleSet.prototype.getStyleByName = function (name, defaultValue) {\r\n        if (defaultValue === void 0) { defaultValue = null; }\r\n        return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\r\n    };\r\n    Object.defineProperty(ContainerStyleSet.prototype, \"default\", {\r\n        get: function () {\r\n            return this._allStyles[Enums.ContainerStyle.Default];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ContainerStyleSet.prototype, \"emphasis\", {\r\n        get: function () {\r\n            return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContainerStyleSet;\r\n}());\r\nexports.ContainerStyleSet = ContainerStyleSet;\r\nvar HostConfig = /** @class */ (function () {\r\n    function HostConfig(obj) {\r\n        this.choiceSetInputValueSeparator = \",\";\r\n        this.supportsInteractivity = true;\r\n        this.fontFamily = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n        this.spacing = {\r\n            small: 3,\r\n            default: 8,\r\n            medium: 20,\r\n            large: 30,\r\n            extraLarge: 40,\r\n            padding: 15\r\n        };\r\n        this.separator = {\r\n            lineThickness: 1,\r\n            lineColor: \"#EEEEEE\"\r\n        };\r\n        this.fontSizes = {\r\n            small: 12,\r\n            default: 14,\r\n            medium: 17,\r\n            large: 21,\r\n            extraLarge: 26\r\n        };\r\n        this.fontWeights = {\r\n            lighter: 200,\r\n            default: 400,\r\n            bolder: 600\r\n        };\r\n        this.imageSizes = {\r\n            small: 40,\r\n            medium: 80,\r\n            large: 160\r\n        };\r\n        this.containerStyles = new ContainerStyleSet();\r\n        this.actions = new ActionsConfig();\r\n        this.adaptiveCard = new AdaptiveCardConfig();\r\n        this.imageSet = new ImageSetConfig();\r\n        this.media = new MediaConfig();\r\n        this.factSet = new FactSetConfig();\r\n        this.cssClassNamePrefix = null;\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj);\r\n            }\r\n            this.choiceSetInputValueSeparator = (obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\") ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n            this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n            this.fontSizes = {\r\n                small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n                default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n                medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n                large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n                extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n            };\r\n            if (obj.lineHeights) {\r\n                this.lineHeights = {\r\n                    small: obj.lineHeights[\"small\"],\r\n                    default: obj.lineHeights[\"default\"],\r\n                    medium: obj.lineHeights[\"medium\"],\r\n                    large: obj.lineHeights[\"large\"],\r\n                    extraLarge: obj.lineHeights[\"extraLarge\"]\r\n                };\r\n            }\r\n            ;\r\n            this.fontWeights = {\r\n                lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n                default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n                bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n            };\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            };\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"]);\r\n        }\r\n    }\r\n    HostConfig.prototype.getEffectiveSpacing = function (spacing) {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n    HostConfig.prototype.makeCssClassName = function () {\r\n        var classNames = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            classNames[_i] = arguments[_i];\r\n        }\r\n        var result = \"\";\r\n        for (var i = 0; i < classNames.length; i++) {\r\n            if (i > 0) {\r\n                result += \" \";\r\n            }\r\n            if (this.cssClassNamePrefix) {\r\n                result += this.cssClassNamePrefix + \"-\";\r\n            }\r\n            result += classNames[i];\r\n        }\r\n        return result;\r\n    };\r\n    return HostConfig;\r\n}());\r\nexports.HostConfig = HostConfig;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(4);\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(__webpack_require__(5));\r\n__export(__webpack_require__(0));\r\n__export(__webpack_require__(2));\r\nvar utils_1 = __webpack_require__(1);\r\nexports.getEnumValueOrDefault = utils_1.getEnumValueOrDefault;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Enums = __webpack_require__(0);\r\nvar Utils = __webpack_require__(1);\r\nvar HostConfig = __webpack_require__(2);\r\nvar TextFormatters = __webpack_require__(6);\r\nfunction invokeSetCollection(action, collection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\nfunction isActionAllowed(action, forbiddenActionTypes) {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction generateUniqueId() {\r\n    return \"__ac-\" + Utils.UUID.generate();\r\n}\r\nfunction createActionInstance(json, errors) {\r\n    var actionType = json[\"type\"];\r\n    var result = AdaptiveCard.actionTypeRegistry.createInstance(actionType);\r\n    if (!result) {\r\n        raiseParseError({\r\n            error: Enums.ValidationError.UnknownActionType,\r\n            message: \"Unknown action type: \" + actionType\r\n        }, errors);\r\n    }\r\n    return result;\r\n}\r\nexports.createActionInstance = createActionInstance;\r\nvar SpacingDefinition = /** @class */ (function () {\r\n    function SpacingDefinition(top, right, bottom, left) {\r\n        if (top === void 0) { top = 0; }\r\n        if (right === void 0) { right = 0; }\r\n        if (bottom === void 0) { bottom = 0; }\r\n        if (left === void 0) { left = 0; }\r\n        this.left = 0;\r\n        this.top = 0;\r\n        this.right = 0;\r\n        this.bottom = 0;\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n    return SpacingDefinition;\r\n}());\r\nexports.SpacingDefinition = SpacingDefinition;\r\nvar PaddingDefinition = /** @class */ (function () {\r\n    function PaddingDefinition(top, right, bottom, left) {\r\n        if (top === void 0) { top = Enums.Spacing.None; }\r\n        if (right === void 0) { right = Enums.Spacing.None; }\r\n        if (bottom === void 0) { bottom = Enums.Spacing.None; }\r\n        if (left === void 0) { left = Enums.Spacing.None; }\r\n        this.top = Enums.Spacing.None;\r\n        this.right = Enums.Spacing.None;\r\n        this.bottom = Enums.Spacing.None;\r\n        this.left = Enums.Spacing.None;\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n    PaddingDefinition.prototype.toSpacingDefinition = function (hostConfig) {\r\n        return new SpacingDefinition(hostConfig.getEffectiveSpacing(this.top), hostConfig.getEffectiveSpacing(this.right), hostConfig.getEffectiveSpacing(this.bottom), hostConfig.getEffectiveSpacing(this.left));\r\n    };\r\n    return PaddingDefinition;\r\n}());\r\nexports.PaddingDefinition = PaddingDefinition;\r\nvar SizeAndUnit = /** @class */ (function () {\r\n    function SizeAndUnit(physicalSize, unit) {\r\n        this.physicalSize = physicalSize;\r\n        this.unit = unit;\r\n    }\r\n    SizeAndUnit.parse = function (input) {\r\n        var result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n        var regExp = /^([0-9]+)(px|\\*)?$/g;\r\n        var matches = regExp.exec(input);\r\n        if (matches && matches.length >= 2) {\r\n            result.physicalSize = parseInt(matches[1]);\r\n            if (matches.length == 3) {\r\n                if (matches[2] == \"px\") {\r\n                    result.unit = Enums.SizeUnit.Pixel;\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        throw new Error(\"Invalid size: \" + input);\r\n    };\r\n    return SizeAndUnit;\r\n}());\r\nexports.SizeAndUnit = SizeAndUnit;\r\nvar CardElement = /** @class */ (function () {\r\n    function CardElement() {\r\n        this._lang = undefined;\r\n        this._hostConfig = null;\r\n        this._internalPadding = null;\r\n        this._parent = null;\r\n        this._renderedElement = null;\r\n        this._separatorElement = null;\r\n        this._isVisible = true;\r\n        this._truncatedDueToOverflow = false;\r\n        this._defaultRenderedElementDisplayMode = null;\r\n        this._padding = null;\r\n        this.horizontalAlignment = null;\r\n        this.spacing = Enums.Spacing.Default;\r\n        this.separator = false;\r\n        this.height = \"auto\";\r\n        this.customCssSelector = null;\r\n    }\r\n    CardElement.prototype.internalRenderSeparator = function () {\r\n        return Utils.renderSeparation({\r\n            spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n            lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n            lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n        }, this.separatorOrientation);\r\n    };\r\n    CardElement.prototype.updateRenderedElementVisibility = function () {\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.display = this._isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n        }\r\n        if (this._separatorElement) {\r\n            if (this.parent && this.parent.isFirstElement(this)) {\r\n                this._separatorElement.style.display = \"none\";\r\n            }\r\n            else {\r\n                this._separatorElement.style.display = this._isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n            }\r\n        }\r\n    };\r\n    CardElement.prototype.hideElementDueToOverflow = function () {\r\n        if (this._renderedElement && this._isVisible) {\r\n            this._renderedElement.style.visibility = 'hidden';\r\n            this._isVisible = false;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    };\r\n    CardElement.prototype.showElementHiddenDueToOverflow = function () {\r\n        if (this._renderedElement && !this._isVisible) {\r\n            this._renderedElement.style.visibility = null;\r\n            this._isVisible = true;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    };\r\n    // Marked private to emulate internal access\r\n    CardElement.prototype.handleOverflow = function (maxHeight) {\r\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\r\n            var handled = this.truncateOverflow(maxHeight);\r\n            // Even if we were unable to truncate the element to fit this time,\r\n            // it still could have been previously truncated\r\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\r\n            if (!handled) {\r\n                this.hideElementDueToOverflow();\r\n            }\r\n            else if (handled && !this._isVisible) {\r\n                this.showElementHiddenDueToOverflow();\r\n            }\r\n        }\r\n    };\r\n    // Marked private to emulate internal access\r\n    CardElement.prototype.resetOverflow = function () {\r\n        var sizeChanged = false;\r\n        if (this._truncatedDueToOverflow) {\r\n            this.undoOverflowTruncation();\r\n            this._truncatedDueToOverflow = false;\r\n            sizeChanged = true;\r\n        }\r\n        if (this.isHiddenDueToOverflow) {\r\n            this.showElementHiddenDueToOverflow();\r\n        }\r\n        return sizeChanged;\r\n    };\r\n    CardElement.prototype.createPlaceholderElement = function () {\r\n        var element = document.createElement(\"div\");\r\n        element.style.border = \"1px dashed #DDDDDD\";\r\n        element.style.padding = \"4px\";\r\n        element.style.minHeight = \"32px\";\r\n        element.style.fontSize = \"10px\";\r\n        element.innerText = \"Empty \" + this.getJsonTypeName();\r\n        return element;\r\n    };\r\n    CardElement.prototype.internalGetNonZeroPadding = function (padding, processTop, processRight, processBottom, processLeft) {\r\n        if (processTop === void 0) { processTop = true; }\r\n        if (processRight === void 0) { processRight = true; }\r\n        if (processBottom === void 0) { processBottom = true; }\r\n        if (processLeft === void 0) { processLeft = true; }\r\n        if (processTop) {\r\n            if (padding.top == Enums.Spacing.None) {\r\n                padding.top = this.internalPadding.top;\r\n            }\r\n        }\r\n        if (processRight) {\r\n            if (padding.right == Enums.Spacing.None) {\r\n                padding.right = this.internalPadding.right;\r\n            }\r\n        }\r\n        if (processBottom) {\r\n            if (padding.bottom == Enums.Spacing.None) {\r\n                padding.bottom = this.internalPadding.bottom;\r\n            }\r\n        }\r\n        if (processLeft) {\r\n            if (padding.left == Enums.Spacing.None) {\r\n                padding.left = this.internalPadding.left;\r\n            }\r\n        }\r\n        if (this.parent) {\r\n            this.parent.internalGetNonZeroPadding(padding, processTop && this.isAtTheVeryTop(), processRight && this.isAtTheVeryRight(), processBottom && this.isAtTheVeryBottom(), processLeft && this.isAtTheVeryLeft());\r\n        }\r\n    };\r\n    CardElement.prototype.adjustRenderedElementSize = function (renderedElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 auto\";\r\n        }\r\n    };\r\n    /*\r\n     * Called when this element overflows the bottom of the card.\r\n     * maxHeight will be the amount of space still available on the card (0 if\r\n     * the element is fully off the card).\r\n     */\r\n    CardElement.prototype.truncateOverflow = function (maxHeight) {\r\n        // Child implementations should return true if the element handled\r\n        // the truncation request such that its content fits within maxHeight,\r\n        // false if the element should fall back to being hidden\r\n        return false;\r\n    };\r\n    /*\r\n     * This should reverse any changes performed in truncateOverflow().\r\n     */\r\n    CardElement.prototype.undoOverflowTruncation = function () { };\r\n    CardElement.prototype.isDesignMode = function () {\r\n        var rootElement = this.getRootElement();\r\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\r\n    };\r\n    Object.defineProperty(CardElement.prototype, \"useDefaultSizing\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"allowCustomPadding\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"defaultPadding\", {\r\n        get: function () {\r\n            return new PaddingDefinition();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"internalPadding\", {\r\n        get: function () {\r\n            if (this._padding) {\r\n                return this._padding;\r\n            }\r\n            else {\r\n                return (this._internalPadding && this.allowCustomPadding) ? this._internalPadding : this.defaultPadding;\r\n            }\r\n        },\r\n        set: function (value) {\r\n            this._internalPadding = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"separatorOrientation\", {\r\n        get: function () {\r\n            return Enums.Orientation.Horizontal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CardElement.prototype.getPadding = function () {\r\n        return this._padding;\r\n    };\r\n    CardElement.prototype.setPadding = function (value) {\r\n        this._padding = value;\r\n        if (this._padding) {\r\n            AdaptiveCard.useAutomaticContainerBleeding = false;\r\n        }\r\n    };\r\n    CardElement.prototype.toJSON = function () {\r\n        var result = {};\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n        if (this.horizontalAlignment !== null) {\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment);\r\n        }\r\n        Utils.setEnumProperty(Enums.Spacing, result, \"spacing\", this.spacing, Enums.Spacing.Default);\r\n        Utils.setProperty(result, \"separator\", this.separator, false);\r\n        Utils.setProperty(result, \"height\", this.height, \"auto\");\r\n        return result;\r\n    };\r\n    CardElement.prototype.setParent = function (value) {\r\n        this._parent = value;\r\n    };\r\n    CardElement.prototype.getNonZeroPadding = function () {\r\n        var padding = new PaddingDefinition();\r\n        this.internalGetNonZeroPadding(padding);\r\n        return padding;\r\n    };\r\n    CardElement.prototype.getForbiddenElementTypes = function () {\r\n        return null;\r\n    };\r\n    CardElement.prototype.getForbiddenActionTypes = function () {\r\n        return null;\r\n    };\r\n    CardElement.prototype.parse = function (json, errors) {\r\n        raiseParseElementEvent(this, json, errors);\r\n        this.id = json[\"id\"];\r\n        this.speak = json[\"speak\"];\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], null);\r\n        this.spacing = Utils.getEnumValueOrDefault(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = json[\"separator\"];\r\n        var jsonSeparation = json[\"separation\"];\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n            }, errors);\r\n        }\r\n        var jsonHeight = json[\"height\"];\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n    };\r\n    CardElement.prototype.getActionCount = function () {\r\n        return 0;\r\n    };\r\n    CardElement.prototype.getActionAt = function (index) {\r\n        throw new Error(\"Index out of range.\");\r\n    };\r\n    CardElement.prototype.validate = function () {\r\n        return [];\r\n    };\r\n    CardElement.prototype.remove = function () {\r\n        if (this.parent && this.parent instanceof CardElementContainer) {\r\n            return this.parent.removeItem(this);\r\n        }\r\n        return false;\r\n    };\r\n    CardElement.prototype.render = function () {\r\n        this._renderedElement = this.internalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n        if (this._renderedElement) {\r\n            if (this.customCssSelector) {\r\n                this._renderedElement.classList.add(this.customCssSelector);\r\n            }\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display;\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n        }\r\n        else if (this.isDesignMode()) {\r\n            this._renderedElement = this.createPlaceholderElement();\r\n        }\r\n        return this._renderedElement;\r\n    };\r\n    CardElement.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        this.updateRenderedElementVisibility();\r\n    };\r\n    CardElement.prototype.indexOf = function (cardElement) {\r\n        return -1;\r\n    };\r\n    CardElement.prototype.isRendered = function () {\r\n        return this._renderedElement && this._renderedElement.offsetHeight > 0;\r\n    };\r\n    CardElement.prototype.isAtTheVeryTop = function () {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    };\r\n    CardElement.prototype.isFirstElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isAtTheVeryBottom = function () {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    };\r\n    CardElement.prototype.isLastElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isAtTheVeryLeft = function () {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    };\r\n    CardElement.prototype.isBleeding = function () {\r\n        return false;\r\n    };\r\n    CardElement.prototype.isLeftMostElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isAtTheVeryRight = function () {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    };\r\n    CardElement.prototype.isRightMostElement = function (element) {\r\n        return true;\r\n    };\r\n    CardElement.prototype.isHiddenDueToOverflow = function () {\r\n        return this._renderedElement && this._renderedElement.style.visibility == 'hidden';\r\n    };\r\n    CardElement.prototype.canContentBleed = function () {\r\n        return this.parent ? this.parent.canContentBleed() : true;\r\n    };\r\n    CardElement.prototype.getRootElement = function () {\r\n        var rootElement = this;\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n        return rootElement;\r\n    };\r\n    CardElement.prototype.getParentContainer = function () {\r\n        var currentElement = this.parent;\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return currentElement;\r\n            }\r\n            currentElement = currentElement.parent;\r\n        }\r\n        return null;\r\n    };\r\n    CardElement.prototype.getAllInputs = function () {\r\n        return [];\r\n    };\r\n    CardElement.prototype.getResourceInformation = function () {\r\n        return [];\r\n    };\r\n    CardElement.prototype.getElementById = function (id) {\r\n        return this.id === id ? this : null;\r\n    };\r\n    CardElement.prototype.getActionById = function (id) {\r\n        return null;\r\n    };\r\n    Object.defineProperty(CardElement.prototype, \"lang\", {\r\n        get: function () {\r\n            if (this._lang) {\r\n                return this._lang;\r\n            }\r\n            else {\r\n                if (this.parent) {\r\n                    return this.parent.lang;\r\n                }\r\n                else {\r\n                    return undefined;\r\n                }\r\n            }\r\n        },\r\n        set: function (value) {\r\n            if (value && value != \"\") {\r\n                var regEx = /^[a-z]{2,3}$/ig;\r\n                var matches = regEx.exec(value);\r\n                if (!matches) {\r\n                    throw new Error(\"Invalid language identifier: \" + value);\r\n                }\r\n            }\r\n            this._lang = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"hostConfig\", {\r\n        get: function () {\r\n            if (this._hostConfig) {\r\n                return this._hostConfig;\r\n            }\r\n            else {\r\n                if (this.parent) {\r\n                    return this.parent.hostConfig;\r\n                }\r\n                else {\r\n                    return defaultHostConfig;\r\n                }\r\n            }\r\n        },\r\n        set: function (value) {\r\n            this._hostConfig = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"index\", {\r\n        get: function () {\r\n            if (this.parent) {\r\n                return this.parent.indexOf(this);\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"isInteractive\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"isStandalone\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"parent\", {\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"isVisible\", {\r\n        get: function () {\r\n            return this._isVisible;\r\n        },\r\n        set: function (value) {\r\n            // If the element is going to be hidden, reset any changes that were due\r\n            // to overflow truncation (this ensures that if the element is later\r\n            // un-hidden it has the right content)\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation && !value) {\r\n                this.undoOverflowTruncation();\r\n            }\r\n            if (this._isVisible != value) {\r\n                this._isVisible = value;\r\n                this.updateRenderedElementVisibility();\r\n                if (this._renderedElement) {\r\n                    raiseElementVisibilityChangedEvent(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"hasVisibleSeparator\", {\r\n        get: function () {\r\n            var parentContainer = this.getParentContainer();\r\n            if (parentContainer) {\r\n                return this.separatorElement && !parentContainer.isFirstElement(this);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"renderedElement\", {\r\n        get: function () {\r\n            return this._renderedElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CardElement.prototype, \"separatorElement\", {\r\n        get: function () {\r\n            return this._separatorElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CardElement;\r\n}());\r\nexports.CardElement = CardElement;\r\nvar CardElementContainer = /** @class */ (function (_super) {\r\n    __extends(CardElementContainer, _super);\r\n    function CardElementContainer() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return CardElementContainer;\r\n}(CardElement));\r\nexports.CardElementContainer = CardElementContainer;\r\nvar TextBlock = /** @class */ (function (_super) {\r\n    __extends(TextBlock, _super);\r\n    function TextBlock() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._processedText = null;\r\n        _this._selectAction = null;\r\n        _this.size = Enums.TextSize.Default;\r\n        _this.weight = Enums.TextWeight.Default;\r\n        _this.color = Enums.TextColor.Default;\r\n        _this.isSubtle = false;\r\n        _this.wrap = false;\r\n        _this.useMarkdown = true;\r\n        return _this;\r\n    }\r\n    TextBlock.prototype.restoreOriginalContent = function () {\r\n        var maxHeight = this.maxLines\r\n            ? (this._computedLineHeight * this.maxLines) + 'px'\r\n            : null;\r\n        this.renderedElement.style.maxHeight = maxHeight;\r\n        this.renderedElement.innerHTML = this._originalInnerHtml;\r\n    };\r\n    TextBlock.prototype.truncateIfSupported = function (maxHeight) {\r\n        // For now, only truncate TextBlocks that contain just a single\r\n        // paragraph -- since the maxLines calculation doesn't take into\r\n        // account Markdown lists\r\n        var children = this.renderedElement.children;\r\n        var isTextOnly = !children.length;\r\n        var truncationSupported = isTextOnly || children.length == 1\r\n            && children[0].tagName.toLowerCase() == 'p';\r\n        if (truncationSupported) {\r\n            var element = isTextOnly\r\n                ? this.renderedElement\r\n                : children[0];\r\n            Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    TextBlock.prototype.getRenderedDomElementType = function () {\r\n        return \"div\";\r\n    };\r\n    TextBlock.prototype.internalRender = function () {\r\n        var _this = this;\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            var hostConfig = this.hostConfig;\r\n            var element = document.createElement(this.getRenderedDomElementType());\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\r\n            element.style.overflow = \"hidden\";\r\n            this.applyStylesTo(element);\r\n            if (this.selectAction) {\r\n                element.onclick = function (e) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                };\r\n            }\r\n            if (!this._processedText) {\r\n                var formattedText = TextFormatters.formatText(this.lang, this.text);\r\n                this._processedText = this.useMarkdown ? AdaptiveCard.processMarkdown(formattedText) : formattedText;\r\n            }\r\n            element.innerHTML = this._processedText;\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                var firstElementChild = element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                element.lastElementChild.style.marginBottom = \"0px\";\r\n            }\r\n            var anchors = element.getElementsByTagName(\"a\");\r\n            for (var i = 0; i < anchors.length; i++) {\r\n                var anchor = anchors[i];\r\n                anchor.classList.add(this.hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = function (e) {\r\n                    if (raiseAnchorClickedEvent(_this, e.target)) {\r\n                        e.preventDefault();\r\n                    }\r\n                };\r\n            }\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n                element.style.textOverflow = \"ellipsis\";\r\n            }\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation || AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                element.tabIndex = 0;\r\n                element.setAttribute(\"role\", \"button\");\r\n                element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    TextBlock.prototype.truncateOverflow = function (maxHeight) {\r\n        if (maxHeight >= this._computedLineHeight) {\r\n            return this.truncateIfSupported(maxHeight);\r\n        }\r\n        return false;\r\n    };\r\n    TextBlock.prototype.undoOverflowTruncation = function () {\r\n        this.restoreOriginalContent();\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines) {\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    };\r\n    TextBlock.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setEnumProperty(Enums.TextSize, result, \"size\", this.size, Enums.TextSize.Default);\r\n        Utils.setEnumProperty(Enums.TextWeight, result, \"weight\", this.weight, Enums.TextWeight.Default);\r\n        Utils.setEnumProperty(Enums.TextColor, result, \"color\", this.color, Enums.TextColor.Default);\r\n        Utils.setProperty(result, \"text\", this.text);\r\n        Utils.setProperty(result, \"isSubtle\", this.isSubtle, false);\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n        Utils.setProperty(result, \"maxLines\", this.maxLines, 0);\r\n        return result;\r\n    };\r\n    TextBlock.prototype.applyStylesTo = function (targetElement) {\r\n        if (this.hostConfig.fontFamily) {\r\n            targetElement.style.fontFamily = this.hostConfig.fontFamily;\r\n        }\r\n        switch (this.horizontalAlignment) {\r\n            case Enums.HorizontalAlignment.Center:\r\n                targetElement.style.textAlign = \"center\";\r\n                break;\r\n            case Enums.HorizontalAlignment.Right:\r\n                targetElement.style.textAlign = \"right\";\r\n                break;\r\n            default:\r\n                targetElement.style.textAlign = \"left\";\r\n                break;\r\n        }\r\n        var cssStyle = \"text \";\r\n        var fontSize;\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                fontSize = this.hostConfig.fontSizes.small;\r\n                break;\r\n            case Enums.TextSize.Medium:\r\n                fontSize = this.hostConfig.fontSizes.medium;\r\n                break;\r\n            case Enums.TextSize.Large:\r\n                fontSize = this.hostConfig.fontSizes.large;\r\n                break;\r\n            case Enums.TextSize.ExtraLarge:\r\n                fontSize = this.hostConfig.fontSizes.extraLarge;\r\n                break;\r\n            default:\r\n                fontSize = this.hostConfig.fontSizes.default;\r\n                break;\r\n        }\r\n        if (this.hostConfig.lineHeights) {\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.extraLarge;\r\n                    break;\r\n                default:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.default;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = fontSize * 1.33;\r\n        }\r\n        targetElement.style.fontSize = fontSize + \"px\";\r\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\r\n        var parentContainer = this.getParentContainer();\r\n        var styleDefinition = this.hostConfig.containerStyles.getStyleByName(parentContainer ? parentContainer.style : Enums.ContainerStyle.Default, this.hostConfig.containerStyles.default);\r\n        var actualTextColor = this.color ? this.color : Enums.TextColor.Default;\r\n        var colorDefinition;\r\n        switch (actualTextColor) {\r\n            case Enums.TextColor.Accent:\r\n                colorDefinition = styleDefinition.foregroundColors.accent;\r\n                break;\r\n            case Enums.TextColor.Dark:\r\n                colorDefinition = styleDefinition.foregroundColors.dark;\r\n                break;\r\n            case Enums.TextColor.Light:\r\n                colorDefinition = styleDefinition.foregroundColors.light;\r\n                break;\r\n            case Enums.TextColor.Good:\r\n                colorDefinition = styleDefinition.foregroundColors.good;\r\n                break;\r\n            case Enums.TextColor.Warning:\r\n                colorDefinition = styleDefinition.foregroundColors.warning;\r\n                break;\r\n            case Enums.TextColor.Attention:\r\n                colorDefinition = styleDefinition.foregroundColors.attention;\r\n                break;\r\n            default:\r\n                colorDefinition = styleDefinition.foregroundColors.default;\r\n                break;\r\n        }\r\n        targetElement.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.default);\r\n        var fontWeight;\r\n        switch (this.weight) {\r\n            case Enums.TextWeight.Lighter:\r\n                fontWeight = this.hostConfig.fontWeights.lighter;\r\n                break;\r\n            case Enums.TextWeight.Bolder:\r\n                fontWeight = this.hostConfig.fontWeights.bolder;\r\n                break;\r\n            default:\r\n                fontWeight = this.hostConfig.fontWeights.default;\r\n                break;\r\n        }\r\n        targetElement.style.fontWeight = fontWeight.toString();\r\n    };\r\n    TextBlock.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.text = json[\"text\"];\r\n        var sizeString = json[\"size\"];\r\n        if (sizeString && typeof sizeString === \"string\" && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n            }, errors);\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValueOrDefault(Enums.TextSize, sizeString, this.size);\r\n        }\r\n        var weightString = json[\"weight\"];\r\n        if (weightString && typeof weightString === \"string\" && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n            }, errors);\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValueOrDefault(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n        this.color = Utils.getEnumValueOrDefault(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = json[\"isSubtle\"];\r\n        this.wrap = json[\"wrap\"] === undefined ? false : json[\"wrap\"];\r\n        if (typeof json[\"maxLines\"] === \"number\") {\r\n            this.maxLines = json[\"maxLines\"];\r\n        }\r\n    };\r\n    TextBlock.prototype.getJsonTypeName = function () {\r\n        return \"TextBlock\";\r\n    };\r\n    TextBlock.prototype.renderSpeech = function () {\r\n        if (this.speak != null)\r\n            return this.speak + '\\n';\r\n        if (this.text)\r\n            return '<s>' + this.text + '</s>\\n';\r\n        return null;\r\n    };\r\n    TextBlock.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = false; }\r\n        _super.prototype.updateLayout.call(this, processChildren);\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines && this.isRendered()) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.restoreOriginalContent();\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    };\r\n    Object.defineProperty(TextBlock.prototype, \"text\", {\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        set: function (value) {\r\n            if (this._text != value) {\r\n                this._text = value;\r\n                this._processedText = null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextBlock.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                this._selectAction.setParent(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return TextBlock;\r\n}(CardElement));\r\nexports.TextBlock = TextBlock;\r\nvar Label = /** @class */ (function (_super) {\r\n    __extends(Label, _super);\r\n    function Label() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Label.prototype.getRenderedDomElementType = function () {\r\n        return \"label\";\r\n    };\r\n    Label.prototype.internalRender = function () {\r\n        var renderedElement = _super.prototype.internalRender.call(this);\r\n        if (!Utils.isNullOrEmpty(this.forElementId)) {\r\n            renderedElement.htmlFor = this.forElementId;\r\n        }\r\n        return renderedElement;\r\n    };\r\n    return Label;\r\n}(TextBlock));\r\nvar Fact = /** @class */ (function () {\r\n    function Fact(name, value) {\r\n        if (name === void 0) { name = undefined; }\r\n        if (value === void 0) { value = undefined; }\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n    Fact.prototype.toJSON = function () {\r\n        return { title: this.name, value: this.value };\r\n    };\r\n    Fact.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n        return '<s>' + this.name + ' ' + this.value + '</s>\\n';\r\n    };\r\n    return Fact;\r\n}());\r\nexports.Fact = Fact;\r\nvar FactSet = /** @class */ (function (_super) {\r\n    __extends(FactSet, _super);\r\n    function FactSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.facts = [];\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FactSet.prototype, \"useDefaultSizing\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FactSet.prototype.internalRender = function () {\r\n        var element = null;\r\n        var hostConfig = this.hostConfig;\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                var trElement = document.createElement(\"tr\");\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = this.hostConfig.factSet.spacing + \"px\";\r\n                }\r\n                var tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\r\n                if (this.hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = this.hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n                tdElement.style.verticalAlign = \"top\";\r\n                var textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = Utils.isNullOrEmpty(this.facts[i].name) ? \"Title\" : this.facts[i].name;\r\n                textBlock.size = this.hostConfig.factSet.title.size;\r\n                textBlock.color = this.hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.title.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0px 0px 0px 10px\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\r\n                textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = Utils.isNullOrEmpty(this.facts[i].value) ? \"Value\" : this.facts[i].value;\r\n                textBlock.size = this.hostConfig.factSet.value.size;\r\n                textBlock.color = this.hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.value.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    FactSet.prototype.getJsonTypeName = function () {\r\n        return \"FactSet\";\r\n    };\r\n    FactSet.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        var facts = [];\r\n        for (var _i = 0, _a = this.facts; _i < _a.length; _i++) {\r\n            var fact = _a[_i];\r\n            facts.push(fact.toJSON());\r\n        }\r\n        Utils.setProperty(result, \"facts\", facts);\r\n        return result;\r\n    };\r\n    FactSet.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.facts = [];\r\n        if (json[\"facts\"] != null) {\r\n            var jsonFacts = json[\"facts\"];\r\n            this.facts = [];\r\n            for (var i = 0; i < jsonFacts.length; i++) {\r\n                var fact = new Fact();\r\n                fact.name = jsonFacts[i][\"title\"];\r\n                fact.value = jsonFacts[i][\"value\"];\r\n                fact.speak = jsonFacts[i][\"speak\"];\r\n                this.facts.push(fact);\r\n            }\r\n        }\r\n    };\r\n    FactSet.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n        // render each fact\r\n        var speak = null;\r\n        if (this.facts.length > 0) {\r\n            speak = '';\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                var speech = this.facts[i].renderSpeech();\r\n                if (speech) {\r\n                    speak += speech;\r\n                }\r\n            }\r\n        }\r\n        return '<p>' + speak + '\\n</p>\\n';\r\n    };\r\n    return FactSet;\r\n}(CardElement));\r\nexports.FactSet = FactSet;\r\nvar Image = /** @class */ (function (_super) {\r\n    __extends(Image, _super);\r\n    function Image() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.style = Enums.ImageStyle.Default;\r\n        _this.size = Enums.Size.Auto;\r\n        _this.pixelWidth = null;\r\n        _this.pixelHeight = null;\r\n        _this.altText = \"\";\r\n        return _this;\r\n    }\r\n    Image.prototype.parseDimension = function (name, value, errors) {\r\n        if (value) {\r\n            if (typeof value === \"string\") {\r\n                try {\r\n                    var size = Utils.SizeAndUnit.parse(value);\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        return size.physicalSize;\r\n                    }\r\n                }\r\n                catch (_a) {\r\n                    // Ignore error\r\n                }\r\n            }\r\n            raiseParseError({\r\n                error: Enums.ValidationError.InvalidPropertyValue,\r\n                message: \"Invalid image \" + name + \": \" + value\r\n            }, errors);\r\n        }\r\n        return 0;\r\n    };\r\n    Image.prototype.applySize = function (element) {\r\n        if (this.pixelWidth || this.pixelHeight) {\r\n            if (this.pixelWidth) {\r\n                element.style.width = this.pixelWidth + \"px\";\r\n            }\r\n            if (this.pixelHeight) {\r\n                element.style.height = this.pixelHeight + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            switch (this.size) {\r\n                case Enums.Size.Stretch:\r\n                    element.style.width = \"100%\";\r\n                    break;\r\n                case Enums.Size.Auto:\r\n                    element.style.maxWidth = \"100%\";\r\n                    break;\r\n                case Enums.Size.Small:\r\n                    element.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                    break;\r\n                case Enums.Size.Large:\r\n                    element.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                    break;\r\n                case Enums.Size.Medium:\r\n                    element.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Image.prototype, \"useDefaultSizing\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Image.prototype.internalRender = function () {\r\n        var _this = this;\r\n        var element = null;\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n            element.onkeypress = function (e) {\r\n                if (_this.selectAction) {\r\n                    if (e.keyCode == 13 || e.keyCode == 32) { // enter or space pressed\r\n                        _this.selectAction.execute();\r\n                    }\r\n                }\r\n            };\r\n            element.onclick = function (e) {\r\n                if (_this.selectAction) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            };\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\r\n            var hostConfig = this.hostConfig;\r\n            var imageElement = document.createElement(\"img\");\r\n            imageElement.onload = function (e) {\r\n                raiseImageLoadedEvent(_this);\r\n            };\r\n            imageElement.onerror = function (e) {\r\n                var card = _this.getRootElement();\r\n                _this.renderedElement.innerHTML = \"\";\r\n                if (card && card.designMode) {\r\n                    var errorElement = document.createElement(\"div\");\r\n                    errorElement.style.display = \"flex\";\r\n                    errorElement.style.alignItems = \"center\";\r\n                    errorElement.style.justifyContent = \"center\";\r\n                    errorElement.style.backgroundColor = \"#EEEEEE\";\r\n                    errorElement.style.color = \"black\";\r\n                    errorElement.innerText = \":-(\";\r\n                    errorElement.style.padding = \"10px\";\r\n                    _this.applySize(errorElement);\r\n                    _this.renderedElement.appendChild(errorElement);\r\n                }\r\n                raiseImageLoadedEvent(_this);\r\n            };\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                imageElement.tabIndex = 0;\r\n                imageElement.setAttribute(\"role\", \"button\");\r\n                imageElement.setAttribute(\"aria-label\", this.selectAction.title);\r\n                imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n            this.applySize(imageElement);\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n            imageElement.src = this.url;\r\n            imageElement.alt = this.altText;\r\n            element.appendChild(imageElement);\r\n        }\r\n        return element;\r\n    };\r\n    Image.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n        Utils.setEnumProperty(Enums.ImageStyle, result, \"style\", this.style, Enums.ImageStyle.Default);\r\n        Utils.setProperty(result, \"backgroundColor\", this.backgroundColor);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n        Utils.setEnumProperty(Enums.Size, result, \"size\", this.size, Enums.Size.Auto);\r\n        if (this.pixelWidth) {\r\n            Utils.setProperty(result, \"width\", this.pixelWidth + \"px\");\r\n        }\r\n        if (this.pixelHeight) {\r\n            Utils.setProperty(result, \"height\", this.pixelHeight + \"px\");\r\n        }\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n        return result;\r\n    };\r\n    Image.prototype.getJsonTypeName = function () {\r\n        return \"Image\";\r\n    };\r\n    Image.prototype.getActionById = function (id) {\r\n        var result = _super.prototype.getActionById.call(this, id);\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n        return result;\r\n    };\r\n    Image.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.url = json[\"url\"];\r\n        this.backgroundColor = json[\"backgroundColor\"];\r\n        var styleString = json[\"style\"];\r\n        if (styleString && typeof styleString === \"string\" && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n            }, errors);\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValueOrDefault(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n        this.size = Utils.getEnumValueOrDefault(Enums.Size, json[\"size\"], this.size);\r\n        this.altText = json[\"altText\"];\r\n        // pixelWidth and pixelHeight are only parsed for backwards compatibility.\r\n        // Payloads should use the width and height proerties instead.\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The pixelWidth property is deprecated and will be removed. Use the width property instead.\"\r\n            }, errors);\r\n        }\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n            raiseParseError({\r\n                error: Enums.ValidationError.Deprecated,\r\n                message: \"The pixelHeight property is deprecated and will be removed. Use the height property instead.\"\r\n            }, errors);\r\n        }\r\n        var size = this.parseDimension(\"width\", json[\"width\"], errors);\r\n        if (size > 0) {\r\n            this.pixelWidth = size;\r\n        }\r\n        size = this.parseDimension(\"height\", json[\"height\"], errors);\r\n        if (size > 0) {\r\n            this.pixelHeight = size;\r\n        }\r\n        var selectActionJson = json[\"selectAction\"];\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson, errors);\r\n            if (this.selectAction) {\r\n                this.selectAction.setParent(this);\r\n                this.selectAction.parse(selectActionJson);\r\n            }\r\n        }\r\n    };\r\n    Image.prototype.getResourceInformation = function () {\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            return [{ url: this.url, mimeType: \"image\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    Image.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n        return null;\r\n    };\r\n    Object.defineProperty(Image.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                this._selectAction.setParent(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Image;\r\n}(CardElement));\r\nexports.Image = Image;\r\nvar ImageSet = /** @class */ (function (_super) {\r\n    __extends(ImageSet, _super);\r\n    function ImageSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._images = [];\r\n        _this.imageSize = Enums.Size.Medium;\r\n        return _this;\r\n    }\r\n    ImageSet.prototype.internalRender = function () {\r\n        var element = null;\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                this._images[i].size = this.imageSize;\r\n                var renderedImage = this._images[i].render();\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    ImageSet.prototype.getItemCount = function () {\r\n        return this._images.length;\r\n    };\r\n    ImageSet.prototype.getItemAt = function (index) {\r\n        return this._images[index];\r\n    };\r\n    ImageSet.prototype.getResourceInformation = function () {\r\n        var result = [];\r\n        for (var _i = 0, _a = this._images; _i < _a.length; _i++) {\r\n            var image = _a[_i];\r\n            result = result.concat(image.getResourceInformation());\r\n        }\r\n        return result;\r\n    };\r\n    ImageSet.prototype.removeItem = function (item) {\r\n        if (item instanceof Image) {\r\n            var itemIndex = this._images.indexOf(item);\r\n            if (itemIndex >= 0) {\r\n                this._images.splice(itemIndex, 1);\r\n                item.setParent(null);\r\n                this.updateLayout();\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ImageSet.prototype.getJsonTypeName = function () {\r\n        return \"ImageSet\";\r\n    };\r\n    ImageSet.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setEnumProperty(Enums.Size, result, \"imageSize\", this.imageSize, Enums.Size.Medium);\r\n        if (this._images.length > 0) {\r\n            var images = [];\r\n            for (var _i = 0, _a = this._images; _i < _a.length; _i++) {\r\n                var image = _a[_i];\r\n                images.push(image.toJSON());\r\n            }\r\n            Utils.setProperty(result, \"images\", images);\r\n        }\r\n        return result;\r\n    };\r\n    ImageSet.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.imageSize = Utils.getEnumValueOrDefault(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n        if (json[\"images\"] != null) {\r\n            var jsonImages = json[\"images\"];\r\n            this._images = [];\r\n            for (var i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i], errors);\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    };\r\n    ImageSet.prototype.addImage = function (image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n            image.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    };\r\n    ImageSet.prototype.indexOf = function (cardElement) {\r\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\r\n    };\r\n    ImageSet.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        var speak = null;\r\n        if (this._images.length > 0) {\r\n            speak = '';\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                speak += this._images[i].renderSpeech();\r\n            }\r\n        }\r\n        return speak;\r\n    };\r\n    return ImageSet;\r\n}(CardElementContainer));\r\nexports.ImageSet = ImageSet;\r\nvar MediaSource = /** @class */ (function () {\r\n    function MediaSource(url, mimeType) {\r\n        if (url === void 0) { url = undefined; }\r\n        if (mimeType === void 0) { mimeType = undefined; }\r\n        this.url = url;\r\n        this.mimeType = mimeType;\r\n    }\r\n    MediaSource.prototype.parse = function (json, errors) {\r\n        this.mimeType = json[\"mimeType\"];\r\n        this.url = json[\"url\"];\r\n    };\r\n    MediaSource.prototype.toJSON = function () {\r\n        return {\r\n            mimeType: this.mimeType,\r\n            url: this.url\r\n        };\r\n    };\r\n    return MediaSource;\r\n}());\r\nexports.MediaSource = MediaSource;\r\nvar Media = /** @class */ (function (_super) {\r\n    __extends(Media, _super);\r\n    function Media() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.sources = [];\r\n        return _this;\r\n    }\r\n    Media.prototype.getPosterUrl = function () {\r\n        return this.poster ? this.poster : this.hostConfig.media.defaultPoster;\r\n    };\r\n    Media.prototype.processSources = function () {\r\n        this._selectedSources = [];\r\n        this._selectedMediaType = undefined;\r\n        for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {\r\n            var source = _a[_i];\r\n            var mimeComponents = source.mimeType.split('/');\r\n            if (mimeComponents.length == 2) {\r\n                if (!this._selectedMediaType) {\r\n                    var index = Media.supportedMediaTypes.indexOf(mimeComponents[0]);\r\n                    if (index >= 0) {\r\n                        this._selectedMediaType = Media.supportedMediaTypes[index];\r\n                    }\r\n                }\r\n                if (mimeComponents[0] == this._selectedMediaType) {\r\n                    this._selectedSources.push(source);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Media.prototype.renderPoster = function () {\r\n        var _this = this;\r\n        var playButtonArrowWidth = 12;\r\n        var playButtonArrowHeight = 15;\r\n        var posterRootElement = document.createElement(\"div\");\r\n        posterRootElement.className = \"ac-media-poster\";\r\n        posterRootElement.setAttribute(\"role\", \"contentinfo\");\r\n        posterRootElement.setAttribute(\"aria-label\", this.altText ? this.altText : \"Media content\");\r\n        posterRootElement.style.position = \"relative\";\r\n        posterRootElement.style.display = \"flex\";\r\n        var posterUrl = this.getPosterUrl();\r\n        if (posterUrl) {\r\n            var posterImageElement_1 = document.createElement(\"img\");\r\n            posterImageElement_1.style.width = \"100%\";\r\n            posterImageElement_1.style.height = \"100%\";\r\n            posterImageElement_1.onerror = function (e) {\r\n                posterImageElement_1.parentNode.removeChild(posterImageElement_1);\r\n                posterRootElement.classList.add(\"empty\");\r\n                posterRootElement.style.minHeight = \"150px\";\r\n            };\r\n            posterImageElement_1.src = posterUrl;\r\n            posterRootElement.appendChild(posterImageElement_1);\r\n        }\r\n        else {\r\n            posterRootElement.classList.add(\"empty\");\r\n            posterRootElement.style.minHeight = \"150px\";\r\n        }\r\n        if (this.hostConfig.supportsInteractivity && this._selectedSources.length > 0) {\r\n            var playButtonOuterElement = document.createElement(\"div\");\r\n            playButtonOuterElement.setAttribute(\"role\", \"button\");\r\n            playButtonOuterElement.setAttribute(\"aria-label\", \"Play media\");\r\n            playButtonOuterElement.className = \"ac-media-playButton\";\r\n            playButtonOuterElement.style.display = \"flex\";\r\n            playButtonOuterElement.style.alignItems = \"center\";\r\n            playButtonOuterElement.style.justifyContent = \"center\";\r\n            playButtonOuterElement.onclick = function (e) {\r\n                if (_this.hostConfig.media.allowInlinePlayback) {\r\n                    var mediaPlayerElement = _this.renderMediaPlayer();\r\n                    _this.renderedElement.innerHTML = \"\";\r\n                    _this.renderedElement.appendChild(mediaPlayerElement);\r\n                    mediaPlayerElement.play();\r\n                }\r\n                else {\r\n                    if (Media.onPlay) {\r\n                        Media.onPlay(_this);\r\n                    }\r\n                }\r\n            };\r\n            var playButtonInnerElement = document.createElement(\"div\");\r\n            playButtonInnerElement.className = \"ac-media-playButton-arrow\";\r\n            playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\r\n            playButtonInnerElement.style.borderTopWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderBottomWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.borderRightWidth = \"0\";\r\n            playButtonInnerElement.style.borderStyle = \"solid\";\r\n            playButtonInnerElement.style.borderTopColor = \"transparent\";\r\n            playButtonInnerElement.style.borderRightColor = \"transparent\";\r\n            playButtonInnerElement.style.borderBottomColor = \"transparent\";\r\n            playButtonInnerElement.style.transform = \"translate(\" + (playButtonArrowWidth / 10) + \"px,0px)\";\r\n            playButtonOuterElement.appendChild(playButtonInnerElement);\r\n            var playButtonContainer = document.createElement(\"div\");\r\n            playButtonContainer.style.position = \"absolute\";\r\n            playButtonContainer.style.left = \"0\";\r\n            playButtonContainer.style.top = \"0\";\r\n            playButtonContainer.style.width = \"100%\";\r\n            playButtonContainer.style.height = \"100%\";\r\n            playButtonContainer.style.display = \"flex\";\r\n            playButtonContainer.style.justifyContent = \"center\";\r\n            playButtonContainer.style.alignItems = \"center\";\r\n            playButtonContainer.appendChild(playButtonOuterElement);\r\n            posterRootElement.appendChild(playButtonContainer);\r\n        }\r\n        return posterRootElement;\r\n    };\r\n    Media.prototype.renderMediaPlayer = function () {\r\n        var mediaElement;\r\n        if (this._selectedMediaType == \"video\") {\r\n            var videoPlayer = document.createElement(\"video\");\r\n            var posterUrl = this.getPosterUrl();\r\n            if (posterUrl) {\r\n                videoPlayer.poster = posterUrl;\r\n            }\r\n            mediaElement = videoPlayer;\r\n        }\r\n        else {\r\n            mediaElement = document.createElement(\"audio\");\r\n        }\r\n        mediaElement.controls = true;\r\n        mediaElement.preload = \"none\";\r\n        mediaElement.style.width = \"100%\";\r\n        for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {\r\n            var source = _a[_i];\r\n            var src = document.createElement(\"source\");\r\n            src.src = source.url;\r\n            src.type = source.mimeType;\r\n            mediaElement.appendChild(src);\r\n        }\r\n        return mediaElement;\r\n    };\r\n    Media.prototype.internalRender = function () {\r\n        var element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\r\n        this.processSources();\r\n        element.appendChild(this.renderPoster());\r\n        return element;\r\n    };\r\n    Media.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.poster = json[\"poster\"];\r\n        this.altText = json[\"altText\"];\r\n        if (json[\"sources\"] != null) {\r\n            var jsonSources = json[\"sources\"];\r\n            this.sources = [];\r\n            for (var i = 0; i < jsonSources.length; i++) {\r\n                var source = new MediaSource();\r\n                source.parse(jsonSources[i], errors);\r\n                this.sources.push(source);\r\n            }\r\n        }\r\n    };\r\n    Media.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"poster\", this.poster);\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n        if (this.sources.length > 0) {\r\n            var serializedSources = [];\r\n            for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {\r\n                var source = _a[_i];\r\n                serializedSources.push(source.toJSON());\r\n            }\r\n            Utils.setProperty(result, \"sources\", serializedSources);\r\n        }\r\n        return result;\r\n    };\r\n    Media.prototype.getJsonTypeName = function () {\r\n        return \"Media\";\r\n    };\r\n    Media.prototype.getResourceInformation = function () {\r\n        var result = [];\r\n        var posterUrl = this.getPosterUrl();\r\n        if (!Utils.isNullOrEmpty(posterUrl)) {\r\n            result.push({ url: posterUrl, mimeType: \"image\" });\r\n        }\r\n        for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {\r\n            var mediaSource = _a[_i];\r\n            if (!Utils.isNullOrEmpty(mediaSource.url)) {\r\n                result.push({ url: mediaSource.url, mimeType: mediaSource.mimeType });\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Media.prototype.renderSpeech = function () {\r\n        return this.altText;\r\n    };\r\n    Object.defineProperty(Media.prototype, \"selectedMediaType\", {\r\n        get: function () {\r\n            return this._selectedMediaType;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Media.supportedMediaTypes = [\"audio\", \"video\"];\r\n    return Media;\r\n}(CardElement));\r\nexports.Media = Media;\r\nvar Input = /** @class */ (function (_super) {\r\n    __extends(Input, _super);\r\n    function Input() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Input.prototype.valueChanged = function () {\r\n        if (this.onValueChanged) {\r\n            this.onValueChanged(this);\r\n        }\r\n    };\r\n    Input.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"value\", this.renderedElement ? this.value : this.defaultValue);\r\n        return result;\r\n    };\r\n    Input.prototype.validate = function () {\r\n        if (!this.id) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All inputs must have a unique Id\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    Input.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.id = json[\"id\"];\r\n        this.defaultValue = json[\"value\"];\r\n    };\r\n    Input.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        if (this.title) {\r\n            return '<s>' + this.title + '</s>\\n';\r\n        }\r\n        return null;\r\n    };\r\n    Input.prototype.getAllInputs = function () {\r\n        return [this];\r\n    };\r\n    Object.defineProperty(Input.prototype, \"isInteractive\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Input;\r\n}(CardElement));\r\nexports.Input = Input;\r\nvar TextInput = /** @class */ (function (_super) {\r\n    __extends(TextInput, _super);\r\n    function TextInput() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.style = Enums.InputTextStyle.Text;\r\n        return _this;\r\n    }\r\n    TextInput.prototype.internalRender = function () {\r\n        var _this = this;\r\n        if (this.isMultiline) {\r\n            this._textareaElement = document.createElement(\"textarea\");\r\n            this._textareaElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\", \"ac-multiline\");\r\n            this._textareaElement.style.width = \"100%\";\r\n            this._textareaElement.tabIndex = 0;\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._textareaElement.placeholder = this.placeholder;\r\n                this._textareaElement.setAttribute(\"aria-label\", this.placeholder);\r\n            }\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._textareaElement.value = this.defaultValue;\r\n            }\r\n            if (this.maxLength > 0) {\r\n                this._textareaElement.maxLength = this.maxLength;\r\n            }\r\n            this._textareaElement.oninput = function () { _this.valueChanged(); };\r\n            return this._textareaElement;\r\n        }\r\n        else {\r\n            this._inputElement = document.createElement(\"input\");\r\n            this._inputElement.type = Enums.InputTextStyle[this.style].toLowerCase();\r\n            this._inputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\r\n            this._inputElement.style.width = \"100%\";\r\n            this._inputElement.tabIndex = 0;\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._inputElement.placeholder = this.placeholder;\r\n                this._inputElement.setAttribute(\"aria-label\", this.placeholder);\r\n            }\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._inputElement.value = this.defaultValue;\r\n            }\r\n            if (this.maxLength > 0) {\r\n                this._inputElement.maxLength = this.maxLength;\r\n            }\r\n            this._inputElement.oninput = function () { _this.valueChanged(); };\r\n            return this._inputElement;\r\n        }\r\n    };\r\n    TextInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Text\";\r\n    };\r\n    TextInput.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"maxLength\", this.maxLength, 0);\r\n        Utils.setProperty(result, \"isMultiline\", this.isMultiline, false);\r\n        Utils.setEnumProperty(Enums.InputTextStyle, result, \"style\", this.style, Enums.InputTextStyle.Text);\r\n        return result;\r\n    };\r\n    TextInput.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.maxLength = json[\"maxLength\"];\r\n        this.isMultiline = json[\"isMultiline\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.style = Utils.getEnumValueOrDefault(Enums.InputTextStyle, json[\"style\"], this.style);\r\n    };\r\n    Object.defineProperty(TextInput.prototype, \"value\", {\r\n        get: function () {\r\n            if (this.isMultiline) {\r\n                return this._textareaElement ? this._textareaElement.value : null;\r\n            }\r\n            else {\r\n                return this._inputElement ? this._inputElement.value : null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return TextInput;\r\n}(Input));\r\nexports.TextInput = TextInput;\r\nvar ToggleInput = /** @class */ (function (_super) {\r\n    __extends(ToggleInput, _super);\r\n    function ToggleInput() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.valueOn = \"true\";\r\n        _this.valueOff = \"false\";\r\n        return _this;\r\n    }\r\n    ToggleInput.prototype.internalRender = function () {\r\n        var _this = this;\r\n        var element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\");\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n        element.style.alignItems = \"center\";\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.id = generateUniqueId();\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n        this._checkboxInputElement.onchange = function () { _this.valueChanged(); };\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n        if (!Utils.isNullOrEmpty(this.title) || this.isDesignMode()) {\r\n            var label = new Label();\r\n            label.forElementId = this._checkboxInputElement.id;\r\n            label.hostConfig = this.hostConfig;\r\n            label.text = Utils.isNullOrEmpty(this.title) ? this.getJsonTypeName() : this.title;\r\n            label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n            var labelElement = label.render();\r\n            labelElement.style.display = \"inline-block\";\r\n            labelElement.style.flex = \"1 1 auto\";\r\n            labelElement.style.marginLeft = \"6px\";\r\n            labelElement.style.verticalAlign = \"middle\";\r\n            Utils.appendChild(element, labelElement);\r\n        }\r\n        return element;\r\n    };\r\n    ToggleInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Toggle\";\r\n    };\r\n    ToggleInput.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"valueOn\", this.valueOn, \"true\");\r\n        Utils.setProperty(result, \"valueOff\", this.valueOff, \"false\");\r\n        return result;\r\n    };\r\n    ToggleInput.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.title = json[\"title\"];\r\n        this.valueOn = Utils.getValueOrDefault(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getValueOrDefault(json[\"valueOff\"], this.valueOff);\r\n    };\r\n    Object.defineProperty(ToggleInput.prototype, \"value\", {\r\n        get: function () {\r\n            if (this._checkboxInputElement) {\r\n                return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ToggleInput;\r\n}(Input));\r\nexports.ToggleInput = ToggleInput;\r\nvar Choice = /** @class */ (function () {\r\n    function Choice(title, value) {\r\n        if (title === void 0) { title = undefined; }\r\n        if (value === void 0) { value = undefined; }\r\n        this.title = title;\r\n        this.value = value;\r\n    }\r\n    Choice.prototype.toJSON = function () {\r\n        return { title: this.title, value: this.value };\r\n    };\r\n    return Choice;\r\n}());\r\nexports.Choice = Choice;\r\nvar ChoiceSetInput = /** @class */ (function (_super) {\r\n    __extends(ChoiceSetInput, _super);\r\n    function ChoiceSetInput() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.choices = [];\r\n        return _this;\r\n    }\r\n    ChoiceSetInput.getUniqueCategoryName = function () {\r\n        var uniqueCwtegoryName = \"__ac-category\" + ChoiceSetInput.uniqueCategoryCounter;\r\n        ChoiceSetInput.uniqueCategoryCounter++;\r\n        return uniqueCwtegoryName;\r\n    };\r\n    ChoiceSetInput.prototype.internalRender = function () {\r\n        var _this = this;\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\");\r\n                this._selectElement.style.width = \"100%\";\r\n                var option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n                option.value = \"\";\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n                Utils.appendChild(this._selectElement, option);\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n                this._selectElement.onchange = function () { _this.valueChanged(); };\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                var uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\r\n                var element = document.createElement(\"div\");\r\n                element.className = this.hostConfig.makeCssClassName(\"ac-input\");\r\n                element.style.width = \"100%\";\r\n                this._toggleInputs = [];\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var radioInput = document.createElement(\"input\");\r\n                    radioInput.id = generateUniqueId();\r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = Utils.isNullOrEmpty(this.id) ? uniqueCategoryName : this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n                    radioInput.onchange = function () { _this.valueChanged(); };\r\n                    this._toggleInputs.push(radioInput);\r\n                    var label = new Label();\r\n                    label.forElementId = radioInput.id;\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                    label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                    var labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.flex = \"1 1 auto\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n                    var compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            var defaultValues = this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : null;\r\n            var element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-input\");\r\n            element.style.width = \"100%\";\r\n            this._toggleInputs = [];\r\n            for (var i = 0; i < this.choices.length; i++) {\r\n                var checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.id = generateUniqueId();\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n                checkboxInput.onchange = function () { _this.valueChanged(); };\r\n                this._toggleInputs.push(checkboxInput);\r\n                var label = new Label();\r\n                label.forElementId = checkboxInput.id;\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n                var labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.flex = \"1 1 auto\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n                var compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n                compoundInput.style.alignItems = \"center\";\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n            return element;\r\n        }\r\n    };\r\n    ChoiceSetInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.ChoiceSet\";\r\n    };\r\n    ChoiceSetInput.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        if (this.choices.length > 0) {\r\n            var choices = [];\r\n            for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {\r\n                var choice = _a[_i];\r\n                choices.push(choice.toJSON());\r\n            }\r\n            Utils.setProperty(result, \"choices\", choices);\r\n        }\r\n        if (!this.isCompact) {\r\n            Utils.setProperty(result, \"style\", \"expanded\", false);\r\n        }\r\n        Utils.setProperty(result, \"isMultiSelect\", this.isMultiSelect, false);\r\n        return result;\r\n    };\r\n    ChoiceSetInput.prototype.validate = function () {\r\n        var result = [];\r\n        if (this.choices.length == 0) {\r\n            result = [{ error: Enums.ValidationError.CollectionCantBeEmpty, message: \"An Input.ChoiceSet must have at least one choice defined.\" }];\r\n        }\r\n        for (var i = 0; i < this.choices.length; i++) {\r\n            if (!this.choices[i].title || !this.choices[i].value) {\r\n                result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\" }]);\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ChoiceSetInput.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = json[\"isMultiSelect\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.choices = [];\r\n        if (json[\"choices\"] != undefined) {\r\n            var choiceArray = json[\"choices\"];\r\n            for (var i = 0; i < choiceArray.length; i++) {\r\n                var choice = new Choice();\r\n                choice.title = choiceArray[i][\"title\"];\r\n                choice.value = choiceArray[i][\"value\"];\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ChoiceSetInput.prototype, \"value\", {\r\n        get: function () {\r\n            if (!this.isMultiSelect) {\r\n                if (this.isCompact) {\r\n                    return this._selectElement ? this._selectElement.value : null;\r\n                }\r\n                else {\r\n                    if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                        return null;\r\n                    }\r\n                    for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                        if (this._toggleInputs[i].checked) {\r\n                            return this._toggleInputs[i].value;\r\n                        }\r\n                    }\r\n                    return null;\r\n                }\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n                var result = \"\";\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        if (result != \"\") {\r\n                            result += this.hostConfig.choiceSetInputValueSeparator;\r\n                        }\r\n                        result += this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n                return result == \"\" ? null : result;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ChoiceSetInput.uniqueCategoryCounter = 0;\r\n    return ChoiceSetInput;\r\n}(Input));\r\nexports.ChoiceSetInput = ChoiceSetInput;\r\nvar NumberInput = /** @class */ (function (_super) {\r\n    __extends(NumberInput, _super);\r\n    function NumberInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    NumberInput.prototype.internalRender = function () {\r\n        var _this = this;\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.setAttribute(\"type\", \"number\");\r\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-numberInput\");\r\n        this._numberInputElement.setAttribute(\"min\", this.min);\r\n        this._numberInputElement.setAttribute(\"max\", this.max);\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n        this._numberInputElement.oninput = function () { _this.valueChanged(); };\r\n        return this._numberInputElement;\r\n    };\r\n    NumberInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Number\";\r\n    };\r\n    NumberInput.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n        return result;\r\n    };\r\n    NumberInput.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.min = json[\"min\"];\r\n        this.max = json[\"max\"];\r\n    };\r\n    Object.defineProperty(NumberInput.prototype, \"value\", {\r\n        get: function () {\r\n            return this._numberInputElement ? this._numberInputElement.value : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return NumberInput;\r\n}(Input));\r\nexports.NumberInput = NumberInput;\r\nvar DateInput = /** @class */ (function (_super) {\r\n    __extends(DateInput, _super);\r\n    function DateInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DateInput.prototype.internalRender = function () {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.setAttribute(\"type\", \"date\");\r\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-dateInput\");\r\n        this._dateInputElement.style.width = \"100%\";\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n        return this._dateInputElement;\r\n    };\r\n    DateInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Date\";\r\n    };\r\n    Object.defineProperty(DateInput.prototype, \"value\", {\r\n        get: function () {\r\n            return this._dateInputElement ? this._dateInputElement.value : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DateInput;\r\n}(Input));\r\nexports.DateInput = DateInput;\r\nvar TimeInput = /** @class */ (function (_super) {\r\n    __extends(TimeInput, _super);\r\n    function TimeInput() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeInput.prototype.internalRender = function () {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.setAttribute(\"type\", \"time\");\r\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-timeInput\");\r\n        this._timeInputElement.style.width = \"100%\";\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n        return this._timeInputElement;\r\n    };\r\n    TimeInput.prototype.getJsonTypeName = function () {\r\n        return \"Input.Time\";\r\n    };\r\n    Object.defineProperty(TimeInput.prototype, \"value\", {\r\n        get: function () {\r\n            return this._timeInputElement ? this._timeInputElement.value : null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return TimeInput;\r\n}(Input));\r\nexports.TimeInput = TimeInput;\r\nvar ActionButtonState;\r\n(function (ActionButtonState) {\r\n    ActionButtonState[ActionButtonState[\"Normal\"] = 0] = \"Normal\";\r\n    ActionButtonState[ActionButtonState[\"Expanded\"] = 1] = \"Expanded\";\r\n    ActionButtonState[ActionButtonState[\"Subdued\"] = 2] = \"Subdued\";\r\n})(ActionButtonState || (ActionButtonState = {}));\r\nvar ActionButton = /** @class */ (function () {\r\n    function ActionButton(action, parentContainerStyle) {\r\n        var _this = this;\r\n        this._element = null;\r\n        this._state = ActionButtonState.Normal;\r\n        this.onClick = null;\r\n        this.action = action;\r\n        this._parentContainerStyle = parentContainerStyle;\r\n        this.action.render();\r\n        this.action.renderedElement.onclick = function (e) { _this.click(); };\r\n        this.updateCssStyle();\r\n    }\r\n    ActionButton.prototype.updateCssStyle = function () {\r\n        var hostConfig = this.action.parent.hostConfig;\r\n        this.action.renderedElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n        this.action.renderedElement.classList.add(\"style-\" + this._parentContainerStyle);\r\n        if (this.action instanceof ShowCardAction) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expandable\"));\r\n        }\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"expanded\"));\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"subdued\"));\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\r\n                break;\r\n        }\r\n        if (this.action.isPrimary) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"primary\"));\r\n        }\r\n    };\r\n    ActionButton.prototype.click = function () {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    };\r\n    Object.defineProperty(ActionButton.prototype, \"state\", {\r\n        get: function () {\r\n            return this._state;\r\n        },\r\n        set: function (value) {\r\n            this._state = value;\r\n            this.updateCssStyle();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ActionButton;\r\n}());\r\nvar Action = /** @class */ (function () {\r\n    function Action() {\r\n        this._parent = null;\r\n        this._actionCollection = null; // hold the reference to its action collection\r\n        this._renderedElement = null;\r\n    }\r\n    Action.prototype.setCollection = function (actionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    };\r\n    Action.prototype.addCssClasses = function (element) {\r\n        // Do nothing in base implementation\r\n    };\r\n    Action.prototype.toJSON = function () {\r\n        var result = {};\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"iconUrl\", this.iconUrl);\r\n        return result;\r\n    };\r\n    Action.prototype.render = function () {\r\n        // Cache hostConfig for perf\r\n        var hostConfig = this.parent.hostConfig;\r\n        var buttonElement = document.createElement(\"button\");\r\n        buttonElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n        this.addCssClasses(buttonElement);\r\n        buttonElement.setAttribute(\"aria-label\", this.title);\r\n        buttonElement.type = \"button\";\r\n        buttonElement.style.display = \"flex\";\r\n        buttonElement.style.alignItems = \"center\";\r\n        buttonElement.style.justifyContent = \"center\";\r\n        var hasTitle = !Utils.isNullOrEmpty(this.title);\r\n        var titleElement = document.createElement(\"div\");\r\n        titleElement.style.overflow = \"hidden\";\r\n        titleElement.style.textOverflow = \"ellipsis\";\r\n        if (!(hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle || hostConfig.actions.allowTitleToWrap)) {\r\n            titleElement.style.whiteSpace = \"nowrap\";\r\n        }\r\n        if (hasTitle) {\r\n            titleElement.innerText = this.title;\r\n        }\r\n        if (Utils.isNullOrEmpty(this.iconUrl)) {\r\n            buttonElement.classList.add(\"noIcon\");\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n        else {\r\n            var iconElement = document.createElement(\"img\");\r\n            iconElement.src = this.iconUrl;\r\n            iconElement.style.width = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.height = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.flex = \"0 0 auto\";\r\n            if (hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle) {\r\n                buttonElement.classList.add(\"iconAbove\");\r\n                buttonElement.style.flexDirection = \"column\";\r\n                if (hasTitle) {\r\n                    iconElement.style.marginBottom = \"4px\";\r\n                }\r\n            }\r\n            else {\r\n                buttonElement.classList.add(\"iconLeft\");\r\n                if (hasTitle) {\r\n                    iconElement.style.marginRight = \"4px\";\r\n                }\r\n            }\r\n            buttonElement.appendChild(iconElement);\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n        this._renderedElement = buttonElement;\r\n    };\r\n    Action.prototype.setParent = function (value) {\r\n        this._parent = value;\r\n    };\r\n    Action.prototype.execute = function () {\r\n        if (this.onExecute) {\r\n            this.onExecute(this);\r\n        }\r\n        raiseExecuteActionEvent(this);\r\n    };\r\n    // Expand the action card pane with a inline status card\r\n    // Null status will clear the status bar\r\n    Action.prototype.setStatus = function (status) {\r\n        if (this._actionCollection == null) {\r\n            return;\r\n        }\r\n        if (status) {\r\n            var statusCard = new InlineAdaptiveCard();\r\n            statusCard.parse(status);\r\n            this._actionCollection.showStatusCard(statusCard);\r\n        }\r\n        else {\r\n            this._actionCollection.hideStatusCard();\r\n        }\r\n    };\r\n    Action.prototype.validate = function () {\r\n        return [];\r\n    };\r\n    Action.prototype.prepare = function (inputs) {\r\n        // Do nothing in base implementation\r\n    };\r\n    ;\r\n    Action.prototype.parse = function (json, errors) {\r\n        raiseParseActionEvent(this, json, errors);\r\n        this.id = json[\"id\"];\r\n        if (!json[\"title\"] && json[\"title\"] !== \"\") {\r\n            raiseParseError({\r\n                error: Enums.ValidationError.PropertyCantBeNull,\r\n                message: \"Actions should always have a title.\"\r\n            }, errors);\r\n        }\r\n        this.title = json[\"title\"];\r\n        this.iconUrl = json[\"iconUrl\"];\r\n    };\r\n    Action.prototype.remove = function () {\r\n        if (this._actionCollection) {\r\n            return this._actionCollection.removeAction(this);\r\n        }\r\n        return false;\r\n    };\r\n    Action.prototype.getAllInputs = function () {\r\n        return [];\r\n    };\r\n    Action.prototype.getResourceInformation = function () {\r\n        if (!Utils.isNullOrEmpty(this.iconUrl)) {\r\n            return [{ url: this.iconUrl, mimeType: \"image\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    Action.prototype.getActionById = function (id) {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    };\r\n    Object.defineProperty(Action.prototype, \"parent\", {\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Action.prototype, \"renderedElement\", {\r\n        get: function () {\r\n            return this._renderedElement;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Action;\r\n}());\r\nexports.Action = Action;\r\nvar SubmitAction = /** @class */ (function (_super) {\r\n    __extends(SubmitAction, _super);\r\n    function SubmitAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._isPrepared = false;\r\n        return _this;\r\n    }\r\n    SubmitAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.Submit\";\r\n    };\r\n    SubmitAction.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"data\", this._originalData);\r\n        return result;\r\n    };\r\n    SubmitAction.prototype.prepare = function (inputs) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            var inputValue = inputs[i].value;\r\n            if (inputValue != null) {\r\n                this._processedData[inputs[i].id] = inputs[i].value;\r\n            }\r\n        }\r\n        this._isPrepared = true;\r\n    };\r\n    SubmitAction.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.data = json[\"data\"];\r\n    };\r\n    Object.defineProperty(SubmitAction.prototype, \"data\", {\r\n        get: function () {\r\n            return this._isPrepared ? this._processedData : this._originalData;\r\n        },\r\n        set: function (value) {\r\n            this._originalData = value;\r\n            this._isPrepared = false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SubmitAction;\r\n}(Action));\r\nexports.SubmitAction = SubmitAction;\r\nvar OpenUrlAction = /** @class */ (function (_super) {\r\n    __extends(OpenUrlAction, _super);\r\n    function OpenUrlAction() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    OpenUrlAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.OpenUrl\";\r\n    };\r\n    OpenUrlAction.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n        return result;\r\n    };\r\n    OpenUrlAction.prototype.validate = function () {\r\n        if (!this.url) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.OpenUrl must have its url property set.\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    OpenUrlAction.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.url = json[\"url\"];\r\n    };\r\n    return OpenUrlAction;\r\n}(Action));\r\nexports.OpenUrlAction = OpenUrlAction;\r\nvar HttpHeader = /** @class */ (function () {\r\n    function HttpHeader(name, value) {\r\n        if (name === void 0) { name = \"\"; }\r\n        if (value === void 0) { value = \"\"; }\r\n        this._value = new Utils.StringWithSubstitutions();\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n    HttpHeader.prototype.toJSON = function () {\r\n        return { name: this.name, value: this._value.getOriginal() };\r\n    };\r\n    HttpHeader.prototype.prepare = function (inputs) {\r\n        this._value.substituteInputValues(inputs, Utils.ContentTypes.applicationXWwwFormUrlencoded);\r\n    };\r\n    Object.defineProperty(HttpHeader.prototype, \"value\", {\r\n        get: function () {\r\n            return this._value.get();\r\n        },\r\n        set: function (newValue) {\r\n            this._value.set(newValue);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return HttpHeader;\r\n}());\r\nexports.HttpHeader = HttpHeader;\r\nvar HttpAction = /** @class */ (function (_super) {\r\n    __extends(HttpAction, _super);\r\n    function HttpAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._url = new Utils.StringWithSubstitutions();\r\n        _this._body = new Utils.StringWithSubstitutions();\r\n        _this._headers = [];\r\n        return _this;\r\n    }\r\n    HttpAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.Http\";\r\n    };\r\n    HttpAction.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"method\", this.method);\r\n        Utils.setProperty(result, \"url\", this._url.getOriginal());\r\n        Utils.setProperty(result, \"body\", this._body.getOriginal());\r\n        if (this._headers.length > 0) {\r\n            var headers = [];\r\n            for (var _i = 0, _a = this._headers; _i < _a.length; _i++) {\r\n                var header = _a[_i];\r\n                headers.push(header.toJSON());\r\n            }\r\n            Utils.setProperty(result, \"headers\", headers);\r\n        }\r\n        return result;\r\n    };\r\n    HttpAction.prototype.validate = function () {\r\n        var result = [];\r\n        if (!this.url) {\r\n            result = [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.Http must have its url property set.\" }];\r\n        }\r\n        if (this.headers.length > 0) {\r\n            for (var i = 0; i < this.headers.length; i++) {\r\n                if (!this.headers[i].name || !this.headers[i].value) {\r\n                    result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All headers of an Action.Http must have their name and value properties set.\" }]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    HttpAction.prototype.prepare = function (inputs) {\r\n        this._url.substituteInputValues(inputs, Utils.ContentTypes.applicationXWwwFormUrlencoded);\r\n        var contentType = Utils.ContentTypes.applicationJson;\r\n        for (var i = 0; i < this._headers.length; i++) {\r\n            this._headers[i].prepare(inputs);\r\n            if (this._headers[i].name && this._headers[i].name.toLowerCase() == \"content-type\") {\r\n                contentType = this._headers[i].value;\r\n            }\r\n        }\r\n        this._body.substituteInputValues(inputs, contentType);\r\n    };\r\n    ;\r\n    HttpAction.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.url = json[\"url\"];\r\n        this.method = json[\"method\"];\r\n        this.body = json[\"body\"];\r\n        this._headers = [];\r\n        if (json[\"headers\"] != null) {\r\n            var jsonHeaders = json[\"headers\"];\r\n            for (var i = 0; i < jsonHeaders.length; i++) {\r\n                var httpHeader = new HttpHeader();\r\n                httpHeader.name = jsonHeaders[i][\"name\"];\r\n                httpHeader.value = jsonHeaders[i][\"value\"];\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(HttpAction.prototype, \"url\", {\r\n        get: function () {\r\n            return this._url.get();\r\n        },\r\n        set: function (value) {\r\n            this._url.set(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpAction.prototype, \"body\", {\r\n        get: function () {\r\n            return this._body.get();\r\n        },\r\n        set: function (value) {\r\n            this._body.set(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(HttpAction.prototype, \"headers\", {\r\n        get: function () {\r\n            return this._headers ? this._headers : [];\r\n        },\r\n        set: function (value) {\r\n            this._headers = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return HttpAction;\r\n}(Action));\r\nexports.HttpAction = HttpAction;\r\nvar ShowCardAction = /** @class */ (function (_super) {\r\n    __extends(ShowCardAction, _super);\r\n    function ShowCardAction() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.card = new InlineAdaptiveCard();\r\n        return _this;\r\n    }\r\n    ShowCardAction.prototype.addCssClasses = function (element) {\r\n        _super.prototype.addCssClasses.call(this, element);\r\n        element.classList.add(this.parent.hostConfig.makeCssClassName(\"expandable\"));\r\n    };\r\n    ShowCardAction.prototype.getJsonTypeName = function () {\r\n        return \"Action.ShowCard\";\r\n    };\r\n    ShowCardAction.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        if (this.card) {\r\n            Utils.setProperty(result, \"card\", this.card.toJSON());\r\n        }\r\n        return result;\r\n    };\r\n    ShowCardAction.prototype.validate = function () {\r\n        return this.card.validate();\r\n    };\r\n    ShowCardAction.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this.card.parse(json[\"card\"], errors);\r\n    };\r\n    ShowCardAction.prototype.setParent = function (value) {\r\n        _super.prototype.setParent.call(this, value);\r\n        this.card.setParent(value);\r\n    };\r\n    ShowCardAction.prototype.getAllInputs = function () {\r\n        return this.card.getAllInputs();\r\n    };\r\n    ShowCardAction.prototype.getResourceInformation = function () {\r\n        return _super.prototype.getResourceInformation.call(this).concat(this.card.getResourceInformation());\r\n    };\r\n    ShowCardAction.prototype.getActionById = function (id) {\r\n        var result = _super.prototype.getActionById.call(this, id);\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n        return result;\r\n    };\r\n    return ShowCardAction;\r\n}(Action));\r\nexports.ShowCardAction = ShowCardAction;\r\nvar ActionCollection = /** @class */ (function () {\r\n    function ActionCollection(owner) {\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n        this._statusCard = null;\r\n        this._actionCard = null;\r\n        this.items = [];\r\n        this.buttons = [];\r\n        this._owner = owner;\r\n    }\r\n    ActionCollection.prototype.isActionCardContainerVisible = function () {\r\n        return this._actionCardContainer.children.length > 0;\r\n    };\r\n    ActionCollection.prototype.refreshContainer = function () {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n        if (this._actionCard === null && this._statusCard === null) {\r\n            this._actionCardContainer.style.padding = \"0px\";\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n            return;\r\n        }\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n        var padding = this._owner.getNonZeroPadding().toSpacingDefinition(this._owner.hostConfig);\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = padding.left + \"px\";\r\n            this._actionCard.style.paddingRight = padding.right + \"px\";\r\n            this._actionCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n        if (this._statusCard !== null) {\r\n            this._statusCard.style.paddingLeft = padding.left + \"px\";\r\n            this._statusCard.style.paddingRight = padding.right + \"px\";\r\n            this._statusCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._statusCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n            Utils.appendChild(this._actionCardContainer, this._statusCard);\r\n        }\r\n    };\r\n    ActionCollection.prototype.layoutChanged = function () {\r\n        this._owner.getRootElement().updateLayout();\r\n    };\r\n    ActionCollection.prototype.hideActionCard = function () {\r\n        var previouslyExpandedAction = this._expandedAction;\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n        this.refreshContainer();\r\n        if (previouslyExpandedAction) {\r\n            this.layoutChanged();\r\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\r\n        }\r\n    };\r\n    ActionCollection.prototype.showActionCard = function (action, suppressStyle, raiseEvent) {\r\n        if (suppressStyle === void 0) { suppressStyle = false; }\r\n        if (raiseEvent === void 0) { raiseEvent = true; }\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n        action.card.suppressStyle = suppressStyle;\r\n        var renderedCard = action.card.render();\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n        this.refreshContainer();\r\n        if (raiseEvent) {\r\n            this.layoutChanged();\r\n            raiseInlineCardExpandedEvent(action, true);\r\n        }\r\n    };\r\n    ActionCollection.prototype.collapseExpandedAction = function () {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            this.buttons[i].state = ActionButtonState.Normal;\r\n        }\r\n        this.hideActionCard();\r\n    };\r\n    ActionCollection.prototype.expandShowCardAction = function (action, raiseEvent) {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].action !== action) {\r\n                this.buttons[i].state = ActionButtonState.Subdued;\r\n            }\r\n            else {\r\n                this.buttons[i].state = ActionButtonState.Expanded;\r\n            }\r\n        }\r\n        this.showActionCard(action, !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()), raiseEvent);\r\n    };\r\n    ActionCollection.prototype.actionClicked = function (actionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this.buttons.length; i++) {\r\n                this.buttons[i].state = ActionButtonState.Normal;\r\n            }\r\n            this.hideStatusCard();\r\n            this.hideActionCard();\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            this.hideStatusCard();\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                this.collapseExpandedAction();\r\n            }\r\n            else {\r\n                this.expandShowCardAction(actionButton.action, true);\r\n            }\r\n        }\r\n    };\r\n    ActionCollection.prototype.getParentContainer = function () {\r\n        if (this._owner instanceof Container) {\r\n            return this._owner;\r\n        }\r\n        else {\r\n            return this._owner.getParentContainer();\r\n        }\r\n    };\r\n    ActionCollection.prototype.findActionButton = function (action) {\r\n        for (var _i = 0, _a = this.buttons; _i < _a.length; _i++) {\r\n            var actionButton = _a[_i];\r\n            if (actionButton.action == action) {\r\n                return actionButton;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    ActionCollection.prototype.toJSON = function () {\r\n        if (this.items.length > 0) {\r\n            var result = [];\r\n            for (var _i = 0, _a = this.items; _i < _a.length; _i++) {\r\n                var action = _a[_i];\r\n                result.push(action.toJSON());\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ActionCollection.prototype.showStatusCard = function (status) {\r\n        status.setParent(this._owner);\r\n        this._statusCard = status.render();\r\n        this.refreshContainer();\r\n    };\r\n    ActionCollection.prototype.hideStatusCard = function () {\r\n        this._statusCard = null;\r\n        this.refreshContainer();\r\n    };\r\n    ActionCollection.prototype.getActionById = function (id) {\r\n        var result = null;\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ActionCollection.prototype.validate = function () {\r\n        var result = [];\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            result.push({\r\n                error: Enums.ValidationError.TooManyActions,\r\n                message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n            });\r\n        }\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            result.push({\r\n                error: Enums.ValidationError.InteractivityNotAllowed,\r\n                message: \"Interactivity is not allowed.\"\r\n            });\r\n        }\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            if (!isActionAllowed(this.items[i], this._owner.getForbiddenActionTypes())) {\r\n                result.push({\r\n                    error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                    message: \"Actions of type \" + this.items[i].getJsonTypeName() + \" are not allowe.\"\r\n                });\r\n            }\r\n        }\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].validate());\r\n        }\r\n        return result;\r\n    };\r\n    ActionCollection.prototype.render = function (orientation, isDesignMode) {\r\n        var _this = this;\r\n        if (!this._owner.hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n        var element = document.createElement(\"div\");\r\n        var maxActions = this._owner.hostConfig.actions.maxActions ? Math.min(this._owner.hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n        var forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n        this._renderedActionCount = 0;\r\n        if (this._owner.hostConfig.actions.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[0], forbiddenActionTypes)) {\r\n            this.showActionCard(this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            var buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.className = this._owner.hostConfig.makeCssClassName(\"ac-actionSet\");\r\n            buttonStrip.style.display = \"flex\";\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            var parentContainerStyle = this.getParentContainer().style;\r\n            for (var i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    var actionButton = this.findActionButton(this.items[i]);\r\n                    if (!actionButton) {\r\n                        actionButton = new ActionButton(this.items[i], parentContainerStyle);\r\n                        actionButton.action.renderedElement.style.overflow = \"hidden\";\r\n                        actionButton.action.renderedElement.style.overflow = \"table-cell\";\r\n                        actionButton.action.renderedElement.style.flex = this._owner.hostConfig.actions.actionAlignment === Enums.ActionAlignment.Stretch ? \"0 1 100%\" : \"0 1 auto\";\r\n                        actionButton.onClick = function (ab) { _this.actionClicked(ab); };\r\n                        this.buttons.push(actionButton);\r\n                    }\r\n                    buttonStrip.appendChild(actionButton.action.renderedElement);\r\n                    this._renderedActionCount++;\r\n                    if (this._renderedActionCount >= this._owner.hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (this._owner.hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n            var buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].state == ActionButtonState.Expanded) {\r\n                this.expandShowCardAction(this.buttons[i].action, false);\r\n                break;\r\n            }\r\n        }\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    };\r\n    ActionCollection.prototype.addAction = function (action) {\r\n        if ((!action.parent || action.parent === this._owner) && this.items.indexOf(action) < 0) {\r\n            this.items.push(action);\r\n            if (!action.parent) {\r\n                action.setParent(this._owner);\r\n            }\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\");\r\n        }\r\n    };\r\n    ActionCollection.prototype.removeAction = function (action) {\r\n        if (this.expandedAction && this._expandedAction == action) {\r\n            this.collapseExpandedAction();\r\n        }\r\n        var actionIndex = this.items.indexOf(action);\r\n        if (actionIndex >= 0) {\r\n            this.items.splice(actionIndex, 1);\r\n            action.setParent(null);\r\n            invokeSetCollection(action, null);\r\n            for (var i = 0; i < this.buttons.length; i++) {\r\n                if (this.buttons[i].action == action) {\r\n                    this.buttons.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    ActionCollection.prototype.clear = function () {\r\n        this.items = [];\r\n        this.buttons = [];\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n    };\r\n    ActionCollection.prototype.getAllInputs = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n        return result;\r\n    };\r\n    ActionCollection.prototype.getResourceInformation = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].getResourceInformation());\r\n        }\r\n        return result;\r\n    };\r\n    Object.defineProperty(ActionCollection.prototype, \"renderedActionCount\", {\r\n        get: function () {\r\n            return this._renderedActionCount;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ActionCollection.prototype, \"expandedAction\", {\r\n        get: function () {\r\n            return this._expandedAction;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ActionCollection;\r\n}());\r\nvar ActionSet = /** @class */ (function (_super) {\r\n    __extends(ActionSet, _super);\r\n    function ActionSet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.orientation = null;\r\n        _this._actionCollection = new ActionCollection(_this);\r\n        return _this;\r\n    }\r\n    ActionSet.prototype.internalRender = function () {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation, this.isDesignMode());\r\n    };\r\n    ActionSet.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setEnumProperty(Enums.Orientation, result, \"orientation\", this.orientation);\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n        return result;\r\n    };\r\n    ActionSet.prototype.isBleeding = function () {\r\n        return this._actionCollection.expandedAction ? true : false;\r\n    };\r\n    ActionSet.prototype.getJsonTypeName = function () {\r\n        return \"ActionSet\";\r\n    };\r\n    ActionSet.prototype.getActionCount = function () {\r\n        return this._actionCollection.items.length;\r\n    };\r\n    ActionSet.prototype.getActionAt = function (index) {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            _super.prototype.getActionAt.call(this, index);\r\n        }\r\n    };\r\n    ActionSet.prototype.validate = function () {\r\n        return this._actionCollection.validate();\r\n    };\r\n    ActionSet.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        var jsonOrientation = json[\"orientation\"];\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValueOrDefault(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"];\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                var action = createActionInstance(jsonActions[i], errors);\r\n                if (action) {\r\n                    action.setParent(this);\r\n                    action.parse(jsonActions[i]);\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ActionSet.prototype.addAction = function (action) {\r\n        if (action != null) {\r\n            this._actionCollection.addAction(action);\r\n        }\r\n    };\r\n    ActionSet.prototype.getAllInputs = function () {\r\n        return this._actionCollection.getAllInputs();\r\n    };\r\n    ActionSet.prototype.getResourceInformation = function () {\r\n        return this._actionCollection.getResourceInformation();\r\n    };\r\n    ActionSet.prototype.renderSpeech = function () {\r\n        // TODO: What's the right thing to do here?\r\n        return \"\";\r\n    };\r\n    Object.defineProperty(ActionSet.prototype, \"isInteractive\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ActionSet;\r\n}(CardElement));\r\nexports.ActionSet = ActionSet;\r\nvar BackgroundImage = /** @class */ (function () {\r\n    function BackgroundImage() {\r\n        this.mode = Enums.BackgroundImageMode.Stretch;\r\n        this.horizontalAlignment = Enums.HorizontalAlignment.Left;\r\n        this.verticalAlignment = Enums.VerticalAlignment.Top;\r\n    }\r\n    BackgroundImage.prototype.parse = function (json, errors) {\r\n        this.url = json[\"url\"];\r\n        this.mode = Utils.getEnumValueOrDefault(Enums.BackgroundImageMode, json[\"mode\"], this.mode);\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    };\r\n    BackgroundImage.prototype.apply = function (element) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n            switch (this.mode) {\r\n                case Enums.BackgroundImageMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.Stretch:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return BackgroundImage;\r\n}());\r\nexports.BackgroundImage = BackgroundImage;\r\nvar Container = /** @class */ (function (_super) {\r\n    __extends(Container, _super);\r\n    function Container() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._items = [];\r\n        _this._renderedItems = [];\r\n        _this._style = null;\r\n        _this.verticalContentAlignment = Enums.VerticalAlignment.Top;\r\n        return _this;\r\n    }\r\n    Container.prototype.isElementAllowed = function (element, forbiddenElementTypes) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n        if (forbiddenElementTypes) {\r\n            for (var i = 0; i < forbiddenElementTypes.length; i++) {\r\n                if (element.getJsonTypeName() === forbiddenElementTypes[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    Container.prototype.insertItemAt = function (item, index) {\r\n        if (!item.parent) {\r\n            if (item.isStandalone) {\r\n                if (index < 0 || index >= this._items.length) {\r\n                    this._items.push(item);\r\n                }\r\n                else {\r\n                    this._items.splice(index, 0, item);\r\n                }\r\n                item.setParent(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\");\r\n        }\r\n    };\r\n    Object.defineProperty(Container.prototype, \"hasExplicitStyle\", {\r\n        get: function () {\r\n            return this._style != null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Container.prototype.getItemsCollectionPropertyName = function () {\r\n        return \"items\";\r\n    };\r\n    Container.prototype.isLastElementBleeding = function () {\r\n        return this._renderedItems.length > 0 ? this._renderedItems[this._renderedItems.length - 1].isBleeding() : false;\r\n    };\r\n    Container.prototype.applyPadding = function () {\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n        if (this.padding) {\r\n            var physicalPadding = this.padding.toSpacingDefinition(this.hostConfig);\r\n            this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n            this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n            this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n            this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n        }\r\n        else if (this.hasBackground) {\r\n            var physicalMargin = new SpacingDefinition();\r\n            var physicalPadding = new SpacingDefinition();\r\n            var useAutoPadding = (this.parent ? this.parent.canContentBleed() : false) && AdaptiveCard.useAutomaticContainerBleeding;\r\n            if (useAutoPadding) {\r\n                var effectivePadding = this.getNonZeroPadding();\r\n                var effectiveMargin = new PaddingDefinition(effectivePadding.top, effectivePadding.right, effectivePadding.bottom, effectivePadding.left);\r\n                if (!this.isAtTheVeryTop()) {\r\n                    effectivePadding.top = Enums.Spacing.None;\r\n                    effectiveMargin.top = Enums.Spacing.None;\r\n                }\r\n                if (!this.isAtTheVeryBottom()) {\r\n                    effectivePadding.bottom = Enums.Spacing.None;\r\n                    effectiveMargin.bottom = Enums.Spacing.None;\r\n                }\r\n                if (!this.isAtTheVeryLeft()) {\r\n                    effectivePadding.left = Enums.Spacing.None;\r\n                    effectiveMargin.left = Enums.Spacing.None;\r\n                }\r\n                if (!this.isAtTheVeryRight()) {\r\n                    effectivePadding.right = Enums.Spacing.None;\r\n                    effectiveMargin.right = Enums.Spacing.None;\r\n                }\r\n                if (effectivePadding.left != Enums.Spacing.None || effectivePadding.right != Enums.Spacing.None) {\r\n                    if (effectivePadding.left == Enums.Spacing.None) {\r\n                        effectivePadding.left = effectivePadding.right;\r\n                    }\r\n                    if (effectivePadding.right == Enums.Spacing.None) {\r\n                        effectivePadding.right = effectivePadding.left;\r\n                    }\r\n                }\r\n                if (effectivePadding.top != Enums.Spacing.None || effectivePadding.bottom != Enums.Spacing.None) {\r\n                    if (effectivePadding.top == Enums.Spacing.None) {\r\n                        effectivePadding.top = effectivePadding.bottom;\r\n                    }\r\n                    if (effectivePadding.bottom == Enums.Spacing.None) {\r\n                        effectivePadding.bottom = effectivePadding.top;\r\n                    }\r\n                }\r\n                if (effectivePadding.top != Enums.Spacing.None\r\n                    || effectivePadding.right != Enums.Spacing.None\r\n                    || effectivePadding.bottom != Enums.Spacing.None\r\n                    || effectivePadding.left != Enums.Spacing.None) {\r\n                    if (effectivePadding.top == Enums.Spacing.None) {\r\n                        effectivePadding.top = Enums.Spacing.Default;\r\n                    }\r\n                    if (effectivePadding.right == Enums.Spacing.None) {\r\n                        effectivePadding.right = Enums.Spacing.Default;\r\n                    }\r\n                    if (effectivePadding.bottom == Enums.Spacing.None) {\r\n                        effectivePadding = Object.assign({}, effectivePadding, { bottom: Enums.Spacing.Default });\r\n                    }\r\n                    if (effectivePadding.left == Enums.Spacing.None) {\r\n                        effectivePadding = Object.assign({}, effectivePadding, { left: Enums.Spacing.Default });\r\n                    }\r\n                }\r\n                if (effectivePadding.top == Enums.Spacing.None &&\r\n                    effectivePadding.right == Enums.Spacing.None &&\r\n                    effectivePadding.bottom == Enums.Spacing.None &&\r\n                    effectivePadding.left == Enums.Spacing.None) {\r\n                    effectivePadding = new PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding);\r\n                }\r\n                physicalMargin = effectiveMargin.toSpacingDefinition(this.hostConfig);\r\n                physicalPadding = effectivePadding.toSpacingDefinition(this.hostConfig);\r\n            }\r\n            else {\r\n                physicalPadding = new PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding).toSpacingDefinition(this.hostConfig);\r\n            }\r\n            this.renderedElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n            this.renderedElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n            this.renderedElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n            this.renderedElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n            this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n            this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n            this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n            this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            if (this.separatorElement) {\r\n                if (this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                    this.separatorElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n                    this.separatorElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n                }\r\n                else {\r\n                    this.separatorElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n                    this.separatorElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n                }\r\n            }\r\n        }\r\n        if (this.isLastElementBleeding()) {\r\n            this.renderedElement.style.paddingBottom = \"0px\";\r\n        }\r\n    };\r\n    Container.prototype.internalRender = function () {\r\n        var _this = this;\r\n        this._renderedItems = [];\r\n        // Cache hostConfig to avoid walking the parent hierarchy several times\r\n        var hostConfig = this.hostConfig;\r\n        var element = document.createElement(\"div\");\r\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Forces the container to be at least as tall as its content.\r\n            //\r\n            // Fixes a quirk in Chrome where, for nested flex elements, the\r\n            // inner element's height would never exceed the outer element's\r\n            // height. This caused overflow truncation to break -- containers\r\n            // would always be measured as not overflowing, since their heights\r\n            // were constrained by their parents as opposed to truly reflecting\r\n            // the height of their content.\r\n            //\r\n            // See the \"Browser Rendering Notes\" section of this answer:\r\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\r\n            element.style.minHeight = '-webkit-min-content';\r\n        }\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n        if (this.hasBackground) {\r\n            if (this.backgroundImage) {\r\n                this.backgroundImage.apply(element);\r\n            }\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.default);\r\n            if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n                element.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n            }\r\n        }\r\n        if (this.selectAction && hostConfig.supportsInteractivity) {\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", \"button\");\r\n            element.setAttribute(\"aria-label\", this.selectAction.title);\r\n            element.onclick = function (e) {\r\n                if (_this.selectAction != null) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            };\r\n            element.onkeypress = function (e) {\r\n                if (_this.selectAction != null) {\r\n                    // Enter or space pressed\r\n                    if (e.keyCode == 13 || e.keyCode == 32) {\r\n                        _this.selectAction.execute();\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        if (this._items.length > 0) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n                if (renderedElement) {\r\n                    if (this._renderedItems.length > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n                    Utils.appendChild(element, renderedElement);\r\n                    this._renderedItems.push(this._items[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.isDesignMode()) {\r\n                var placeholderElement = this.createPlaceholderElement();\r\n                placeholderElement.style.width = \"100%\";\r\n                placeholderElement.style.height = \"100%\";\r\n                element.appendChild(placeholderElement);\r\n            }\r\n        }\r\n        return element;\r\n    };\r\n    Container.prototype.truncateOverflow = function (maxHeight) {\r\n        // Add 1 to account for rounding differences between browsers\r\n        var boundary = this.renderedElement.offsetTop + maxHeight + 1;\r\n        var handleElement = function (cardElement) {\r\n            var elt = cardElement.renderedElement;\r\n            if (elt) {\r\n                switch (Utils.getFitStatus(elt, boundary)) {\r\n                    case Enums.ContainerFitStatus.FullyInContainer:\r\n                        var sizeChanged = cardElement['resetOverflow']();\r\n                        // If the element's size changed after resetting content,\r\n                        // we have to check if it still fits fully in the card\r\n                        if (sizeChanged) {\r\n                            handleElement(cardElement);\r\n                        }\r\n                        break;\r\n                    case Enums.ContainerFitStatus.Overflowing:\r\n                        var maxHeight_1 = boundary - elt.offsetTop;\r\n                        cardElement['handleOverflow'](maxHeight_1);\r\n                        break;\r\n                    case Enums.ContainerFitStatus.FullyOutOfContainer:\r\n                        cardElement['handleOverflow'](0);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\r\n            var item = _a[_i];\r\n            handleElement(item);\r\n        }\r\n        return true;\r\n    };\r\n    Container.prototype.undoOverflowTruncation = function () {\r\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\r\n            var item = _a[_i];\r\n            item['resetOverflow']();\r\n        }\r\n    };\r\n    Object.defineProperty(Container.prototype, \"hasBackground\", {\r\n        get: function () {\r\n            var parentContainer = this.getParentContainer();\r\n            return this.backgroundImage != undefined || (this.hasExplicitStyle && (parentContainer ? parentContainer.style != this.style : false));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"defaultStyle\", {\r\n        get: function () {\r\n            return Enums.ContainerStyle.Default;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"allowCustomStyle\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Container.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n        if (this.backgroundImage) {\r\n            Utils.setProperty(result, \"backgroundImage\", this.backgroundImage.url);\r\n        }\r\n        Utils.setProperty(result, \"style\", this.style, \"default\");\r\n        Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalContentAlignment\", this.verticalContentAlignment, Enums.VerticalAlignment.Top);\r\n        if (this._items.length > 0) {\r\n            var elements = [];\r\n            for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\r\n                var element = _a[_i];\r\n                elements.push(element.toJSON());\r\n            }\r\n            Utils.setProperty(result, this.getItemsCollectionPropertyName(), elements);\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.isBleeding = function () {\r\n        return this.isLastElementBleeding();\r\n    };\r\n    Container.prototype.getItemCount = function () {\r\n        return this._items.length;\r\n    };\r\n    Container.prototype.getItemAt = function (index) {\r\n        return this._items[index];\r\n    };\r\n    Container.prototype.getJsonTypeName = function () {\r\n        return \"Container\";\r\n    };\r\n    Container.prototype.isFirstElement = function (element) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Container.prototype.isLastElement = function (element) {\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Container.prototype.validate = function () {\r\n        var result = [];\r\n        if (this._style) {\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this._style);\r\n            if (!styleDefinition) {\r\n                result.push({\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Unknown container style: \" + this._style\r\n                });\r\n            }\r\n        }\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (!this.hostConfig.supportsInteractivity && this._items[i].isInteractive) {\r\n                result.push({\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n            }\r\n            if (!this.isElementAllowed(this._items[i], this.getForbiddenElementTypes())) {\r\n                result.push({\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Elements of type \" + this._items[i].getJsonTypeName() + \" are not allowed in this container.\"\r\n                });\r\n            }\r\n            result = result.concat(this._items[i].validate());\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this._items = [];\r\n        this._renderedItems = [];\r\n        var jsonBackgroundImage = json[\"backgroundImage\"];\r\n        if (jsonBackgroundImage) {\r\n            this.backgroundImage = new BackgroundImage();\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.mode = Enums.BackgroundImageMode.Stretch;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage = new BackgroundImage();\r\n                this.backgroundImage.parse(json[\"backgroundImage\"], errors);\r\n            }\r\n        }\r\n        this.verticalContentAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n        this._style = json[\"style\"];\r\n        if (json[this.getItemsCollectionPropertyName()] != null) {\r\n            var items = json[this.getItemsCollectionPropertyName()];\r\n            this.clear();\r\n            for (var i = 0; i < items.length; i++) {\r\n                var elementType = items[i][\"type\"];\r\n                var element = AdaptiveCard.elementTypeRegistry.createInstance(elementType);\r\n                if (!element) {\r\n                    raiseParseError({\r\n                        error: Enums.ValidationError.UnknownElementType,\r\n                        message: \"Unknown element type: \" + elementType\r\n                    }, errors);\r\n                }\r\n                else {\r\n                    this.addItem(element);\r\n                    element.parse(items[i], errors);\r\n                }\r\n            }\r\n        }\r\n        var selectActionJson = json[\"selectAction\"];\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson, errors);\r\n            if (this.selectAction) {\r\n                this.selectAction.setParent(this);\r\n                this.selectAction.parse(selectActionJson);\r\n            }\r\n        }\r\n    };\r\n    Container.prototype.addItem = function (item) {\r\n        this.insertItemAt(item, -1);\r\n    };\r\n    Container.prototype.indexOf = function (cardElement) {\r\n        return this._items.indexOf(cardElement);\r\n    };\r\n    Container.prototype.insertItemBefore = function (item, insertBefore) {\r\n        this.insertItemAt(item, this._items.indexOf(insertBefore));\r\n    };\r\n    Container.prototype.insertItemAfter = function (item, insertAfter) {\r\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1);\r\n    };\r\n    Container.prototype.removeItem = function (item) {\r\n        var itemIndex = this._items.indexOf(item);\r\n        if (itemIndex >= 0) {\r\n            this._items.splice(itemIndex, 1);\r\n            item.setParent(null);\r\n            this.updateLayout();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Container.prototype.clear = function () {\r\n        this._items = [];\r\n    };\r\n    Container.prototype.canContentBleed = function () {\r\n        return this.hasBackground ? false : _super.prototype.canContentBleed.call(this);\r\n    };\r\n    Container.prototype.getAllInputs = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            var item = this._items[i];\r\n            result = result.concat(item.getAllInputs());\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.getResourceInformation = function () {\r\n        var result = [];\r\n        if (this.backgroundImage && !Utils.isNullOrEmpty(this.backgroundImage.url)) {\r\n            result.push({ url: this.backgroundImage.url, mimeType: \"image\" });\r\n        }\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getResourceInformation());\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.getElementById = function (id) {\r\n        var result = _super.prototype.getElementById.call(this, id);\r\n        if (!result) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                result = this._items[i].getElementById(id);\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.getActionById = function (id) {\r\n        var result = _super.prototype.getActionById.call(this, id);\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Container.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        // render each item\r\n        var speak = null;\r\n        if (this._items.length > 0) {\r\n            speak = '';\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var result = this._items[i].renderSpeech();\r\n                if (result) {\r\n                    speak += result;\r\n                }\r\n            }\r\n        }\r\n        return speak;\r\n    };\r\n    Container.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        _super.prototype.updateLayout.call(this, processChildren);\r\n        this.applyPadding();\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                this._items[i].updateLayout();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Container.prototype, \"style\", {\r\n        get: function () {\r\n            if (this.allowCustomStyle) {\r\n                if (this._style && this.hostConfig.containerStyles.getStyleByName(this._style)) {\r\n                    return this._style;\r\n                }\r\n                var parentContainer = this.getParentContainer();\r\n                return parentContainer ? parentContainer.style : this.defaultStyle;\r\n            }\r\n            else {\r\n                return this.defaultStyle;\r\n            }\r\n        },\r\n        set: function (value) {\r\n            this._style = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"padding\", {\r\n        get: function () {\r\n            return this.getPadding();\r\n        },\r\n        set: function (value) {\r\n            this.setPadding(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                this._selectAction.setParent(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Container;\r\n}(CardElementContainer));\r\nexports.Container = Container;\r\nvar Column = /** @class */ (function (_super) {\r\n    __extends(Column, _super);\r\n    function Column(width) {\r\n        if (width === void 0) { width = \"auto\"; }\r\n        var _this = _super.call(this) || this;\r\n        _this._computedWeight = 0;\r\n        _this.width = \"auto\";\r\n        _this.width = width;\r\n        return _this;\r\n    }\r\n    Column.prototype.adjustRenderedElementSize = function (renderedElement) {\r\n        if (this.isDesignMode()) {\r\n            renderedElement.style.minWidth = \"20px\";\r\n            renderedElement.style.minHeight = \"20px\";\r\n        }\r\n        else {\r\n            renderedElement.style.minWidth = \"0\";\r\n        }\r\n        if (this.width === \"auto\") {\r\n            renderedElement.style.flex = \"0 1 auto\";\r\n        }\r\n        else if (this.width === \"stretch\") {\r\n            renderedElement.style.flex = \"1 1 50px\";\r\n        }\r\n        else {\r\n            var sizeAndUnit = this.width;\r\n            if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                renderedElement.style.flex = \"0 0 \" + sizeAndUnit.physicalSize + \"px\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : sizeAndUnit.physicalSize) + \"%\";\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Column.prototype, \"separatorOrientation\", {\r\n        get: function () {\r\n            return Enums.Orientation.Vertical;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Column.prototype.getJsonTypeName = function () {\r\n        return \"Column\";\r\n    };\r\n    Column.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        if (this.width instanceof SizeAndUnit) {\r\n            if (this.width.unit == Enums.SizeUnit.Pixel) {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize + \"px\");\r\n            }\r\n            else {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize);\r\n            }\r\n        }\r\n        else {\r\n            Utils.setProperty(result, \"width\", this.width);\r\n        }\r\n        return result;\r\n    };\r\n    Column.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        var jsonWidth = json[\"width\"];\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError({\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                }, errors);\r\n            }\r\n        }\r\n        var invalidWidth = false;\r\n        if (typeof jsonWidth === \"number\") {\r\n            if (jsonWidth > 0) {\r\n                this.width = new Utils.SizeAndUnit(jsonWidth, Enums.SizeUnit.Weight);\r\n            }\r\n            else {\r\n                invalidWidth = true;\r\n            }\r\n        }\r\n        else if (typeof jsonWidth === \"string\") {\r\n            if (jsonWidth != \"auto\" && jsonWidth != \"stretch\") {\r\n                try {\r\n                    this.width = Utils.SizeAndUnit.parse(jsonWidth);\r\n                }\r\n                catch (e) {\r\n                    invalidWidth = true;\r\n                }\r\n            }\r\n            else {\r\n                this.width = jsonWidth;\r\n            }\r\n        }\r\n        else if (jsonWidth) {\r\n            invalidWidth = true;\r\n        }\r\n        if (invalidWidth) {\r\n            raiseParseError({\r\n                error: Enums.ValidationError.InvalidPropertyValue,\r\n                message: \"Invalid column width: \" + jsonWidth\r\n            }, errors);\r\n        }\r\n    };\r\n    Object.defineProperty(Column.prototype, \"hasVisibleSeparator\", {\r\n        get: function () {\r\n            if (this.parent && this.parent instanceof ColumnSet) {\r\n                return this.separatorElement && !this.parent.isLeftMostElement(this);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Column.prototype, \"isStandalone\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Column;\r\n}(Container));\r\nexports.Column = Column;\r\nvar ColumnSet = /** @class */ (function (_super) {\r\n    __extends(ColumnSet, _super);\r\n    function ColumnSet() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._columns = [];\r\n        return _this;\r\n    }\r\n    ColumnSet.prototype.applyPadding = function () {\r\n        if (this.padding) {\r\n            if (this.renderedElement) {\r\n                var physicalPadding = this.padding.toSpacingDefinition(this.hostConfig);\r\n                this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n                this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n                this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            }\r\n        }\r\n    };\r\n    ColumnSet.prototype.internalRender = function () {\r\n        var _this = this;\r\n        if (this._columns.length > 0) {\r\n            // Cache hostConfig to avoid walking the parent hierarchy several times\r\n            var hostConfig = this.hostConfig;\r\n            var element = document.createElement(\"div\");\r\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\r\n            element.style.display = \"flex\";\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                // See comment in Container.internalRender()\r\n                element.style.minHeight = '-webkit-min-content';\r\n            }\r\n            if (this.selectAction && hostConfig.supportsInteractivity) {\r\n                element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n                element.onclick = function (e) {\r\n                    _this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                };\r\n            }\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n            var totalWeight = 0;\r\n            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\r\n                var column = _a[_i];\r\n                if (column.width instanceof Utils.SizeAndUnit && (column.width.unit == Enums.SizeUnit.Weight)) {\r\n                    totalWeight += column.width.physicalSize;\r\n                }\r\n            }\r\n            var renderedColumnCount = 0;\r\n            for (var _b = 0, _c = this._columns; _b < _c.length; _b++) {\r\n                var column = _c[_b];\r\n                if (column.width instanceof Utils.SizeAndUnit && column.width.unit == Enums.SizeUnit.Weight && totalWeight > 0) {\r\n                    var computedWeight = 100 / totalWeight * column.width.physicalSize;\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    column[\"_computedWeight\"] = computedWeight;\r\n                }\r\n                var renderedColumn = column.render();\r\n                if (renderedColumn) {\r\n                    if (renderedColumnCount > 0 && column.separatorElement) {\r\n                        column.separatorElement.style.flex = \"0 0 auto\";\r\n                        Utils.appendChild(element, column.separatorElement);\r\n                    }\r\n                    Utils.appendChild(element, renderedColumn);\r\n                    renderedColumnCount++;\r\n                }\r\n            }\r\n            return renderedColumnCount > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    ColumnSet.prototype.truncateOverflow = function (maxHeight) {\r\n        for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\r\n            var column = _a[_i];\r\n            column['handleOverflow'](maxHeight);\r\n        }\r\n        return true;\r\n    };\r\n    ColumnSet.prototype.undoOverflowTruncation = function () {\r\n        for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\r\n            var column = _a[_i];\r\n            column['resetOverflow']();\r\n        }\r\n    };\r\n    ColumnSet.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this.selectAction.toJSON());\r\n        }\r\n        if (this._columns.length > 0) {\r\n            var columns = [];\r\n            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\r\n                var column = _a[_i];\r\n                columns.push(column.toJSON());\r\n            }\r\n            Utils.setProperty(result, \"columns\", columns);\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.isFirstElement = function (element) {\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (this._columns[i].isVisible) {\r\n                return this._columns[i] == element;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ColumnSet.prototype.getCount = function () {\r\n        return this._columns.length;\r\n    };\r\n    ColumnSet.prototype.getItemCount = function () {\r\n        return this.getCount();\r\n    };\r\n    ColumnSet.prototype.getColumnAt = function (index) {\r\n        return this._columns[index];\r\n    };\r\n    ColumnSet.prototype.getItemAt = function (index) {\r\n        return this.getColumnAt(index);\r\n    };\r\n    ColumnSet.prototype.getJsonTypeName = function () {\r\n        return \"ColumnSet\";\r\n    };\r\n    ColumnSet.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        var selectActionJson = json[\"selectAction\"];\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson, errors);\r\n            if (this.selectAction) {\r\n                this.selectAction.setParent(this);\r\n                this.selectAction.parse(selectActionJson);\r\n            }\r\n        }\r\n        if (json[\"columns\"] != null) {\r\n            var jsonColumns = json[\"columns\"];\r\n            this._columns = [];\r\n            for (var i = 0; i < jsonColumns.length; i++) {\r\n                var column = new Column();\r\n                column.parse(jsonColumns[i], errors);\r\n                this.addColumn(column);\r\n            }\r\n        }\r\n    };\r\n    ColumnSet.prototype.validate = function () {\r\n        var result = [];\r\n        var weightedColumns = 0;\r\n        var stretchedColumns = 0;\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (typeof this._columns[i].width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (this._columns[i].width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n            result = result.concat(this._columns[i].validate());\r\n        }\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            result.push({\r\n                error: Enums.ValidationError.Hint,\r\n                message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        _super.prototype.updateLayout.call(this, processChildren);\r\n        this.applyPadding();\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                this._columns[i].updateLayout();\r\n            }\r\n        }\r\n    };\r\n    ColumnSet.prototype.addColumn = function (column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n            column.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    };\r\n    ColumnSet.prototype.removeItem = function (item) {\r\n        if (item instanceof Column) {\r\n            var itemIndex = this._columns.indexOf(item);\r\n            if (itemIndex >= 0) {\r\n                this._columns.splice(itemIndex, 1);\r\n                item.setParent(null);\r\n                this.updateLayout();\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    ColumnSet.prototype.indexOf = function (cardElement) {\r\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\r\n    };\r\n    ColumnSet.prototype.isLeftMostElement = function (element) {\r\n        return this._columns.indexOf(element) == 0;\r\n    };\r\n    ColumnSet.prototype.isRightMostElement = function (element) {\r\n        return this._columns.indexOf(element) == this._columns.length - 1;\r\n    };\r\n    ColumnSet.prototype.getAllInputs = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = result.concat(this._columns[i].getAllInputs());\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.getResourceInformation = function () {\r\n        var result = [];\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = result.concat(this._columns[i].getResourceInformation());\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.getElementById = function (id) {\r\n        var result = _super.prototype.getElementById.call(this, id);\r\n        if (!result) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                result = this._columns[i].getElementById(id);\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.getActionById = function (id) {\r\n        var result = null;\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    ColumnSet.prototype.renderSpeech = function () {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n        // render each item\r\n        var speak = '';\r\n        if (this._columns.length > 0) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                speak += this._columns[i].renderSpeech();\r\n            }\r\n        }\r\n        return speak;\r\n    };\r\n    Object.defineProperty(ColumnSet.prototype, \"padding\", {\r\n        get: function () {\r\n            return this.getPadding();\r\n        },\r\n        set: function (value) {\r\n            this.setPadding(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSet.prototype, \"selectAction\", {\r\n        get: function () {\r\n            return this._selectAction;\r\n        },\r\n        set: function (value) {\r\n            this._selectAction = value;\r\n            if (this._selectAction) {\r\n                this._selectAction.setParent(this);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColumnSet;\r\n}(CardElementContainer));\r\nexports.ColumnSet = ColumnSet;\r\nvar Version = /** @class */ (function () {\r\n    function Version(major, minor) {\r\n        if (major === void 0) { major = 1; }\r\n        if (minor === void 0) { minor = 1; }\r\n        this._isValid = true;\r\n        this._major = major;\r\n        this._minor = minor;\r\n    }\r\n    Version.parse = function (versionString) {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n        return result;\r\n    };\r\n    Version.prototype.toString = function () {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    };\r\n    Object.defineProperty(Version.prototype, \"major\", {\r\n        get: function () {\r\n            return this._major;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Version.prototype, \"minor\", {\r\n        get: function () {\r\n            return this._minor;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Version.prototype, \"isValid\", {\r\n        get: function () {\r\n            return this._isValid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Version;\r\n}());\r\nexports.Version = Version;\r\nfunction raiseImageLoadedEvent(image) {\r\n    var card = image.getRootElement();\r\n    var onImageLoadedHandler = (card && card.onImageLoaded) ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\r\n    if (onImageLoadedHandler) {\r\n        onImageLoadedHandler(image);\r\n    }\r\n}\r\nfunction raiseAnchorClickedEvent(element, anchor) {\r\n    var card = element.getRootElement();\r\n    var onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(element, anchor) : false;\r\n}\r\nfunction raiseExecuteActionEvent(action) {\r\n    var card = action.parent.getRootElement();\r\n    var onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n    if (onExecuteActionHandler) {\r\n        action.prepare(action.parent.getRootElement().getAllInputs());\r\n        onExecuteActionHandler(action);\r\n    }\r\n}\r\nfunction raiseInlineCardExpandedEvent(action, isExpanded) {\r\n    var card = action.parent.getRootElement();\r\n    var onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\nfunction raiseElementVisibilityChangedEvent(element, shouldUpdateLayout) {\r\n    if (shouldUpdateLayout === void 0) { shouldUpdateLayout = true; }\r\n    var rootElement = element.getRootElement();\r\n    if (shouldUpdateLayout) {\r\n        rootElement.updateLayout();\r\n    }\r\n    var card = rootElement;\r\n    var onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\nfunction raiseParseElementEvent(element, json, errors) {\r\n    var card = element.getRootElement();\r\n    var onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json, errors);\r\n    }\r\n}\r\nfunction raiseParseActionEvent(action, json, errors) {\r\n    var card = action.parent ? action.parent.getRootElement() : null;\r\n    var onParseActionHandler = (card && card.onParseAction) ? card.onParseAction : AdaptiveCard.onParseAction;\r\n    if (onParseActionHandler != null) {\r\n        onParseActionHandler(action, json, errors);\r\n    }\r\n}\r\nfunction raiseParseError(error, errors) {\r\n    if (errors) {\r\n        errors.push(error);\r\n    }\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\nvar ContainerWithActions = /** @class */ (function (_super) {\r\n    __extends(ContainerWithActions, _super);\r\n    function ContainerWithActions() {\r\n        var _this = _super.call(this) || this;\r\n        _this._actionCollection = new ActionCollection(_this);\r\n        return _this;\r\n    }\r\n    ContainerWithActions.prototype.internalRender = function () {\r\n        var element = _super.prototype.internalRender.call(this);\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation, false);\r\n        if (renderedActions) {\r\n            Utils.appendChild(element, Utils.renderSeparation({\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                lineThickness: null,\r\n                lineColor: null\r\n            }, Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n        return element.children.length > 0 ? element : null;\r\n    };\r\n    ContainerWithActions.prototype.isLastElementBleeding = function () {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return _super.prototype.isLastElementBleeding.call(this) ? !this.isDesignMode() : false;\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    };\r\n    ContainerWithActions.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n        return result;\r\n    };\r\n    ContainerWithActions.prototype.getActionCount = function () {\r\n        return this._actionCollection.items.length;\r\n    };\r\n    ContainerWithActions.prototype.getActionAt = function (index) {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            _super.prototype.getActionAt.call(this, index);\r\n        }\r\n    };\r\n    ContainerWithActions.prototype.getActionById = function (id) {\r\n        var result = this._actionCollection.getActionById(id);\r\n        return result ? result : _super.prototype.getActionById.call(this, id);\r\n    };\r\n    ContainerWithActions.prototype.parse = function (json, errors) {\r\n        _super.prototype.parse.call(this, json, errors);\r\n        this._actionCollection.clear();\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"];\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                var action = createActionInstance(jsonActions[i], errors);\r\n                if (action != null) {\r\n                    action.setParent(this);\r\n                    action.parse(jsonActions[i]);\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ContainerWithActions.prototype.validate = function () {\r\n        var result = _super.prototype.validate.call(this);\r\n        if (this._actionCollection) {\r\n            result = result.concat(this._actionCollection.validate());\r\n        }\r\n        return result;\r\n    };\r\n    ContainerWithActions.prototype.isLastElement = function (element) {\r\n        return _super.prototype.isLastElement.call(this, element) && this._actionCollection.items.length == 0;\r\n    };\r\n    ContainerWithActions.prototype.addAction = function (action) {\r\n        if (action) {\r\n            this._actionCollection.addAction(action);\r\n        }\r\n    };\r\n    ContainerWithActions.prototype.clear = function () {\r\n        _super.prototype.clear.call(this);\r\n        this._actionCollection.clear();\r\n    };\r\n    ContainerWithActions.prototype.getAllInputs = function () {\r\n        return _super.prototype.getAllInputs.call(this).concat(this._actionCollection.getAllInputs());\r\n    };\r\n    ContainerWithActions.prototype.getResourceInformation = function () {\r\n        return _super.prototype.getResourceInformation.call(this).concat(this._actionCollection.getResourceInformation());\r\n    };\r\n    Object.defineProperty(ContainerWithActions.prototype, \"isStandalone\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ContainerWithActions;\r\n}(Container));\r\nexports.ContainerWithActions = ContainerWithActions;\r\nvar TypeRegistry = /** @class */ (function () {\r\n    function TypeRegistry() {\r\n        this._items = [];\r\n        this.reset();\r\n    }\r\n    TypeRegistry.prototype.findTypeRegistration = function (typeName) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    TypeRegistry.prototype.clear = function () {\r\n        this._items = [];\r\n    };\r\n    TypeRegistry.prototype.registerType = function (typeName, createInstance) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            };\r\n            this._items.push(registrationInfo);\r\n        }\r\n    };\r\n    TypeRegistry.prototype.unregisterType = function (typeName) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    TypeRegistry.prototype.createInstance = function (typeName) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    };\r\n    TypeRegistry.prototype.getItemCount = function () {\r\n        return this._items.length;\r\n    };\r\n    TypeRegistry.prototype.getItemAt = function (index) {\r\n        return this._items[index];\r\n    };\r\n    return TypeRegistry;\r\n}());\r\nexports.TypeRegistry = TypeRegistry;\r\nvar ElementTypeRegistry = /** @class */ (function (_super) {\r\n    __extends(ElementTypeRegistry, _super);\r\n    function ElementTypeRegistry() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ElementTypeRegistry.prototype.reset = function () {\r\n        this.clear();\r\n        this.registerType(\"Container\", function () { return new Container(); });\r\n        this.registerType(\"TextBlock\", function () { return new TextBlock(); });\r\n        this.registerType(\"Image\", function () { return new Image(); });\r\n        this.registerType(\"ImageSet\", function () { return new ImageSet(); });\r\n        this.registerType(\"Media\", function () { return new Media(); });\r\n        this.registerType(\"FactSet\", function () { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", function () { return new ColumnSet(); });\r\n        this.registerType(\"Input.Text\", function () { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", function () { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", function () { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", function () { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", function () { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", function () { return new ToggleInput(); });\r\n    };\r\n    return ElementTypeRegistry;\r\n}(TypeRegistry));\r\nexports.ElementTypeRegistry = ElementTypeRegistry;\r\nvar ActionTypeRegistry = /** @class */ (function (_super) {\r\n    __extends(ActionTypeRegistry, _super);\r\n    function ActionTypeRegistry() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    ActionTypeRegistry.prototype.reset = function () {\r\n        this.clear();\r\n        this.registerType(\"Action.OpenUrl\", function () { return new OpenUrlAction(); });\r\n        this.registerType(\"Action.Submit\", function () { return new SubmitAction(); });\r\n        this.registerType(\"Action.ShowCard\", function () { return new ShowCardAction(); });\r\n    };\r\n    return ActionTypeRegistry;\r\n}(TypeRegistry));\r\nexports.ActionTypeRegistry = ActionTypeRegistry;\r\nvar AdaptiveCard = /** @class */ (function (_super) {\r\n    __extends(AdaptiveCard, _super);\r\n    function AdaptiveCard() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._cardTypeName = \"AdaptiveCard\";\r\n        _this.onAnchorClicked = null;\r\n        _this.onExecuteAction = null;\r\n        _this.onElementVisibilityChanged = null;\r\n        _this.onImageLoaded = null;\r\n        _this.onInlineCardExpanded = null;\r\n        _this.onParseElement = null;\r\n        _this.onParseAction = null;\r\n        _this.version = new Version(1, 0);\r\n        _this.designMode = false;\r\n        return _this;\r\n    }\r\n    AdaptiveCard.prototype.isVersionSupported = function () {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            var unsupportedVersion = !this.version ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n            return !unsupportedVersion;\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.getItemsCollectionPropertyName = function () {\r\n        return \"body\";\r\n    };\r\n    AdaptiveCard.prototype.applyPadding = function () {\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n        var effectivePadding = this.padding ? this.padding.toSpacingDefinition(this.hostConfig) : this.internalPadding.toSpacingDefinition(this.hostConfig);\r\n        this.renderedElement.style.paddingTop = effectivePadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = effectivePadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = effectivePadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = effectivePadding.left + \"px\";\r\n        if (this.isLastElementBleeding()) {\r\n            this.renderedElement.style.paddingBottom = \"0px\";\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.internalRender = function () {\r\n        var renderedElement = _super.prototype.internalRender.call(this);\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Unlike containers, the root card element should be allowed to\r\n            // be shorter than its content (otherwise the overflow truncation\r\n            // logic would never get triggered)\r\n            renderedElement.style.minHeight = null;\r\n        }\r\n        return renderedElement;\r\n    };\r\n    Object.defineProperty(AdaptiveCard.prototype, \"bypassVersionCheck\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"defaultPadding\", {\r\n        get: function () {\r\n            return new PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"allowCustomPadding\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"allowCustomStyle\", {\r\n        get: function () {\r\n            return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AdaptiveCard.prototype, \"hasBackground\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AdaptiveCard.prototype.getJsonTypeName = function () {\r\n        return \"AdaptiveCard\";\r\n    };\r\n    AdaptiveCard.prototype.toJSON = function () {\r\n        var result = _super.prototype.toJSON.call(this);\r\n        Utils.setProperty(result, \"$schema\", \"http://adaptivecards.io/schemas/adaptive-card.json\");\r\n        if (!this.bypassVersionCheck && this.version) {\r\n            Utils.setProperty(result, \"version\", this.version.toString());\r\n        }\r\n        Utils.setProperty(result, \"fallbackText\", this.fallbackText);\r\n        Utils.setProperty(result, \"lang\", this.lang);\r\n        Utils.setProperty(result, \"speak\", this.speak);\r\n        return result;\r\n    };\r\n    AdaptiveCard.prototype.validate = function () {\r\n        var result = [];\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            result.push({\r\n                error: Enums.ValidationError.MissingCardType,\r\n                message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n            });\r\n        }\r\n        if (!this.bypassVersionCheck && (!this.version || !this.version.isValid)) {\r\n            result.push({\r\n                error: Enums.ValidationError.PropertyCantBeNull,\r\n                message: !this.version ? \"The version property must be specified.\" : \"Invalid version: \" + this.version\r\n            });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            result.push({\r\n                error: Enums.ValidationError.UnsupportedCardVersion,\r\n                message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n            });\r\n        }\r\n        return result.concat(_super.prototype.validate.call(this));\r\n    };\r\n    AdaptiveCard.prototype.parse = function (json, errors) {\r\n        this._cardTypeName = json[\"type\"];\r\n        var langId = json[\"lang\"];\r\n        if (langId && typeof langId === \"string\") {\r\n            try {\r\n                this.lang = langId;\r\n            }\r\n            catch (e) {\r\n                raiseParseError({\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: e.message\r\n                }, errors);\r\n            }\r\n        }\r\n        this.version = Version.parse(json[\"version\"]);\r\n        this.fallbackText = json[\"fallbackText\"];\r\n        _super.prototype.parse.call(this, json, errors);\r\n    };\r\n    AdaptiveCard.prototype.render = function (target) {\r\n        var renderedCard;\r\n        if (!this.isVersionSupported()) {\r\n            renderedCard = document.createElement(\"div\");\r\n            renderedCard.innerHTML = this.fallbackText ? this.fallbackText : \"The specified card version is not supported.\";\r\n        }\r\n        else {\r\n            renderedCard = _super.prototype.render.call(this);\r\n            if (renderedCard) {\r\n                renderedCard.tabIndex = 0;\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n            this.updateLayout();\r\n        }\r\n        return renderedCard;\r\n    };\r\n    AdaptiveCard.prototype.updateLayout = function (processChildren) {\r\n        if (processChildren === void 0) { processChildren = true; }\r\n        _super.prototype.updateLayout.call(this, processChildren);\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && this.isRendered()) {\r\n            var card = this.renderedElement;\r\n            var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\r\n            this['handleOverflow'](card.offsetHeight - padding);\r\n        }\r\n    };\r\n    AdaptiveCard.prototype.canContentBleed = function () {\r\n        return true;\r\n    };\r\n    Object.defineProperty(AdaptiveCard.prototype, \"hasVisibleSeparator\", {\r\n        get: function () {\r\n            return false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    AdaptiveCard.currentVersion = new Version(1, 1);\r\n    AdaptiveCard.useAutomaticContainerBleeding = false;\r\n    AdaptiveCard.useAdvancedTextBlockTruncation = true;\r\n    AdaptiveCard.useAdvancedCardBottomTruncation = false;\r\n    AdaptiveCard.useMarkdownInRadioButtonAndCheckbox = true;\r\n    AdaptiveCard.elementTypeRegistry = new ElementTypeRegistry();\r\n    AdaptiveCard.actionTypeRegistry = new ActionTypeRegistry();\r\n    AdaptiveCard.onAnchorClicked = null;\r\n    AdaptiveCard.onExecuteAction = null;\r\n    AdaptiveCard.onElementVisibilityChanged = null;\r\n    AdaptiveCard.onImageLoaded = null;\r\n    AdaptiveCard.onInlineCardExpanded = null;\r\n    AdaptiveCard.onParseElement = null;\r\n    AdaptiveCard.onParseAction = null;\r\n    AdaptiveCard.onParseError = null;\r\n    AdaptiveCard.processMarkdown = function (text) {\r\n        // Check for markdownit\r\n        if (window[\"markdownit\"]) {\r\n            return window[\"markdownit\"]().render(text);\r\n        }\r\n        return text;\r\n    };\r\n    return AdaptiveCard;\r\n}(ContainerWithActions));\r\nexports.AdaptiveCard = AdaptiveCard;\r\nvar InlineAdaptiveCard = /** @class */ (function (_super) {\r\n    __extends(InlineAdaptiveCard, _super);\r\n    function InlineAdaptiveCard() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.suppressStyle = false;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"bypassVersionCheck\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"defaultPadding\", {\r\n        get: function () {\r\n            return new PaddingDefinition(this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding, Enums.Spacing.Padding, this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding, Enums.Spacing.Padding);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"defaultStyle\", {\r\n        get: function () {\r\n            if (this.suppressStyle) {\r\n                return Enums.ContainerStyle.Default;\r\n            }\r\n            else {\r\n                return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    InlineAdaptiveCard.prototype.render = function (target) {\r\n        var renderedCard = _super.prototype.render.call(this, target);\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n        return renderedCard;\r\n    };\r\n    InlineAdaptiveCard.prototype.getForbiddenActionTypes = function () {\r\n        return [ShowCardAction];\r\n    };\r\n    return InlineAdaptiveCard;\r\n}(AdaptiveCard));\r\nvar defaultHostConfig = new HostConfig.HostConfig({\r\n    supportsInteractivity: true,\r\n    fontFamily: \"Segoe UI\",\r\n    spacing: {\r\n        small: 10,\r\n        default: 20,\r\n        medium: 30,\r\n        large: 40,\r\n        extraLarge: 50,\r\n        padding: 20\r\n    },\r\n    separator: {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    },\r\n    fontSizes: {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    },\r\n    fontWeights: {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    },\r\n    imageSizes: {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    },\r\n    containerStyles: {\r\n        default: {\r\n            backgroundColor: \"#FFFFFF\",\r\n            foregroundColors: {\r\n                default: {\r\n                    default: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                dark: {\r\n                    default: \"#000000\",\r\n                    subtle: \"#66000000\"\r\n                },\r\n                light: {\r\n                    default: \"#FFFFFF\",\r\n                    subtle: \"#33000000\"\r\n                },\r\n                accent: {\r\n                    default: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    default: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    default: \"#54a254\",\r\n                    subtle: \"#DD54a254\"\r\n                },\r\n                warning: {\r\n                    default: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        },\r\n        emphasis: {\r\n            backgroundColor: \"#08000000\",\r\n            foregroundColors: {\r\n                default: {\r\n                    default: \"#333333\",\r\n                    subtle: \"#EE333333\"\r\n                },\r\n                dark: {\r\n                    default: \"#000000\",\r\n                    subtle: \"#66000000\"\r\n                },\r\n                light: {\r\n                    default: \"#FFFFFF\",\r\n                    subtle: \"#33000000\"\r\n                },\r\n                accent: {\r\n                    default: \"#2E89FC\",\r\n                    subtle: \"#882E89FC\"\r\n                },\r\n                attention: {\r\n                    default: \"#cc3300\",\r\n                    subtle: \"#DDcc3300\"\r\n                },\r\n                good: {\r\n                    default: \"#54a254\",\r\n                    subtle: \"#DD54a254\"\r\n                },\r\n                warning: {\r\n                    default: \"#e69500\",\r\n                    subtle: \"#DDe69500\"\r\n                }\r\n            }\r\n        }\r\n    },\r\n    actions: {\r\n        maxActions: 5,\r\n        spacing: Enums.Spacing.Default,\r\n        buttonSpacing: 10,\r\n        showCard: {\r\n            actionMode: Enums.ShowCardActionMode.Inline,\r\n            inlineTopMargin: 16\r\n        },\r\n        actionsOrientation: Enums.Orientation.Horizontal,\r\n        actionAlignment: Enums.ActionAlignment.Left\r\n    },\r\n    adaptiveCard: {\r\n        allowCustomStyle: false\r\n    },\r\n    imageSet: {\r\n        imageSize: Enums.Size.Medium,\r\n        maxImageHeight: 100\r\n    },\r\n    factSet: {\r\n        title: {\r\n            color: Enums.TextColor.Default,\r\n            size: Enums.TextSize.Default,\r\n            isSubtle: false,\r\n            weight: Enums.TextWeight.Bolder,\r\n            wrap: true,\r\n            maxWidth: 150,\r\n        },\r\n        value: {\r\n            color: Enums.TextColor.Default,\r\n            size: Enums.TextSize.Default,\r\n            isSubtle: false,\r\n            weight: Enums.TextWeight.Default,\r\n            wrap: true,\r\n        },\r\n        spacing: 10\r\n    }\r\n});\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar AbstractTextFormatter = /** @class */ (function () {\r\n    function AbstractTextFormatter(regularExpression) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n    AbstractTextFormatter.prototype.format = function (lang, input) {\r\n        var matches;\r\n        var result = input;\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(lang, matches));\r\n        }\r\n        ;\r\n        return result;\r\n    };\r\n    return AbstractTextFormatter;\r\n}());\r\nvar DateFormatter = /** @class */ (function (_super) {\r\n    __extends(DateFormatter, _super);\r\n    function DateFormatter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DateFormatter.prototype.internalFormat = function (lang, matches) {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(lang, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    };\r\n    return DateFormatter;\r\n}(AbstractTextFormatter));\r\nvar TimeFormatter = /** @class */ (function (_super) {\r\n    __extends(TimeFormatter, _super);\r\n    function TimeFormatter() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    TimeFormatter.prototype.internalFormat = function (lang, matches) {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        return date.toLocaleTimeString(lang, { hour: 'numeric', minute: '2-digit' });\r\n    };\r\n    return TimeFormatter;\r\n}(AbstractTextFormatter));\r\nfunction formatText(lang, text) {\r\n    var formatters = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n    var result = text;\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(lang, result);\r\n    }\r\n    return result;\r\n}\r\nexports.formatText = formatText;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// adaptivecards.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 89fd00e9a8f0ac7e7620","export enum Size {\r\n    Auto,\r\n    Stretch,\r\n    Small,\r\n    Medium,\r\n    Large\r\n}\r\n\r\nexport enum SizeUnit {\r\n    Weight,\r\n    Pixel\r\n}\r\n\r\nexport enum TextSize {\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge\r\n}\r\n\r\nexport enum Spacing {\r\n    None,\r\n    Small,\r\n    Default,\r\n    Medium,\r\n    Large,\r\n    ExtraLarge,\r\n    Padding\r\n}\r\n\r\nexport enum TextWeight {\r\n    Lighter,\r\n    Default,\r\n    Bolder\r\n}\r\n\r\nexport enum TextColor {\r\n    Default,\r\n    Dark,\r\n    Light,\r\n    Accent,\r\n    Good,\r\n    Warning,\r\n    Attention\r\n}\r\n\r\nexport enum HorizontalAlignment {\r\n    Left,\r\n    Center,\r\n    Right\r\n}\r\n\r\nexport enum VerticalAlignment {\r\n    Top,\r\n    Center,\r\n    Bottom\r\n}\r\n\r\nexport enum ActionAlignment {\r\n    Left,\r\n    Center,\r\n    Right,\r\n    Stretch\r\n}\r\n\r\nexport enum ImageStyle {\r\n    Default,\r\n    Person\r\n}\r\n\r\nexport enum ShowCardActionMode {\r\n    Inline,\r\n    Popup\r\n}\r\n\r\nexport enum Orientation {\r\n    Horizontal,\r\n    Vertical\r\n}\r\n\r\nexport enum BackgroundImageMode {\r\n    Stretch,\r\n    RepeatHorizontally,\r\n    RepeatVertically,\r\n    Repeat\r\n}\r\n\r\nexport enum ActionIconPlacement {\r\n    LeftOfTitle,\r\n    AboveTitle\r\n}\r\n\r\nexport enum InputTextStyle {\r\n    Text,\r\n    Tel,\r\n    Url,\r\n    Email\r\n}\r\n\r\n/*\r\n    This should really be a string enum, e.g.\r\n    \r\n        export enum ContainerStyle {\r\n            Default = \"default\",\r\n            Emphasis = \"emphasis\"\r\n        }\r\n\r\n    However, some hosts do not use a version of TypeScript\r\n    recent enough to understand string enums. This is\r\n    a compatible construct that does not require using\r\n    a more recent version of TypeScript.\r\n*/\r\nexport class ContainerStyle {\r\n    static readonly Default = \"default\";\r\n    static readonly Emphasis = \"emphasis\";\r\n}\r\n\r\nexport enum ValidationError {\r\n    Hint,\r\n    ActionTypeNotAllowed,\r\n    CollectionCantBeEmpty,\r\n    Deprecated,\r\n    ElementTypeNotAllowed,\r\n    InteractivityNotAllowed,\r\n    InvalidPropertyValue,\r\n    MissingCardType,\r\n    PropertyCantBeNull,\r\n    TooManyActions,\r\n    UnknownActionType,\r\n    UnknownElementType,\r\n    UnsupportedCardVersion\r\n}\r\n\r\nexport enum ContainerFitStatus {\r\n    FullyInContainer,\r\n    Overflowing,\r\n    FullyOutOfContainer\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/enums.ts","import * as Enums from \"./enums\";\r\n\r\n/**\r\n * Fast UUID generator, RFC4122 version 4 compliant.\r\n * @author Jeff Ward (jcward.com).\r\n * @license MIT license\r\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n **/\r\nexport class UUID {\r\n    private static lut = [];\r\n\r\n    static generate(): string {\r\n        let d0 = Math.random() * 0xffffffff | 0;\r\n        let d1 = Math.random() * 0xffffffff | 0;\r\n        let d2 = Math.random() * 0xffffffff | 0;\r\n        let d3 = Math.random() * 0xffffffff | 0;\r\n\r\n        return UUID.lut[d0 & 0xff] + UUID.lut[d0 >> 8 & 0xff] + UUID.lut[d0 >> 16 & 0xff] + UUID.lut[d0 >> 24 & 0xff] + '-' +\r\n            UUID.lut[d1 & 0xff] + UUID.lut[d1 >> 8 & 0xff] + '-' + UUID.lut[d1 >> 16 & 0x0f | 0x40] + UUID.lut[d1 >> 24 & 0xff] + '-' +\r\n            UUID.lut[d2 & 0x3f | 0x80] + UUID.lut[d2 >> 8 & 0xff] + '-' + UUID.lut[d2 >> 16 & 0xff] + UUID.lut[d2 >> 24 & 0xff] +\r\n            UUID.lut[d3 & 0xff] + UUID.lut[d3 >> 8 & 0xff] + UUID.lut[d3 >> 16 & 0xff] + UUID.lut[d3 >> 24 & 0xff];\r\n    }\r\n\r\n    static initialize() {\r\n        for (let i = 0; i < 256; i++) {\r\n            UUID.lut[i] = (i < 16 ? '0' : '') + i.toString(16);\r\n        }\r\n    }\r\n}\r\n\r\nUUID.initialize();\r\n\r\nexport const ContentTypes = {\r\n    applicationJson : \"application/json\",\r\n    applicationXWwwFormUrlencoded : \"application/x-www-form-urlencoded\"\r\n}\r\n\r\nexport interface ISeparationDefinition {\r\n    spacing: number,\r\n    lineThickness?: number,\r\n    lineColor?: string\r\n}\r\n\r\nexport interface IInput {\r\n    id: string;\r\n    value: string;\r\n}\r\n\r\nexport function getValueOrDefault<T>(obj: any, defaultValue: T): T {\r\n    return obj ? <T>obj : defaultValue;\r\n}\r\n\r\nexport function isNullOrEmpty(value: string): boolean {\r\n    return value === undefined || value === null || value === \"\";\r\n}\r\n\r\nexport function appendChild(node: Node, child: Node) {\r\n    if (child != null && child != undefined) {\r\n        node.appendChild(child);\r\n    }\r\n}\r\n\r\nexport function setProperty(target: any, propertyName: string, propertyValue: any, defaultValue: any = undefined) {\r\n    if (propertyValue && (!defaultValue || defaultValue !== propertyValue)) {\r\n        target[propertyName] = propertyValue;\r\n    }\r\n}\r\n\r\nexport function setEnumProperty(enumType: { [s: number]: string }, target: any, propertyName: string, propertyValue: number, defaultValue?: number) {\r\n    if (defaultValue === undefined || defaultValue !== propertyValue) {\r\n        target[propertyName] = enumType[propertyValue];\r\n    }\r\n}\r\n\r\nexport function getEnumValueOrDefault(targetEnum: { [s: number]: string }, name: string, defaultValue: number): number {\r\n    if (isNullOrEmpty(name)) {\r\n        return defaultValue;\r\n    }\r\n\r\n    for (var key in targetEnum) {\r\n        let isValueProperty = parseInt(key, 10) >= 0\r\n\r\n        if (isValueProperty) {\r\n            let value = targetEnum[key];\r\n\r\n            if (value && typeof value === \"string\") {\r\n                if (value.toLowerCase() === name.toLowerCase()) {\r\n                    return parseInt(key, 10);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return defaultValue;\r\n}\r\n\r\nexport function parseHostConfigEnum(targetEnum: { [s: number]: string }, value: string | number, defaultValue: any): any {\r\n    if (typeof value === \"string\") {\r\n        return getEnumValueOrDefault(targetEnum, value, defaultValue);\r\n    } else if (typeof value === \"number\") {\r\n        return getValueOrDefault<typeof targetEnum>(value, defaultValue);\r\n    } else {\r\n        return defaultValue;\r\n    }\r\n}\r\n\r\nexport function renderSeparation(separationDefinition: ISeparationDefinition, orientation: Enums.Orientation): HTMLElement {\r\n    if (separationDefinition.spacing > 0 || separationDefinition.lineThickness > 0) {\r\n        var separator = document.createElement(\"div\");\r\n\r\n        if (orientation == Enums.Orientation.Horizontal) {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingTop = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderTop = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.height = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            if (separationDefinition.lineThickness) {\r\n                separator.style.marginLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.paddingLeft = (separationDefinition.spacing / 2) + \"px\";\r\n                separator.style.borderLeft = separationDefinition.lineThickness + \"px solid \" + stringToCssColor(separationDefinition.lineColor);\r\n            }\r\n            else {\r\n                separator.style.width = separationDefinition.spacing + \"px\";\r\n            }\r\n        }\r\n\r\n        separator.style.overflow = \"hidden\";\r\n\r\n        return separator;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function stringToCssColor(color: string): string {\r\n    var regEx = /#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})?/gi;\r\n\r\n    var matches = regEx.exec(color);\r\n\r\n    if (matches && matches[4]) {\r\n        var a = parseInt(matches[1], 16) / 255;\r\n        var r = parseInt(matches[2], 16);\r\n        var g = parseInt(matches[3], 16);\r\n        var b = parseInt(matches[4], 16);\r\n\r\n        return \"rgba(\" + r + \",\" + g + \",\" + b + \",\" + a + \")\";\r\n    }\r\n    else {\r\n        return color;\r\n    }\r\n}\r\n\r\nexport class StringWithSubstitutions {\r\n    private _isProcessed: boolean = false;\r\n    private _original: string = null;\r\n    private _processed: string = null;\r\n\r\n    substituteInputValues(inputs: Array<IInput>, contentType: string) {\r\n        this._processed = this._original;\r\n\r\n        var regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\r\n        var matches;\r\n\r\n        while ((matches = regEx.exec(this._original)) != null) {\r\n            var matchedInput: IInput = null;\r\n\r\n            for (var i = 0; i < inputs.length; i++) {\r\n                if (inputs[i].id.toLowerCase() == matches[1].toLowerCase()) {\r\n                    matchedInput = inputs[i];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (matchedInput) {\r\n                var valueForReplace = \"\";\r\n\r\n                if (matchedInput.value) {\r\n                    valueForReplace = matchedInput.value;\r\n                }\r\n\r\n                if (contentType === ContentTypes.applicationJson) {\r\n                    valueForReplace = JSON.stringify(valueForReplace);\r\n                    valueForReplace = valueForReplace.slice(1, -1);\r\n                }\r\n                else if (contentType === ContentTypes.applicationXWwwFormUrlencoded) {\r\n                    valueForReplace = encodeURIComponent(valueForReplace);\r\n                }\r\n\r\n                this._processed = this._processed.replace(matches[0], valueForReplace);\r\n            }\r\n        };\r\n\r\n        this._isProcessed = true;\r\n    }\r\n\r\n    getOriginal(): string {\r\n        return this._original;\r\n    }\r\n\r\n    get(): string {\r\n        if (!this._isProcessed) {\r\n            return this._original;\r\n        }\r\n        else {\r\n            return this._processed;\r\n        }\r\n    }\r\n\r\n    set(value: string) {\r\n        this._original = value;\r\n        this._isProcessed = false;\r\n    }\r\n}\r\n\r\nexport class SizeAndUnit {\r\n    physicalSize: number;\r\n    unit: Enums.SizeUnit;\r\n\r\n    static parse(input: any): SizeAndUnit {\r\n        let result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n\r\n        let regExp = /^([0-9]+)(px|\\*)?$/g;\r\n        let matches = regExp.exec(input);\r\n\r\n        if (matches && matches.length >= 2) {\r\n            result.physicalSize = parseInt(matches[1]);\r\n\r\n            if (matches.length == 3) {\r\n                if (matches[2] == \"px\") {\r\n                    result.unit = Enums.SizeUnit.Pixel;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        throw new Error(\"Invalid size: \" + input);\r\n    }\r\n\r\n    constructor(physicalSize: number, unit: Enums.SizeUnit) {\r\n        this.physicalSize = physicalSize;\r\n        this.unit = unit;\r\n    }\r\n}\r\n\r\nexport function truncate(element: HTMLElement,\r\n                         maxHeight: number,\r\n                         lineHeight?: number) {\r\n    var fits = () => {\r\n        // Allow a one pixel overflow to account for rounding differences\r\n        // between browsers\r\n        return maxHeight - element.scrollHeight >= -1.0;\r\n    };\r\n\r\n    if (fits()) return;\r\n\r\n    var fullText = element.innerHTML;\r\n    var truncateAt = (idx) => {\r\n        element.innerHTML = fullText.substring(0, idx) + '...';\r\n    }\r\n\r\n    var breakableIndices = findBreakableIndices(fullText);\r\n    var lo = 0;\r\n    var hi = breakableIndices.length;\r\n    var bestBreakIdx = 0;\r\n\r\n    // Do a binary search for the longest string that fits\r\n    while (lo < hi) {\r\n        var mid = Math.floor((lo + hi) / 2);\r\n        truncateAt(breakableIndices[mid]);\r\n\r\n        if (fits()) {\r\n            bestBreakIdx = breakableIndices[mid];\r\n            lo = mid + 1;\r\n        }\r\n        else {\r\n            hi = mid;\r\n        }\r\n    }\r\n\r\n    truncateAt(bestBreakIdx);\r\n\r\n    // If we have extra room, try to expand the string letter by letter\r\n    // (covers the case where we have to break in the middle of a long word)\r\n    if (lineHeight && maxHeight - element.scrollHeight >= lineHeight - 1.0) {\r\n        let idx = findNextCharacter(fullText, bestBreakIdx);\r\n\r\n        while (idx < fullText.length) {\r\n            truncateAt(idx);\r\n\r\n            if (fits()) {\r\n                bestBreakIdx = idx;\r\n                idx = findNextCharacter(fullText, idx);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        truncateAt(bestBreakIdx);\r\n    }\r\n}\r\n\r\nfunction findBreakableIndices(html: string): Array<number> {\r\n    var results: Array<number> = [];\r\n    var idx = findNextCharacter(html, -1);\r\n\r\n    while (idx < html.length) {\r\n        if (html[idx] == ' ') {\r\n            results.push(idx);\r\n        }\r\n\r\n        idx = findNextCharacter(html, idx);\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\nfunction findNextCharacter(html: string, currIdx: number): number {\r\n    currIdx += 1;\r\n\r\n    // If we found the start of an HTML tag, keep advancing until we get\r\n    // past it, so we don't end up truncating in the middle of the tag\r\n    while (currIdx < html.length && html[currIdx] == '<') {\r\n        while (currIdx < html.length && html[currIdx++] != '>');\r\n    }\r\n\r\n    return currIdx;\r\n}\r\n\r\nexport function getFitStatus(element: HTMLElement, containerEnd: number): Enums.ContainerFitStatus {\r\n    var start = element.offsetTop;\r\n    var end = start + element.clientHeight;\r\n\r\n    if (end <= containerEnd) {\r\n        return Enums.ContainerFitStatus.FullyInContainer;\r\n    }\r\n    else if (start < containerEnd) {\r\n        return Enums.ContainerFitStatus.Overflowing;\r\n    }\r\n    else {\r\n        return Enums.ContainerFitStatus.FullyOutOfContainer;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.ts","import * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport { TextColor } from \"./adaptivecards\";\r\n\r\nexport class TextColorDefinition {\r\n    default: string = \"#000000\";\r\n    subtle: string = \"#666666\";\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.default = obj[\"default\"] || this.default;\r\n            this.subtle = obj[\"subtle\"] || this.subtle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class AdaptiveCardConfig {\r\n    allowCustomStyle: boolean = false;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.allowCustomStyle = obj[\"allowCustomStyle\"] || this.allowCustomStyle;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSetConfig {\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n    maxImageHeight: number = 100;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.imageSize = obj[\"imageSize\"] != null ? obj[\"imageSize\"] : this.imageSize;\r\n            this.maxImageHeight = Utils.getValueOrDefault<number>(obj[\"maxImageHeight\"], 100);\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            imageSize: Enums.Size[this.imageSize],\r\n            maxImageHeight: this.maxImageHeight\r\n        }\r\n    }\r\n}\r\n\r\nexport class MediaConfig {\r\n    defaultPoster: string;\r\n    allowInlinePlayback: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.defaultPoster = obj[\"defaultPoster\"];\r\n            this.allowInlinePlayback = obj[\"allowInlinePlayback\"] || this.allowInlinePlayback;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            defaultPoster: this.defaultPoster,\r\n            allowInlinePlayback: this.allowInlinePlayback\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTextDefinition {\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;;\r\n    isSubtle: boolean = false;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    wrap: boolean = true;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.size = Utils.parseHostConfigEnum(Enums.TextSize, obj[\"size\"], Enums.TextSize.Default);\r\n            this.color = Utils.parseHostConfigEnum(Enums.TextColor, obj[\"color\"], Enums.TextColor.Default);\r\n            this.isSubtle = obj[\"isSubtle\"] || this.isSubtle;\r\n            this.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], this.getDefaultWeight());\r\n            this.wrap = obj[\"wrap\"] != null ? obj[\"wrap\"] : this.wrap;\r\n        }\r\n    }\r\n\t\r\n    getDefaultWeight() {\r\n\t\treturn Enums.TextWeight.Default;\r\n    }\r\n\r\n    toJSON(): any {\r\n        return {\r\n            size: Enums.TextSize[this.size],\r\n            color: Enums.TextColor[this.color],\r\n            isSubtle: this.isSubtle,\r\n            weight: Enums.TextWeight[this.weight],\r\n            wrap: this.wrap\r\n        }\r\n    }\r\n}\r\n\r\nexport class FactTitleDefinition extends FactTextDefinition {\r\n    maxWidth?: number = 150;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Bolder;\r\n\t\r\n    constructor(obj?: any) {\r\n        super(obj);\r\n\r\n        if (obj) {\r\n            this.maxWidth = obj[\"maxWidth\"] != null ? obj[\"maxWidth\"] : this.maxWidth;\r\n\t\t\tthis.weight = Utils.parseHostConfigEnum(Enums.TextWeight, obj[\"weight\"], Enums.TextWeight.Bolder);\r\n        }\r\n    }\r\n\t\r\n    getDefaultWeight() {\r\n        return Enums.TextWeight.Bolder;\r\n    }\r\n}\r\n\r\nexport class FactSetConfig {\r\n    readonly title: FactTitleDefinition = new FactTitleDefinition();\r\n    readonly value: FactTextDefinition = new FactTextDefinition();\r\n    spacing: number = 10;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.title = new FactTitleDefinition(obj[\"title\"]);\r\n            this.value = new FactTextDefinition(obj[\"value\"]);\r\n            this.spacing = obj.spacing && obj.spacing != null ? obj.spacing && obj.spacing : this.spacing;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ShowCardActionConfig {\r\n    actionMode: Enums.ShowCardActionMode = Enums.ShowCardActionMode.Inline;\r\n    inlineTopMargin: number = 16;\r\n    style?: string = Enums.ContainerStyle.Emphasis;\r\n    \r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.actionMode = Utils.parseHostConfigEnum(Enums.ShowCardActionMode, obj[\"actionMode\"], Enums.ShowCardActionMode.Inline);\r\n            this.inlineTopMargin = obj[\"inlineTopMargin\"] != null ? obj[\"inlineTopMargin\"] : this.inlineTopMargin;\r\n            this.style = obj[\"style\"] && typeof obj[\"style\"] === \"string\" ? obj[\"style\"] : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            actionMode: Enums.ShowCardActionMode[this.actionMode],\r\n            inlineTopMargin: this.inlineTopMargin,\r\n            style: this.style\r\n        }\r\n    }\r\n}\r\n\r\nexport class ActionsConfig {\r\n    maxActions: number = 5;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    buttonSpacing: number = 20;\r\n    readonly showCard: ShowCardActionConfig = new ShowCardActionConfig();\r\n    preExpandSingleShowCardAction?: boolean = false;\r\n    actionsOrientation: Enums.Orientation = Enums.Orientation.Horizontal;\r\n    actionAlignment: Enums.ActionAlignment = Enums.ActionAlignment.Left;\r\n    iconPlacement: Enums.ActionIconPlacement = Enums.ActionIconPlacement.LeftOfTitle;\r\n    allowTitleToWrap: boolean = false;\r\n    iconSize: number = 24;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            this.maxActions = obj[\"maxActions\"] != null ? obj[\"maxActions\"] : this.maxActions;\r\n            this.spacing = Utils.parseHostConfigEnum(Enums.Spacing, obj.spacing && obj.spacing, Enums.Spacing.Default);\r\n            this.buttonSpacing = obj[\"buttonSpacing\"] != null ? obj[\"buttonSpacing\"] : this.buttonSpacing;\r\n            this.showCard = new ShowCardActionConfig(obj[\"showCard\"]);\r\n            this.preExpandSingleShowCardAction = Utils.getValueOrDefault<boolean>(obj[\"preExpandSingleShowCardAction\"], false);\r\n            this.actionsOrientation = Utils.parseHostConfigEnum(Enums.Orientation, obj[\"actionsOrientation\"], Enums.Orientation.Horizontal);\r\n            this.actionAlignment = Utils.parseHostConfigEnum(Enums.ActionAlignment, obj[\"actionAlignment\"], Enums.ActionAlignment.Left);\r\n            this.iconPlacement = Utils.parseHostConfigEnum(Enums.ActionIconPlacement, obj[\"iconPlacement\"], Enums.ActionIconPlacement.LeftOfTitle);\r\n            this.allowTitleToWrap = obj[\"allowTitleToWrap\"] != null ? obj[\"allowTitleToWrap\"] : this.allowTitleToWrap;\r\n\r\n            try {\r\n                let sizeAndUnit = Utils.SizeAndUnit.parse(obj[\"iconSize\"]);\r\n\r\n                if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                    this.iconSize = sizeAndUnit.physicalSize;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Swallow this, keep default icon size\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            maxActions: this.maxActions,\r\n            spacing: Enums.Spacing[this.spacing],\r\n            buttonSpacing: this.buttonSpacing,\r\n            showCard: this.showCard,\r\n            preExpandSingleShowCardAction: this.preExpandSingleShowCardAction,\r\n            actionsOrientation: Enums.Orientation[this.actionsOrientation],\r\n            actionAlignment: Enums.ActionAlignment[this.actionAlignment]\r\n        }\r\n    }\r\n}\r\n\r\nexport class ContainerStyleDefinition {\r\n    private getTextColorDefinitionOrDefault(obj: any, defaultValue: { default: string, subtle: string }) {\r\n        return new TextColorDefinition(obj ? obj : defaultValue);\r\n    }\r\n\r\n    backgroundColor?: string;\r\n\r\n    readonly foregroundColors = {\r\n        default: new TextColorDefinition(),\r\n        dark: new TextColorDefinition(),\r\n        light: new TextColorDefinition(),\r\n        accent: new TextColorDefinition(),\r\n        good: new TextColorDefinition(),\r\n        warning: new TextColorDefinition(),\r\n        attention: new TextColorDefinition()\r\n    };\r\n\r\n    parse(obj: any) {\r\n        if (obj) {\r\n            this.backgroundColor = obj[\"backgroundColor\"];\r\n\r\n            if (obj.foregroundColors) {\r\n                this.foregroundColors.default = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"default\"], { default: \"#333333\", subtle: \"#EE333333\" });\r\n                this.foregroundColors.dark = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"dark\"], { default: \"#000000\", subtle: \"#66000000\" });\r\n                this.foregroundColors.light = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"light\"], { default: \"#FFFFFF\", subtle: \"#33000000\" });\r\n                this.foregroundColors.accent = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"accent\"], { default: \"#2E89FC\", subtle: \"#882E89FC\" });\r\n                this.foregroundColors.good = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"good\"], { default: \"#54A254\", subtle: \"#DD54A254\" });\r\n                this.foregroundColors.warning = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"warning\"], { default: \"#E69500\", subtle: \"#DDE69500\" });\r\n                this.foregroundColors.attention = this.getTextColorDefinitionOrDefault(obj.foregroundColors[\"attention\"], { default: \"#CC3300\", subtle: \"#DDCC3300\" });\r\n            }\r\n        }        \r\n    }\r\n\r\n    constructor(obj?: any) {\r\n        this.parse(obj);\r\n    }\r\n    \r\n    get isBuiltIn(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass BuiltInContainerStyleDefinition extends ContainerStyleDefinition {\r\n    get isBuiltIn(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport interface ILineHeightDefinitions {\r\n    small: number;\r\n    medium: number;\r\n    default: number;\r\n    large: number;\r\n    extraLarge: number;\r\n}\r\n\r\nexport class ContainerStyleSet {\r\n    private _allStyles: object = {};\r\n\r\n    constructor(obj?: any) {\r\n        this._allStyles[Enums.ContainerStyle.Default] = new BuiltInContainerStyleDefinition();\r\n        this._allStyles[Enums.ContainerStyle.Emphasis] = new BuiltInContainerStyleDefinition();\r\n\r\n        if (obj) {\r\n            this._allStyles[Enums.ContainerStyle.Default].parse(obj[Enums.ContainerStyle.Default]);\r\n            this._allStyles[Enums.ContainerStyle.Emphasis].parse(obj[Enums.ContainerStyle.Emphasis]);\r\n\r\n            const customStyleArray = obj[\"customStyles\"];\r\n\r\n            if (customStyleArray && Array.isArray(customStyleArray)) {\r\n                for (var customStyle of customStyleArray) {\r\n                    if (customStyle) {\r\n                        var styleName = customStyle[\"name\"];\r\n\r\n                        if (styleName && typeof styleName === \"string\") {\r\n                            if (this._allStyles.hasOwnProperty(styleName)) {\r\n                                this._allStyles[styleName].parse(customStyle[\"style\"]);\r\n                            }\r\n                            else {\r\n                                this._allStyles[styleName] = new ContainerStyleDefinition(customStyle[\"style\"]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        var customStyleArray: Array<any> = [];\r\n\r\n        Object.keys(this._allStyles).forEach(\r\n            (key) => {\r\n                if (!this._allStyles[key].isBuiltIn) {\r\n                    customStyleArray.push({\r\n                        name: key,\r\n                        style: this._allStyles[key]\r\n                    });\r\n                }\r\n            });\r\n\r\n        var result: any = {\r\n            default: this.default,\r\n            emphasis: this.emphasis\r\n        }\r\n\r\n        if (customStyleArray.length > 0) {\r\n            result.customStyles = customStyleArray;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getStyleByName(name: string, defaultValue: ContainerStyleDefinition = null): ContainerStyleDefinition {\r\n        return this._allStyles.hasOwnProperty(name) ? this._allStyles[name] : defaultValue;\r\n    }\r\n\r\n    get default(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Default];\r\n    }\r\n\r\n    get emphasis(): ContainerStyleDefinition {\r\n        return this._allStyles[Enums.ContainerStyle.Emphasis];\r\n    }\r\n}\r\n\r\nexport class HostConfig {\r\n    choiceSetInputValueSeparator: string = \",\";\r\n    supportsInteractivity: boolean = true;\r\n    lineHeights?: ILineHeightDefinitions;\r\n\r\n    fontFamily?: string = \"Segoe UI,Segoe,Segoe WP,Helvetica Neue,Helvetica,sans-serif\";\r\n    \r\n    readonly spacing = {\r\n        small: 3,\r\n        default: 8,\r\n        medium: 20,\r\n        large: 30,\r\n        extraLarge: 40,\r\n        padding: 15\r\n    };\r\n\r\n    readonly separator = {\r\n        lineThickness: 1,\r\n        lineColor: \"#EEEEEE\"\r\n    };\r\n\r\n    readonly fontSizes = {\r\n        small: 12,\r\n        default: 14,\r\n        medium: 17,\r\n        large: 21,\r\n        extraLarge: 26\r\n    };\r\n    \r\n    readonly fontWeights = {\r\n        lighter: 200,\r\n        default: 400,\r\n        bolder: 600\r\n    };\r\n    readonly imageSizes = {\r\n        small: 40,\r\n        medium: 80,\r\n        large: 160\r\n    };\r\n\r\n    readonly containerStyles: ContainerStyleSet = new ContainerStyleSet();\r\n    readonly actions: ActionsConfig = new ActionsConfig();\r\n    readonly adaptiveCard: AdaptiveCardConfig = new AdaptiveCardConfig();\r\n    readonly imageSet: ImageSetConfig = new ImageSetConfig();\r\n    readonly media: MediaConfig = new MediaConfig();\r\n    readonly factSet: FactSetConfig = new FactSetConfig();\r\n\r\n    cssClassNamePrefix: string = null;\r\n\r\n    constructor(obj?: any) {\r\n        if (obj) {\r\n            if (typeof obj === \"string\" || obj instanceof String) {\r\n                obj = JSON.parse(obj as string);\r\n            }\r\n\r\n            this.choiceSetInputValueSeparator = (obj && typeof obj[\"choiceSetInputValueSeparator\"] === \"string\") ? obj[\"choiceSetInputValueSeparator\"] : this.choiceSetInputValueSeparator;\r\n            this.supportsInteractivity = (obj && typeof obj[\"supportsInteractivity\"] === \"boolean\") ? obj[\"supportsInteractivity\"] : this.supportsInteractivity;\r\n            this.fontFamily = obj[\"fontFamily\"] || this.fontFamily;\r\n            this.fontSizes = {\r\n                small: obj.fontSizes && obj.fontSizes[\"small\"] || this.fontSizes.small,\r\n                default: obj.fontSizes && obj.fontSizes[\"default\"] || this.fontSizes.default,\r\n                medium: obj.fontSizes && obj.fontSizes[\"medium\"] || this.fontSizes.medium,\r\n                large: obj.fontSizes && obj.fontSizes[\"large\"] || this.fontSizes.large,\r\n                extraLarge: obj.fontSizes && obj.fontSizes[\"extraLarge\"] || this.fontSizes.extraLarge\r\n            };\r\n\r\n            if (obj.lineHeights) {\r\n                this.lineHeights = {\r\n                    small: obj.lineHeights[\"small\"],\r\n                    default: obj.lineHeights[\"default\"],\r\n                    medium: obj.lineHeights[\"medium\"],\r\n                    large: obj.lineHeights[\"large\"],\r\n                    extraLarge: obj.lineHeights[\"extraLarge\"]\r\n                };\r\n            };\r\n\r\n            this.fontWeights = {\r\n                lighter: obj.fontWeights && obj.fontWeights[\"lighter\"] || this.fontWeights.lighter,\r\n                default: obj.fontWeights && obj.fontWeights[\"default\"] || this.fontWeights.default,\r\n                bolder: obj.fontWeights && obj.fontWeights[\"bolder\"] || this.fontWeights.bolder\r\n            };\r\n\r\n            this.imageSizes = {\r\n                small: obj.imageSizes && obj.imageSizes[\"small\"] || this.imageSizes.small,\r\n                medium: obj.imageSizes && obj.imageSizes[\"medium\"] || this.imageSizes.medium,\r\n                large: obj.imageSizes && obj.imageSizes[\"large\"] || this.imageSizes.large,\r\n            };\r\n\r\n            this.containerStyles = new ContainerStyleSet(obj[\"containerStyles\"]);\r\n            this.spacing = {\r\n                small: obj.spacing && obj.spacing[\"small\"] || this.spacing.small,\r\n                default: obj.spacing && obj.spacing[\"default\"] || this.spacing.default,\r\n                medium: obj.spacing && obj.spacing[\"medium\"] || this.spacing.medium,\r\n                large: obj.spacing && obj.spacing[\"large\"] || this.spacing.large,\r\n                extraLarge: obj.spacing && obj.spacing[\"extraLarge\"] || this.spacing.extraLarge,\r\n                padding: obj.spacing && obj.spacing[\"padding\"] || this.spacing.padding\r\n            };\r\n\r\n            this.separator = {\r\n                lineThickness: obj.separator && obj.separator[\"lineThickness\"] || this.separator.lineThickness,\r\n                lineColor: obj.separator && obj.separator[\"lineColor\"] || this.separator.lineColor\r\n            }\r\n\r\n            this.actions = new ActionsConfig(obj.actions || this.actions);\r\n            this.adaptiveCard = new AdaptiveCardConfig(obj.adaptiveCard || this.adaptiveCard);\r\n            this.imageSet = new ImageSetConfig(obj[\"imageSet\"]);\r\n            this.factSet = new FactSetConfig(obj[\"factSet\"])\r\n        }\r\n    }\r\n\r\n    getEffectiveSpacing(spacing: Enums.Spacing): number {\r\n        switch (spacing) {\r\n            case Enums.Spacing.Small:\r\n                return this.spacing.small;\r\n            case Enums.Spacing.Default:\r\n                return this.spacing.default;\r\n            case Enums.Spacing.Medium:\r\n                return this.spacing.medium;\r\n            case Enums.Spacing.Large:\r\n                return this.spacing.large;\r\n            case Enums.Spacing.ExtraLarge:\r\n                return this.spacing.extraLarge;\r\n            case Enums.Spacing.Padding:\r\n                return this.spacing.padding;\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    makeCssClassName(...classNames: string[]): string {\r\n        let result = \"\";\r\n\r\n        for (let i = 0; i < classNames.length; i++) {\r\n            if (i > 0) {\r\n                result += \" \";\r\n            }\r\n\r\n            if (this.cssClassNamePrefix) {\r\n                result += this.cssClassNamePrefix + \"-\";\r\n            }\r\n\r\n            result += classNames[i];\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/host-config.ts","export * from \"./card-elements\";\r\nexport * from \"./enums\";\r\nexport * from \"./host-config\";\r\nexport { getEnumValueOrDefault } from \"./utils\";\r\nexport { IAdaptiveCard, ICardElement } from \"./schema\";\n\n\n// WEBPACK FOOTER //\n// ./src/adaptivecards.ts","import * as Enums from \"./enums\";\r\nimport * as Utils from \"./utils\";\r\nimport * as HostConfig from \"./host-config\";\r\nimport * as TextFormatters from \"./text-formatters\";\r\n\r\nfunction invokeSetCollection(action: Action, collection: ActionCollection) {\r\n    if (action) {\r\n        // Closest emulation of \"internal\" in TypeScript.\r\n        action[\"setCollection\"](collection);\r\n    }\r\n}\r\n\r\nfunction isActionAllowed(action: Action, forbiddenActionTypes: Array<string>): boolean {\r\n    if (forbiddenActionTypes) {\r\n        for (var i = 0; i < forbiddenActionTypes.length; i++) {\r\n            if (action.getJsonTypeName() === forbiddenActionTypes[i]) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction generateUniqueId(): string {\r\n    return \"__ac-\" + Utils.UUID.generate();\r\n}\r\n\r\nexport function createActionInstance(json: any, errors: Array<IValidationError>): Action {\r\n    var actionType = json[\"type\"];\r\n\r\n    var result = AdaptiveCard.actionTypeRegistry.createInstance(actionType);\r\n\r\n    if (!result) {\r\n        raiseParseError(\r\n            {\r\n                error: Enums.ValidationError.UnknownActionType,\r\n                message: \"Unknown action type: \" + actionType\r\n            },\r\n            errors\r\n        );\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport class SpacingDefinition {\r\n    left: number = 0;\r\n    top: number = 0;\r\n    right: number = 0;\r\n    bottom: number = 0;\r\n\r\n    constructor(top: number = 0,\r\n        right: number = 0,\r\n        bottom: number = 0,\r\n        left: number = 0) {\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n}\r\n\r\nexport class PaddingDefinition {\r\n    top: Enums.Spacing = Enums.Spacing.None;\r\n    right: Enums.Spacing = Enums.Spacing.None;\r\n    bottom: Enums.Spacing = Enums.Spacing.None;\r\n    left: Enums.Spacing = Enums.Spacing.None;\r\n\r\n    constructor(top: Enums.Spacing = Enums.Spacing.None,\r\n        right: Enums.Spacing = Enums.Spacing.None,\r\n        bottom: Enums.Spacing = Enums.Spacing.None,\r\n        left: Enums.Spacing = Enums.Spacing.None) {\r\n        this.top = top;\r\n        this.right = right;\r\n        this.bottom = bottom;\r\n        this.left = left;\r\n    }\r\n\r\n    toSpacingDefinition(hostConfig: HostConfig.HostConfig): SpacingDefinition {\r\n        return new SpacingDefinition(\r\n            hostConfig.getEffectiveSpacing(this.top),\r\n            hostConfig.getEffectiveSpacing(this.right),\r\n            hostConfig.getEffectiveSpacing(this.bottom),\r\n            hostConfig.getEffectiveSpacing(this.left));\r\n    }\r\n}\r\n\r\nexport interface IValidationError {\r\n    error: Enums.ValidationError,\r\n    message: string;\r\n}\r\n\r\nexport class SizeAndUnit {\r\n    physicalSize: number;\r\n    unit: Enums.SizeUnit;\r\n\r\n    static parse(input: any): SizeAndUnit {\r\n        let result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\r\n\r\n        let regExp = /^([0-9]+)(px|\\*)?$/g;\r\n        let matches = regExp.exec(input);\r\n\r\n        if (matches && matches.length >= 2) {\r\n            result.physicalSize = parseInt(matches[1]);\r\n\r\n            if (matches.length == 3) {\r\n                if (matches[2] == \"px\") {\r\n                    result.unit = Enums.SizeUnit.Pixel;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        throw new Error(\"Invalid size: \" + input);\r\n    }\r\n\r\n    constructor(physicalSize: number, unit: Enums.SizeUnit) {\r\n        this.physicalSize = physicalSize;\r\n        this.unit = unit;\r\n    }\r\n}\r\n\r\nexport interface IResourceInformation {\r\n    url: string;\r\n    mimeType: string;\r\n}\r\n\r\nexport abstract class CardElement {\r\n    private _lang: string = undefined;\r\n    private _hostConfig?: HostConfig.HostConfig = null;\r\n    private _internalPadding: PaddingDefinition = null;\r\n    private _parent: CardElement = null;\r\n    private _renderedElement: HTMLElement = null;\r\n    private _separatorElement: HTMLElement = null;\r\n    private _isVisible: boolean = true;\r\n    private _truncatedDueToOverflow: boolean = false;\r\n    private _defaultRenderedElementDisplayMode: string = null;\r\n    private _padding: PaddingDefinition = null;\r\n\r\n    private internalRenderSeparator(): HTMLElement {\r\n        return Utils.renderSeparation(\r\n            {\r\n                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\r\n                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : null,\r\n                lineColor: this.separator ? this.hostConfig.separator.lineColor : null\r\n            },\r\n            this.separatorOrientation);\r\n    }\r\n\r\n    private updateRenderedElementVisibility() {\r\n        if (this._renderedElement) {\r\n            this._renderedElement.style.display = this._isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n        }\r\n\r\n        if (this._separatorElement) {\r\n            if (this.parent && this.parent.isFirstElement(this)) {\r\n                this._separatorElement.style.display = \"none\";\r\n            }\r\n            else {\r\n                this._separatorElement.style.display = this._isVisible ? this._defaultRenderedElementDisplayMode : \"none\";\r\n            }\r\n        }\r\n    }\r\n\r\n    private hideElementDueToOverflow() {\r\n        if (this._renderedElement && this._isVisible) {\r\n            this._renderedElement.style.visibility = 'hidden';\r\n            this._isVisible = false;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    private showElementHiddenDueToOverflow() {\r\n        if (this._renderedElement && !this._isVisible) {\r\n            this._renderedElement.style.visibility = null;\r\n            this._isVisible = true;\r\n            raiseElementVisibilityChangedEvent(this, false);\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private handleOverflow(maxHeight: number) {\r\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\r\n            var handled = this.truncateOverflow(maxHeight);\r\n\r\n            // Even if we were unable to truncate the element to fit this time,\r\n            // it still could have been previously truncated\r\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\r\n\r\n            if (!handled) {\r\n                this.hideElementDueToOverflow();\r\n            }\r\n            else if (handled && !this._isVisible) {\r\n                this.showElementHiddenDueToOverflow();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Marked private to emulate internal access\r\n    private resetOverflow(): boolean {\r\n        var sizeChanged = false;\r\n\r\n        if (this._truncatedDueToOverflow) {\r\n            this.undoOverflowTruncation();\r\n            this._truncatedDueToOverflow = false;\r\n            sizeChanged = true;\r\n        }\r\n\r\n        if (this.isHiddenDueToOverflow) {\r\n            this.showElementHiddenDueToOverflow();\r\n        }\r\n\r\n        return sizeChanged;\r\n    }\r\n\r\n    protected createPlaceholderElement(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.style.border = \"1px dashed #DDDDDD\";\r\n        element.style.padding = \"4px\";\r\n        element.style.minHeight = \"32px\";\r\n        element.style.fontSize = \"10px\";\r\n        element.innerText = \"Empty \" + this.getJsonTypeName();\r\n\r\n        return element;\r\n    }\r\n\r\n    protected internalGetNonZeroPadding(padding: PaddingDefinition,\r\n        processTop: boolean = true,\r\n        processRight: boolean = true,\r\n        processBottom: boolean = true,\r\n        processLeft: boolean = true) {\r\n        if (processTop) {\r\n            if (padding.top == Enums.Spacing.None) {\r\n                padding.top = this.internalPadding.top;\r\n            }\r\n        }\r\n\r\n        if (processRight) {\r\n            if (padding.right == Enums.Spacing.None) {\r\n                padding.right = this.internalPadding.right;\r\n            }\r\n        }\r\n\r\n        if (processBottom) {\r\n            if (padding.bottom == Enums.Spacing.None) {\r\n                padding.bottom = this.internalPadding.bottom;\r\n            }\r\n        }\r\n\r\n        if (processLeft) {\r\n            if (padding.left == Enums.Spacing.None) {\r\n                padding.left = this.internalPadding.left;\r\n            }\r\n        }\r\n\r\n        if (this.parent) {\r\n            this.parent.internalGetNonZeroPadding(\r\n                padding,\r\n                processTop && this.isAtTheVeryTop(),\r\n                processRight && this.isAtTheVeryRight(),\r\n                processBottom && this.isAtTheVeryBottom(),\r\n                processLeft && this.isAtTheVeryLeft());\r\n        }\r\n    }\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        if (this.height === \"auto\") {\r\n            renderedElement.style.flex = \"0 0 auto\";\r\n        }\r\n        else {\r\n            renderedElement.style.flex = \"1 1 auto\";\r\n        }\r\n    }\r\n\r\n    protected abstract internalRender(): HTMLElement;\r\n\r\n    /*\r\n     * Called when this element overflows the bottom of the card.\r\n     * maxHeight will be the amount of space still available on the card (0 if\r\n     * the element is fully off the card).\r\n     */\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Child implementations should return true if the element handled\r\n        // the truncation request such that its content fits within maxHeight,\r\n        // false if the element should fall back to being hidden\r\n        return false;\r\n    }\r\n\r\n    /*\r\n     * This should reverse any changes performed in truncateOverflow().\r\n     */\r\n    protected undoOverflowTruncation() { }\r\n\r\n    protected isDesignMode(): boolean {\r\n        var rootElement = this.getRootElement();\r\n\r\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\r\n    }\r\n\r\n    protected get useDefaultSizing(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition();\r\n    }\r\n\r\n    protected get internalPadding(): PaddingDefinition {\r\n        if (this._padding) {\r\n            return this._padding;\r\n        }\r\n        else {\r\n            return (this._internalPadding && this.allowCustomPadding) ? this._internalPadding : this.defaultPadding;\r\n        }\r\n    }\r\n\r\n    protected set internalPadding(value: PaddingDefinition) {\r\n        this._internalPadding = value;\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Horizontal;\r\n    }\r\n\r\n    protected getPadding(): PaddingDefinition {\r\n        return this._padding;\r\n    }\r\n\r\n    protected setPadding(value: PaddingDefinition) {\r\n        this._padding = value;\r\n\r\n        if (this._padding) {\r\n            AdaptiveCard.useAutomaticContainerBleeding = false;\r\n        }\r\n    }\r\n\r\n    id: string;\r\n    speak: string;\r\n    horizontalAlignment?: Enums.HorizontalAlignment = null;\r\n    spacing: Enums.Spacing = Enums.Spacing.Default;\r\n    separator: boolean = false;\r\n    height: \"auto\" | \"stretch\" = \"auto\";\r\n    customCssSelector: string = null;\r\n\r\n    abstract getJsonTypeName(): string;\r\n    abstract renderSpeech(): string;\r\n\r\n    toJSON() {\r\n        let result = {};\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n\r\n        if (this.horizontalAlignment !== null) {\r\n            Utils.setEnumProperty(Enums.HorizontalAlignment, result, \"horizontalAlignment\", this.horizontalAlignment);\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.Spacing, result, \"spacing\", this.spacing, Enums.Spacing.Default);\r\n        Utils.setProperty(result, \"separator\", this.separator, false);\r\n        Utils.setProperty(result, \"height\", this.height, \"auto\");\r\n\r\n        return result;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    getNonZeroPadding(): PaddingDefinition {\r\n        var padding: PaddingDefinition = new PaddingDefinition();\r\n\r\n        this.internalGetNonZeroPadding(padding);\r\n\r\n        return padding;\r\n    }\r\n\r\n    getForbiddenElementTypes(): Array<string> {\r\n        return null;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return null;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        raiseParseElementEvent(this, json, errors);\r\n\r\n        this.id = json[\"id\"];\r\n        this.speak = json[\"speak\"];\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], null);\r\n\r\n        this.spacing = Utils.getEnumValueOrDefault(Enums.Spacing, json[\"spacing\"], Enums.Spacing.Default);\r\n        this.separator = json[\"separator\"];\r\n\r\n        var jsonSeparation = json[\"separation\"];\r\n\r\n        if (jsonSeparation !== undefined) {\r\n            if (jsonSeparation === \"none\") {\r\n                this.spacing = Enums.Spacing.None;\r\n                this.separator = false;\r\n            }\r\n            else if (jsonSeparation === \"strong\") {\r\n                this.spacing = Enums.Spacing.Large;\r\n                this.separator = true;\r\n            }\r\n            else if (jsonSeparation === \"default\") {\r\n                this.spacing = Enums.Spacing.Default;\r\n                this.separator = false;\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The \\\"separation\\\" property is deprecated and will be removed. Use the \\\"spacing\\\" and \\\"separator\\\" properties instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        var jsonHeight = json[\"height\"];\r\n\r\n        if (jsonHeight === \"auto\" || jsonHeight === \"stretch\") {\r\n            this.height = jsonHeight;\r\n        }\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return 0;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        throw new Error(\"Index out of range.\");\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return [];\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this.parent && this.parent instanceof CardElementContainer) {\r\n            return this.parent.removeItem(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render(): HTMLElement {\r\n        this._renderedElement = this.internalRender();\r\n        this._separatorElement = this.internalRenderSeparator();\r\n\r\n        if (this._renderedElement) {\r\n            if (this.customCssSelector) {\r\n                this._renderedElement.classList.add(this.customCssSelector);\r\n            }\r\n\r\n            this._renderedElement.style.boxSizing = \"border-box\";\r\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display;\r\n\r\n            this.adjustRenderedElementSize(this._renderedElement);\r\n            this.updateLayout(false);\r\n        }\r\n        else if (this.isDesignMode()) {\r\n            this._renderedElement = this.createPlaceholderElement();\r\n        }\r\n\r\n        return this._renderedElement;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        this.updateRenderedElementVisibility();\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return -1;\r\n    }\r\n\r\n    isRendered(): boolean {\r\n        return this._renderedElement && this._renderedElement.offsetHeight > 0;\r\n    }\r\n\r\n    isAtTheVeryTop(): boolean {\r\n        return this.parent ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop() : true;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryBottom(): boolean {\r\n        return this.parent ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom() : true;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryLeft(): boolean {\r\n        return this.parent ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft() : true;\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return false;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isAtTheVeryRight(): boolean {\r\n        return this.parent ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight() : true;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return true;\r\n    }\r\n\r\n    isHiddenDueToOverflow(): boolean {\r\n        return this._renderedElement && this._renderedElement.style.visibility == 'hidden';\r\n    }\r\n\r\n    canContentBleed(): boolean {\r\n        return this.parent ? this.parent.canContentBleed() : true;\r\n    }\r\n\r\n    getRootElement(): CardElement {\r\n        var rootElement: CardElement = this;\r\n\r\n        while (rootElement.parent) {\r\n            rootElement = rootElement.parent;\r\n        }\r\n\r\n        return rootElement;\r\n    }\r\n\r\n    getParentContainer(): Container {\r\n        var currentElement: CardElement = this.parent;\r\n\r\n        while (currentElement) {\r\n            if (currentElement instanceof Container) {\r\n                return <Container>currentElement;\r\n            }\r\n\r\n            currentElement = currentElement.parent;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        return [];\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        return this.id === id ? this : null;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        return null;\r\n    }\r\n\r\n    get lang(): string {\r\n        if (this._lang) {\r\n            return this._lang;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.lang;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lang(value: string) {\r\n        if (value && value != \"\") {\r\n            var regEx = /^[a-z]{2,3}$/ig;\r\n\r\n            var matches = regEx.exec(value);\r\n\r\n            if (!matches) {\r\n                throw new Error(\"Invalid language identifier: \" + value);\r\n            }\r\n        }\r\n\r\n        this._lang = value;\r\n    }\r\n\r\n    get hostConfig(): HostConfig.HostConfig {\r\n        if (this._hostConfig) {\r\n            return this._hostConfig;\r\n        }\r\n        else {\r\n            if (this.parent) {\r\n                return this.parent.hostConfig;\r\n            }\r\n            else {\r\n                return defaultHostConfig;\r\n            }\r\n        }\r\n    }\r\n\r\n    set hostConfig(value: HostConfig.HostConfig) {\r\n        this._hostConfig = value;\r\n    }\r\n\r\n    get index(): number {\r\n        if (this.parent) {\r\n            return this.parent.indexOf(this);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return false;\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get isVisible(): boolean {\r\n        return this._isVisible;\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        var parentContainer = this.getParentContainer();\r\n\r\n        if (parentContainer) {\r\n            return this.separatorElement && !parentContainer.isFirstElement(this);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    set isVisible(value: boolean) {\r\n        // If the element is going to be hidden, reset any changes that were due\r\n        // to overflow truncation (this ensures that if the element is later\r\n        // un-hidden it has the right content)\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && !value) {\r\n            this.undoOverflowTruncation();\r\n        }\r\n\r\n        if (this._isVisible != value) {\r\n            this._isVisible = value;\r\n\r\n            this.updateRenderedElementVisibility();\r\n\r\n            if (this._renderedElement) {\r\n                raiseElementVisibilityChangedEvent(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n\r\n    get separatorElement(): HTMLElement {\r\n        return this._separatorElement;\r\n    }\r\n}\r\n\r\nexport abstract class CardElementContainer extends CardElement {\r\n    abstract getItemCount(): number;\r\n    abstract getItemAt(index: number): CardElement;\r\n    abstract removeItem(item: CardElement): boolean;\r\n}\r\n\r\nexport class TextBlock extends CardElement {\r\n    private _computedLineHeight: number;\r\n    private _originalInnerHtml: string;\r\n    private _text: string;\r\n    private _processedText: string = null;\r\n    private _selectAction: Action = null;\r\n\r\n    private restoreOriginalContent() {\r\n        var maxHeight = this.maxLines\r\n            ? (this._computedLineHeight * this.maxLines) + 'px'\r\n            : null;\r\n\r\n        this.renderedElement.style.maxHeight = maxHeight;\r\n        this.renderedElement.innerHTML = this._originalInnerHtml;\r\n    }\r\n\r\n    private truncateIfSupported(maxHeight: number): boolean {\r\n        // For now, only truncate TextBlocks that contain just a single\r\n        // paragraph -- since the maxLines calculation doesn't take into\r\n        // account Markdown lists\r\n        var children = this.renderedElement.children;\r\n        var isTextOnly = !children.length;\r\n\r\n        var truncationSupported = isTextOnly || children.length == 1\r\n            && (<HTMLElement>children[0]).tagName.toLowerCase() == 'p';\r\n\r\n        if (truncationSupported) {\r\n            var element = isTextOnly\r\n                ? this.renderedElement\r\n                : <HTMLElement>children[0];\r\n\r\n            Utils.truncate(element, maxHeight, this._computedLineHeight);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected getRenderedDomElementType(): string {\r\n        return \"div\";\r\n    }\r\n    \r\n    protected internalRender(): HTMLElement {\r\n        if (!Utils.isNullOrEmpty(this.text)) {\r\n            let hostConfig = this.hostConfig;\r\n\r\n            var element = document.createElement(this.getRenderedDomElementType());\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\r\n            element.style.overflow = \"hidden\";\r\n\r\n            this.applyStylesTo(element);\r\n\r\n            if (this.selectAction) {\r\n                element.onclick = (e) => {\r\n                    this.selectAction.execute();\r\n\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            if (!this._processedText) {\r\n                var formattedText = TextFormatters.formatText(this.lang, this.text);\r\n\r\n                this._processedText = this.useMarkdown ? AdaptiveCard.processMarkdown(formattedText) : formattedText;\r\n            }\r\n\r\n            element.innerHTML = this._processedText;\r\n\r\n            if (element.firstElementChild instanceof HTMLElement) {\r\n                var firstElementChild = <HTMLElement>element.firstElementChild;\r\n                firstElementChild.style.marginTop = \"0px\";\r\n                firstElementChild.style.width = \"100%\";\r\n\r\n                if (!this.wrap) {\r\n                    firstElementChild.style.overflow = \"hidden\";\r\n                    firstElementChild.style.textOverflow = \"ellipsis\";\r\n                }\r\n            }\r\n\r\n            if (element.lastElementChild instanceof HTMLElement) {\r\n                (<HTMLElement>element.lastElementChild).style.marginBottom = \"0px\";\r\n            }\r\n\r\n            var anchors = element.getElementsByTagName(\"a\");\r\n\r\n            for (var i = 0; i < anchors.length; i++) {\r\n                var anchor = <HTMLAnchorElement>anchors[i];\r\n                anchor.classList.add(this.hostConfig.makeCssClassName(\"ac-anchor\"));\r\n                anchor.target = \"_blank\";\r\n                anchor.onclick = (e) => {\r\n                    if (raiseAnchorClickedEvent(this, e.target as HTMLAnchorElement)) {\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.wrap) {\r\n                element.style.wordWrap = \"break-word\";\r\n\r\n                if (this.maxLines > 0) {\r\n                    element.style.maxHeight = (this._computedLineHeight * this.maxLines) + \"px\";\r\n                    element.style.overflow = \"hidden\";\r\n                }\r\n            }\r\n            else {\r\n                element.style.whiteSpace = \"nowrap\";\r\n                element.style.textOverflow = \"ellipsis\";\r\n            }\r\n\r\n            if (AdaptiveCard.useAdvancedTextBlockTruncation || AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                this._originalInnerHtml = element.innerHTML;\r\n            }\r\n\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                element.tabIndex = 0\r\n                element.setAttribute(\"role\", \"button\");\r\n                element.setAttribute(\"aria-label\", this.selectAction.title);\r\n                element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n\r\n            return element;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        if (maxHeight >= this._computedLineHeight) {\r\n            return this.truncateIfSupported(maxHeight);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        this.restoreOriginalContent();\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines) {\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    }\r\n\r\n    size: Enums.TextSize = Enums.TextSize.Default;\r\n    weight: Enums.TextWeight = Enums.TextWeight.Default;\r\n    color: Enums.TextColor = Enums.TextColor.Default;\r\n    isSubtle: boolean = false;\r\n    wrap: boolean = false;\r\n    maxLines: number;\r\n    useMarkdown: boolean = true;\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.TextSize, result, \"size\", this.size, Enums.TextSize.Default);\r\n        Utils.setEnumProperty(Enums.TextWeight, result, \"weight\", this.weight, Enums.TextWeight.Default);\r\n        Utils.setEnumProperty(Enums.TextColor, result, \"color\", this.color, Enums.TextColor.Default);\r\n        Utils.setProperty(result, \"text\", this.text);\r\n        Utils.setProperty(result, \"isSubtle\", this.isSubtle, false);\r\n        Utils.setProperty(result, \"wrap\", this.wrap, false);\r\n        Utils.setProperty(result, \"maxLines\", this.maxLines, 0);\r\n\r\n        return result;\r\n    }\r\n\r\n    applyStylesTo(targetElement: HTMLElement) {\r\n        if (this.hostConfig.fontFamily) {\r\n            targetElement.style.fontFamily = this.hostConfig.fontFamily;\r\n        }\r\n\r\n        switch (this.horizontalAlignment) {\r\n            case Enums.HorizontalAlignment.Center:\r\n                targetElement.style.textAlign = \"center\";\r\n                break;\r\n            case Enums.HorizontalAlignment.Right:\r\n                targetElement.style.textAlign = \"right\";\r\n                break;\r\n            default:\r\n                targetElement.style.textAlign = \"left\";\r\n                break;\r\n        }\r\n\r\n        var cssStyle = \"text \";\r\n        var fontSize: number;\r\n\r\n        switch (this.size) {\r\n            case Enums.TextSize.Small:\r\n                fontSize = this.hostConfig.fontSizes.small;\r\n                break;\r\n            case Enums.TextSize.Medium:\r\n                fontSize = this.hostConfig.fontSizes.medium;\r\n                break;\r\n            case Enums.TextSize.Large:\r\n                fontSize = this.hostConfig.fontSizes.large;\r\n                break;\r\n            case Enums.TextSize.ExtraLarge:\r\n                fontSize = this.hostConfig.fontSizes.extraLarge;\r\n                break;\r\n            default:\r\n                fontSize = this.hostConfig.fontSizes.default;\r\n                break;\r\n        }\r\n\r\n        if (this.hostConfig.lineHeights) {\r\n            switch (this.size) {\r\n                case Enums.TextSize.Small:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.small;\r\n                    break;\r\n                case Enums.TextSize.Medium:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.medium;\r\n                    break;\r\n                case Enums.TextSize.Large:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.large;\r\n                    break;\r\n                case Enums.TextSize.ExtraLarge:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.extraLarge;\r\n                    break;\r\n                default:\r\n                    this._computedLineHeight = this.hostConfig.lineHeights.default;\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            // Looks like 1.33 is the magic number to compute line-height\r\n            // from font size.\r\n            this._computedLineHeight = fontSize * 1.33;\r\n        }\r\n\r\n        targetElement.style.fontSize = fontSize + \"px\";\r\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\r\n\r\n        var parentContainer = this.getParentContainer();\r\n        var styleDefinition = this.hostConfig.containerStyles.getStyleByName(parentContainer ? parentContainer.style : Enums.ContainerStyle.Default, this.hostConfig.containerStyles.default);\r\n\r\n        var actualTextColor = this.color ? this.color : Enums.TextColor.Default;\r\n        var colorDefinition: HostConfig.TextColorDefinition;\r\n\r\n        switch (actualTextColor) {\r\n            case Enums.TextColor.Accent:\r\n                colorDefinition = styleDefinition.foregroundColors.accent;\r\n                break;\r\n            case Enums.TextColor.Dark:\r\n                colorDefinition = styleDefinition.foregroundColors.dark;\r\n                break;\r\n            case Enums.TextColor.Light:\r\n                colorDefinition = styleDefinition.foregroundColors.light;\r\n                break;\r\n            case Enums.TextColor.Good:\r\n                colorDefinition = styleDefinition.foregroundColors.good;\r\n                break;\r\n            case Enums.TextColor.Warning:\r\n                colorDefinition = styleDefinition.foregroundColors.warning;\r\n                break;\r\n            case Enums.TextColor.Attention:\r\n                colorDefinition = styleDefinition.foregroundColors.attention;\r\n                break;\r\n            default:\r\n                colorDefinition = styleDefinition.foregroundColors.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.color = Utils.stringToCssColor(this.isSubtle ? colorDefinition.subtle : colorDefinition.default);\r\n\r\n        var fontWeight: number;\r\n\r\n        switch (this.weight) {\r\n            case Enums.TextWeight.Lighter:\r\n                fontWeight = this.hostConfig.fontWeights.lighter;\r\n                break;\r\n            case Enums.TextWeight.Bolder:\r\n                fontWeight = this.hostConfig.fontWeights.bolder;\r\n                break;\r\n            default:\r\n                fontWeight = this.hostConfig.fontWeights.default;\r\n                break;\r\n        }\r\n\r\n        targetElement.style.fontWeight = fontWeight.toString();\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.text = json[\"text\"];\r\n\r\n        var sizeString = json[\"size\"];\r\n\r\n        if (sizeString && typeof sizeString === \"string\" && sizeString.toLowerCase() === \"normal\") {\r\n            this.size = Enums.TextSize.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.size value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.size = Utils.getEnumValueOrDefault(Enums.TextSize, sizeString, this.size);\r\n        }\r\n\r\n        var weightString = json[\"weight\"];\r\n\r\n        if (weightString && typeof weightString === \"string\" && weightString.toLowerCase() === \"normal\") {\r\n            this.weight = Enums.TextWeight.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The TextBlock.weight value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.weight = Utils.getEnumValueOrDefault(Enums.TextWeight, weightString, this.weight);\r\n        }\r\n\r\n        this.color = Utils.getEnumValueOrDefault(Enums.TextColor, json[\"color\"], this.color);\r\n        this.isSubtle = json[\"isSubtle\"];\r\n        this.wrap = json[\"wrap\"] === undefined ? false : json[\"wrap\"];\r\n        if (typeof json[\"maxLines\"] === \"number\") {\r\n            this.maxLines = json[\"maxLines\"];\r\n        }\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"TextBlock\";\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null)\r\n            return this.speak + '\\n';\r\n\r\n        if (this.text)\r\n            return '<s>' + this.text + '</s>\\n';\r\n\r\n        return null;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = false) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedTextBlockTruncation && this.maxLines && this.isRendered()) {\r\n            // Reset the element's innerHTML in case the available room for\r\n            // content has increased\r\n            this.restoreOriginalContent();\r\n            var maxHeight = this._computedLineHeight * this.maxLines;\r\n            this.truncateIfSupported(maxHeight);\r\n        }\r\n    }\r\n\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        if (this._text != value) {\r\n            this._text = value;\r\n\r\n            this._processedText = null;\r\n        }\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nclass Label extends TextBlock {\r\n    protected getRenderedDomElementType(): string {\r\n        return \"label\";\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let renderedElement = <HTMLLabelElement>super.internalRender();\r\n\r\n        if (!Utils.isNullOrEmpty(this.forElementId)) {\r\n            renderedElement.htmlFor = this.forElementId;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n    \r\n    forElementId: string;\r\n} \r\n\r\nexport class Fact {\r\n    name: string;\r\n    value: string;\r\n    speak: string;\r\n\r\n    constructor(name: string = undefined, value: string = undefined) {\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    toJSON() {\r\n        return { title: this.name, value: this.value };\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n\r\n        return '<s>' + this.name + ' ' + this.value + '</s>\\n';\r\n    }\r\n}\r\n\r\nexport class FactSet extends CardElement {\r\n    protected get useDefaultSizing(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n        let hostConfig = this.hostConfig;\r\n\r\n        if (this.facts.length > 0) {\r\n            element = document.createElement(\"table\");\r\n            element.style.borderWidth = \"0px\";\r\n            element.style.borderSpacing = \"0px\";\r\n            element.style.borderStyle = \"none\";\r\n            element.style.borderCollapse = \"collapse\";\r\n            element.style.display = \"block\";\r\n            element.style.overflow = \"hidden\";\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\r\n\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                var trElement = document.createElement(\"tr\");\r\n\r\n                if (i > 0) {\r\n                    trElement.style.marginTop = this.hostConfig.factSet.spacing + \"px\";\r\n                }\r\n\r\n                var tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\r\n\r\n                if (this.hostConfig.factSet.title.maxWidth) {\r\n                    tdElement.style.maxWidth = this.hostConfig.factSet.title.maxWidth + \"px\";\r\n                }\r\n\r\n                tdElement.style.verticalAlign = \"top\";\r\n\r\n                var textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = Utils.isNullOrEmpty(this.facts[i].name) ? \"Title\" : this.facts[i].name;\r\n                textBlock.size = this.hostConfig.factSet.title.size;\r\n                textBlock.color = this.hostConfig.factSet.title.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.title.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.title.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.title.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n\r\n                tdElement = document.createElement(\"td\");\r\n                tdElement.style.padding = \"0px 0px 0px 10px\";\r\n                tdElement.style.verticalAlign = \"top\";\r\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\r\n\r\n                textBlock = new TextBlock();\r\n                textBlock.hostConfig = this.hostConfig;\r\n                textBlock.text = Utils.isNullOrEmpty(this.facts[i].value) ? \"Value\" : this.facts[i].value;\r\n                textBlock.size = this.hostConfig.factSet.value.size;\r\n                textBlock.color = this.hostConfig.factSet.value.color;\r\n                textBlock.isSubtle = this.hostConfig.factSet.value.isSubtle;\r\n                textBlock.weight = this.hostConfig.factSet.value.weight;\r\n                textBlock.wrap = this.hostConfig.factSet.value.wrap;\r\n                textBlock.spacing = Enums.Spacing.None;\r\n\r\n                Utils.appendChild(tdElement, textBlock.render());\r\n                Utils.appendChild(trElement, tdElement);\r\n                Utils.appendChild(element, trElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    facts: Array<Fact> = [];\r\n\r\n    getJsonTypeName(): string {\r\n        return \"FactSet\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        let facts = []\r\n\r\n        for (let fact of this.facts) {\r\n            facts.push(fact.toJSON());\r\n        }\r\n\r\n        Utils.setProperty(result, \"facts\", facts);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.facts = [];\r\n\r\n        if (json[\"facts\"] != null) {\r\n            var jsonFacts = json[\"facts\"] as Array<any>;\r\n\r\n            this.facts = [];\r\n\r\n            for (var i = 0; i < jsonFacts.length; i++) {\r\n                let fact = new Fact();\r\n\r\n                fact.name = jsonFacts[i][\"title\"];\r\n                fact.value = jsonFacts[i][\"value\"];\r\n                fact.speak = jsonFacts[i][\"speak\"];\r\n\r\n                this.facts.push(fact);\r\n            }\r\n        }\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n\r\n        // render each fact\r\n        let speak = null;\r\n\r\n        if (this.facts.length > 0) {\r\n            speak = '';\r\n\r\n            for (var i = 0; i < this.facts.length; i++) {\r\n                let speech = this.facts[i].renderSpeech();\r\n\r\n                if (speech) {\r\n                    speak += speech;\r\n                }\r\n            }\r\n        }\r\n\r\n        return '<p>' + speak + '\\n</p>\\n';\r\n    }\r\n}\r\n\r\nexport class Image extends CardElement {\r\n    private _selectAction: Action;\r\n\r\n    private parseDimension(name: string, value: any, errors: Array<IValidationError>): number {\r\n        if (value) {\r\n            if (typeof value === \"string\") {\r\n                try {\r\n                    let size = Utils.SizeAndUnit.parse(value);\r\n\r\n                    if (size.unit == Enums.SizeUnit.Pixel) {\r\n                        return size.physicalSize;\r\n                    }\r\n                }\r\n                catch {\r\n                    // Ignore error\r\n                }\r\n            }\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid image \" + name + \": \" + value\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    private applySize(element: HTMLElement) {\r\n        if (this.pixelWidth || this.pixelHeight) {\r\n            if (this.pixelWidth) {\r\n                element.style.width = this.pixelWidth + \"px\";\r\n            }\r\n\r\n            if (this.pixelHeight) {\r\n                element.style.height = this.pixelHeight + \"px\";\r\n            }\r\n        }\r\n        else {\r\n            switch (this.size) {\r\n                case Enums.Size.Stretch:\r\n                    element.style.width = \"100%\";\r\n                    break;\r\n                case Enums.Size.Auto:\r\n                    element.style.maxWidth = \"100%\";\r\n                    break;\r\n                case Enums.Size.Small:\r\n                    element.style.width = this.hostConfig.imageSizes.small + \"px\";\r\n                    break;\r\n                case Enums.Size.Large:\r\n                    element.style.width = this.hostConfig.imageSizes.large + \"px\";\r\n                    break;\r\n                case Enums.Size.Medium:\r\n                    element.style.width = this.hostConfig.imageSizes.medium + \"px\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get useDefaultSizing() {\r\n        return false;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element: HTMLElement = null;\r\n\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.alignItems = \"flex-start\";\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction) {\r\n                    if (e.keyCode == 13 || e.keyCode == 32) { // enter or space pressed\r\n                        this.selectAction.execute();\r\n                    }\r\n                }\r\n            }\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction) {\r\n                    this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            let imageElement = document.createElement(\"img\");\r\n            imageElement.onload = (e: Event) => {\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.onerror = (e: Event) => {\r\n                let card = this.getRootElement() as AdaptiveCard;\r\n\r\n                this.renderedElement.innerHTML = \"\";\r\n\r\n                if (card && card.designMode) {\r\n                    let errorElement = document.createElement(\"div\");\r\n                    errorElement.style.display = \"flex\";\r\n                    errorElement.style.alignItems = \"center\";\r\n                    errorElement.style.justifyContent = \"center\";\r\n                    errorElement.style.backgroundColor = \"#EEEEEE\";\r\n                    errorElement.style.color = \"black\";\r\n                    errorElement.innerText = \":-(\";\r\n                    errorElement.style.padding = \"10px\";\r\n\r\n                    this.applySize(errorElement);\r\n\r\n                    this.renderedElement.appendChild(errorElement);\r\n                }\r\n\r\n                raiseImageLoadedEvent(this);\r\n            }\r\n            imageElement.style.maxHeight = \"100%\";\r\n            imageElement.style.minWidth = \"0\";\r\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\r\n\r\n            if (this.selectAction != null && hostConfig.supportsInteractivity) {\r\n                imageElement.tabIndex = 0\r\n                imageElement.setAttribute(\"role\", \"button\");\r\n                imageElement.setAttribute(\"aria-label\", this.selectAction.title);\r\n                imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            }\r\n\r\n            this.applySize(imageElement);\r\n\r\n            if (this.style === Enums.ImageStyle.Person) {\r\n                imageElement.style.borderRadius = \"50%\";\r\n                imageElement.style.backgroundPosition = \"50% 50%\";\r\n                imageElement.style.backgroundRepeat = \"no-repeat\";\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.backgroundColor)) {\r\n                imageElement.style.backgroundColor = Utils.stringToCssColor(this.backgroundColor);\r\n            }\r\n\r\n            imageElement.src = this.url;\r\n            imageElement.alt = this.altText;\r\n\r\n            element.appendChild(imageElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    style: Enums.ImageStyle = Enums.ImageStyle.Default;\r\n    backgroundColor: string;\r\n    url: string;\r\n    size: Enums.Size = Enums.Size.Auto;\r\n    width: Utils.SizeAndUnit;\r\n    pixelWidth?: number = null;\r\n    pixelHeight?: number = null;\r\n    altText: string = \"\";\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        Utils.setEnumProperty(Enums.ImageStyle, result, \"style\", this.style, Enums.ImageStyle.Default);\r\n        Utils.setProperty(result, \"backgroundColor\", this.backgroundColor);\r\n        Utils.setProperty(result, \"url\", this.url);\r\n        Utils.setEnumProperty(Enums.Size, result, \"size\", this.size, Enums.Size.Auto);\r\n\r\n        if (this.pixelWidth) {\r\n            Utils.setProperty(result, \"width\", this.pixelWidth + \"px\");\r\n        }\r\n\r\n        if (this.pixelHeight) {\r\n            Utils.setProperty(result, \"height\", this.pixelHeight + \"px\");\r\n        }\r\n\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Image\";\r\n    }\r\n\r\n    getActionById(id: string) {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result && this.selectAction) {\r\n            result = this.selectAction.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = json[\"url\"];\r\n        this.backgroundColor = json[\"backgroundColor\"];\r\n\r\n        var styleString = json[\"style\"];\r\n\r\n        if (styleString && typeof styleString === \"string\" && styleString.toLowerCase() === \"normal\") {\r\n            this.style = Enums.ImageStyle.Default;\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The Image.style value \\\"normal\\\" is deprecated and will be removed. Use \\\"default\\\" instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n        else {\r\n            this.style = Utils.getEnumValueOrDefault(Enums.ImageStyle, styleString, this.style);\r\n        }\r\n\r\n        this.size = Utils.getEnumValueOrDefault(Enums.Size, json[\"size\"], this.size);\r\n        this.altText = json[\"altText\"];\r\n\r\n        // pixelWidth and pixelHeight are only parsed for backwards compatibility.\r\n        // Payloads should use the width and height proerties instead.\r\n        if (json[\"pixelWidth\"] && typeof json[\"pixelWidth\"] === \"number\") {\r\n            this.pixelWidth = json[\"pixelWidth\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelWidth property is deprecated and will be removed. Use the width property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        if (json[\"pixelHeight\"] && typeof json[\"pixelHeight\"] === \"number\") {\r\n            this.pixelHeight = json[\"pixelHeight\"];\r\n\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.Deprecated,\r\n                    message: \"The pixelHeight property is deprecated and will be removed. Use the height property instead.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        let size = this.parseDimension(\"width\", json[\"width\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelWidth = size;\r\n        }\r\n\r\n        size = this.parseDimension(\"height\", json[\"height\"], errors);\r\n\r\n        if (size > 0) {\r\n            this.pixelHeight = size;\r\n        }\r\n\r\n        var selectActionJson = json[\"selectAction\"];\r\n\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson, errors);\r\n\r\n            if (this.selectAction) {\r\n                this.selectAction.setParent(this);\r\n                this.selectAction.parse(selectActionJson);\r\n            }\r\n        }\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.url)) {\r\n            return [ { url: this.url, mimeType: \"image\" } ]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak + '\\n';\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class ImageSet extends CardElementContainer {\r\n    private _images: Array<Image> = [];\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element: HTMLElement = null;\r\n\r\n        if (this._images.length > 0) {\r\n            element = document.createElement(\"div\");\r\n            element.style.display = \"flex\";\r\n            element.style.flexWrap = \"wrap\";\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                this._images[i].size = this.imageSize;\r\n\r\n                let renderedImage = this._images[i].render();\r\n\r\n                renderedImage.style.display = \"inline-flex\";\r\n                renderedImage.style.margin = \"0px\";\r\n                renderedImage.style.marginRight = \"10px\";\r\n                renderedImage.style.maxHeight = this.hostConfig.imageSet.maxImageHeight + \"px\";\r\n\r\n                Utils.appendChild(element, renderedImage);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    imageSize: Enums.Size = Enums.Size.Medium;\r\n\r\n    getItemCount(): number {\r\n        return this._images.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._images[index];\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        let result: Array<IResourceInformation> = [];\r\n\r\n        for (let image of this._images) {\r\n            result = result.concat(image.getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Image) {\r\n            var itemIndex = this._images.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._images.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ImageSet\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Size, result, \"imageSize\", this.imageSize, Enums.Size.Medium);\r\n\r\n        if (this._images.length > 0) {\r\n            let images = [];\r\n\r\n            for (let image of this._images) {\r\n                images.push(image.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"images\", images);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.imageSize = Utils.getEnumValueOrDefault(Enums.Size, json[\"imageSize\"], Enums.Size.Medium);\r\n\r\n        if (json[\"images\"] != null) {\r\n            let jsonImages = json[\"images\"] as Array<any>;\r\n\r\n            this._images = [];\r\n\r\n            for (let i = 0; i < jsonImages.length; i++) {\r\n                var image = new Image();\r\n                image.parse(jsonImages[i], errors);\r\n\r\n                this.addImage(image);\r\n            }\r\n        }\r\n    }\r\n\r\n    addImage(image: Image) {\r\n        if (!image.parent) {\r\n            this._images.push(image);\r\n\r\n            image.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This image already belongs to another ImageSet\");\r\n        }\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        var speak = null;\r\n\r\n        if (this._images.length > 0) {\r\n            speak = '';\r\n\r\n            for (var i = 0; i < this._images.length; i++) {\r\n                speak += this._images[i].renderSpeech();\r\n            }\r\n        }\r\n\r\n        return speak;\r\n    }\r\n}\r\n\r\nexport class MediaSource {\r\n    mimeType: string;\r\n    url: string;\r\n\r\n    constructor(url: string = undefined, mimeType: string = undefined) {\r\n        this.url = url;\r\n        this.mimeType = mimeType;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        this.mimeType = json[\"mimeType\"];\r\n        this.url = json[\"url\"];\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            mimeType: this.mimeType,\r\n            url: this.url\r\n        }\r\n    }\r\n}\r\n\r\nexport class Media extends CardElement {\r\n    static readonly supportedMediaTypes = [\"audio\", \"video\"];\r\n\r\n    private _selectedMediaType: string;\r\n    private _selectedSources: Array<MediaSource>;\r\n\r\n    private getPosterUrl(): string {\r\n        return this.poster ? this.poster : this.hostConfig.media.defaultPoster;\r\n    }\r\n\r\n    private processSources() {\r\n        this._selectedSources = [];\r\n        this._selectedMediaType = undefined;\r\n        \r\n \t\tfor (let source of this.sources) {\r\n            let mimeComponents = source.mimeType.split('/');\r\n            \r\n \t\t\tif (mimeComponents.length == 2) {\r\n\t\t\t\tif (!this._selectedMediaType) {\r\n                    let index = Media.supportedMediaTypes.indexOf(mimeComponents[0]);\r\n                    \r\n \t\t\t\t\tif (index >= 0) {\r\n\t\t\t\t\t\tthis._selectedMediaType = Media.supportedMediaTypes[index];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n \t\t\t\tif (mimeComponents[0] == this._selectedMediaType) {\r\n\t\t\t\t\tthis._selectedSources.push(source);\r\n\t\t\t\t}\r\n\t\t\t} \r\n        }\r\n    }\r\n\r\n    private renderPoster(): HTMLElement {\r\n        const playButtonArrowWidth = 12;\r\n        const playButtonArrowHeight = 15;\r\n\r\n        let posterRootElement = document.createElement(\"div\");\r\n        posterRootElement.className = \"ac-media-poster\";\r\n        posterRootElement.setAttribute(\"role\", \"contentinfo\");\r\n        posterRootElement.setAttribute(\"aria-label\", this.altText ? this.altText : \"Media content\");\r\n        posterRootElement.style.position = \"relative\";\r\n        posterRootElement.style.display = \"flex\";\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (posterUrl) {\r\n            let posterImageElement = document.createElement(\"img\");\r\n            posterImageElement.style.width = \"100%\";\r\n            posterImageElement.style.height = \"100%\";\r\n\r\n            posterImageElement.onerror = (e: Event) => {\r\n                posterImageElement.parentNode.removeChild(posterImageElement);\r\n                posterRootElement.classList.add(\"empty\");\r\n                posterRootElement.style.minHeight = \"150px\";\r\n            }\r\n\r\n            posterImageElement.src = posterUrl;\r\n\r\n            posterRootElement.appendChild(posterImageElement);\r\n        }\r\n        else {\r\n            posterRootElement.classList.add(\"empty\");\r\n            posterRootElement.style.minHeight = \"150px\";\r\n        }\r\n\r\n        if (this.hostConfig.supportsInteractivity && this._selectedSources.length > 0) {\r\n            let playButtonOuterElement = document.createElement(\"div\");\r\n            playButtonOuterElement.setAttribute(\"role\", \"button\");\r\n            playButtonOuterElement.setAttribute(\"aria-label\", \"Play media\");\r\n            playButtonOuterElement.className = \"ac-media-playButton\";\r\n            playButtonOuterElement.style.display = \"flex\";\r\n            playButtonOuterElement.style.alignItems = \"center\";\r\n            playButtonOuterElement.style.justifyContent = \"center\";\r\n            playButtonOuterElement.onclick = (e) => {\r\n                if (this.hostConfig.media.allowInlinePlayback) {\r\n                    let mediaPlayerElement = this.renderMediaPlayer();\r\n                    \r\n                    this.renderedElement.innerHTML = \"\";\r\n                    this.renderedElement.appendChild(mediaPlayerElement);\r\n\r\n                    mediaPlayerElement.play();\r\n                }\r\n                else {\r\n                    if (Media.onPlay) {\r\n                        Media.onPlay(this);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let playButtonInnerElement = document.createElement(\"div\");\r\n            playButtonInnerElement.className = \"ac-media-playButton-arrow\";\r\n            playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\r\n            playButtonInnerElement.style.borderTopWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderBottomWidth = (playButtonArrowHeight / 2) + \"px\";\r\n            playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\r\n            playButtonInnerElement.style.borderRightWidth = \"0\";\r\n            playButtonInnerElement.style.borderStyle = \"solid\";\r\n            playButtonInnerElement.style.borderTopColor = \"transparent\";\r\n            playButtonInnerElement.style.borderRightColor = \"transparent\";\r\n            playButtonInnerElement.style.borderBottomColor = \"transparent\";\r\n            playButtonInnerElement.style.transform = \"translate(\" + (playButtonArrowWidth / 10) + \"px,0px)\";\r\n\r\n            playButtonOuterElement.appendChild(playButtonInnerElement);\r\n\r\n            let playButtonContainer = document.createElement(\"div\");\r\n            playButtonContainer.style.position = \"absolute\";\r\n            playButtonContainer.style.left = \"0\";\r\n            playButtonContainer.style.top = \"0\";\r\n            playButtonContainer.style.width = \"100%\";\r\n            playButtonContainer.style.height = \"100%\";\r\n            playButtonContainer.style.display = \"flex\";\r\n            playButtonContainer.style.justifyContent = \"center\";\r\n            playButtonContainer.style.alignItems = \"center\";\r\n\r\n            playButtonContainer.appendChild(playButtonOuterElement);\r\n            posterRootElement.appendChild(playButtonContainer);\r\n        }\r\n\r\n        return posterRootElement;\r\n    }\r\n\r\n    private renderMediaPlayer(): HTMLMediaElement {\r\n        let mediaElement: HTMLMediaElement;\r\n\r\n        if (this._selectedMediaType == \"video\") {\r\n            let videoPlayer = document.createElement(\"video\");\r\n\r\n            let posterUrl = this.getPosterUrl();\r\n\r\n            if (posterUrl) {\r\n                videoPlayer.poster = posterUrl;\r\n            }\r\n    \r\n            mediaElement = videoPlayer;\r\n        }\r\n        else {\r\n            mediaElement = document.createElement(\"audio\");\r\n        }\r\n\r\n        mediaElement.controls = true;\r\n        mediaElement.preload = \"none\";\r\n        mediaElement.style.width = \"100%\";\r\n    \r\n        for (let source of this.sources) {\r\n            let src: HTMLSourceElement = document.createElement(\"source\");\r\n            src.src = source.url;\r\n            src.type = source.mimeType;\r\n\r\n            mediaElement.appendChild(src);\r\n        }\r\n\r\n        return mediaElement;\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        let element = <HTMLElement>document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\r\n\r\n        this.processSources();\r\n\r\n        element.appendChild(this.renderPoster());\r\n\r\n        return element;\r\n    }\r\n\r\n    static onPlay: (sender: Media) => void;\r\n\r\n    sources: Array<MediaSource> = [];\r\n    poster: string;\r\n    altText: string;\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.poster = json[\"poster\"];\r\n        this.altText = json[\"altText\"];\r\n\r\n        if (json[\"sources\"] != null) {\r\n            let jsonSources = json[\"sources\"] as Array<any>;\r\n\r\n            this.sources = [];\r\n\r\n            for (let i = 0; i < jsonSources.length; i++) {\r\n                let source = new MediaSource();\r\n                source.parse(jsonSources[i], errors);\r\n\r\n                this.sources.push(source);\r\n            }\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"poster\", this.poster);\r\n        Utils.setProperty(result, \"altText\", this.altText);\r\n\r\n        if (this.sources.length > 0) {\r\n            let serializedSources = [];\r\n\r\n            for (let source of this.sources) {\r\n                serializedSources.push(source.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"sources\", serializedSources);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Media\";\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        let result: Array<IResourceInformation> = [];\r\n\r\n        let posterUrl = this.getPosterUrl();\r\n\r\n        if (!Utils.isNullOrEmpty(posterUrl)) {\r\n            result.push({ url: posterUrl, mimeType: \"image\" });\r\n        }\r\n\r\n        for (let mediaSource of this.sources) {\r\n            if (!Utils.isNullOrEmpty(mediaSource.url)) {\r\n                result.push({ url: mediaSource.url, mimeType: mediaSource.mimeType });\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        return this.altText;\r\n    }\r\n\r\n    get selectedMediaType(): string {\r\n        return this._selectedMediaType;\r\n    }\r\n}\r\n\r\nexport abstract class Input extends CardElement implements Utils.IInput {\r\n    protected valueChanged() {\r\n        if (this.onValueChanged) {\r\n            this.onValueChanged(this);\r\n        }\r\n    }\r\n\r\n    abstract get value(): string;\r\n\r\n    onValueChanged: (sender: Input) => void;\r\n\r\n    title: string;\r\n    defaultValue: string;\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"value\", this.renderedElement ? this.value : this.defaultValue);\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        if (!this.id) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All inputs must have a unique Id\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.id = json[\"id\"];\r\n        this.defaultValue = json[\"value\"];\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        if (this.title) {\r\n            return '<s>' + this.title + '</s>\\n';\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [this];\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class TextInput extends Input {\r\n    private _textareaElement: HTMLTextAreaElement;\r\n    private _inputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this.isMultiline) {\r\n            this._textareaElement = document.createElement(\"textarea\");\r\n            this._textareaElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\", \"ac-multiline\");\r\n            this._textareaElement.style.width = \"100%\";\r\n            this._textareaElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._textareaElement.placeholder = this.placeholder;\r\n                this._textareaElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._textareaElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                this._textareaElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            this._textareaElement.oninput = () => { this.valueChanged(); }\r\n\r\n            return this._textareaElement;\r\n        }\r\n        else {\r\n            this._inputElement = document.createElement(\"input\");\r\n            this._inputElement.type = Enums.InputTextStyle[this.style].toLowerCase();\r\n            this._inputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\r\n            this._inputElement.style.width = \"100%\";\r\n            this._inputElement.tabIndex = 0;\r\n\r\n            if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n                this._inputElement.placeholder = this.placeholder;\r\n                this._inputElement.setAttribute(\"aria-label\", this.placeholder)\r\n            }\r\n\r\n            if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n                this._inputElement.value = this.defaultValue;\r\n            }\r\n\r\n            if (this.maxLength > 0) {\r\n                this._inputElement.maxLength = this.maxLength;\r\n            }\r\n\r\n            this._inputElement.oninput = () => { this.valueChanged(); }\r\n\r\n            return this._inputElement;\r\n        }\r\n    }\r\n\r\n    maxLength: number;\r\n    isMultiline: boolean;\r\n    placeholder: string;\r\n    style: Enums.InputTextStyle = Enums.InputTextStyle.Text;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Text\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"maxLength\", this.maxLength, 0);\r\n        Utils.setProperty(result, \"isMultiline\", this.isMultiline, false);\r\n        Utils.setEnumProperty(Enums.InputTextStyle, result, \"style\", this.style, Enums.InputTextStyle.Text);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.maxLength = json[\"maxLength\"];\r\n        this.isMultiline = json[\"isMultiline\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.style = Utils.getEnumValueOrDefault(Enums.InputTextStyle, json[\"style\"], this.style);\r\n    }\r\n\r\n    get value(): string {\r\n        if (this.isMultiline) {\r\n            return this._textareaElement ? this._textareaElement.value : null;\r\n        }\r\n        else {\r\n            return this._inputElement ? this._inputElement.value : null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class ToggleInput extends Input {\r\n    private _checkboxInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = document.createElement(\"div\");\r\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\");\r\n        element.style.width = \"100%\";\r\n        element.style.display = \"flex\";\r\n        element.style.alignItems = \"center\";\r\n\r\n        this._checkboxInputElement = document.createElement(\"input\");\r\n        this._checkboxInputElement.id = generateUniqueId();\r\n        this._checkboxInputElement.type = \"checkbox\";\r\n        this._checkboxInputElement.style.display = \"inline-block\";\r\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\r\n        this._checkboxInputElement.style.margin = \"0\";\r\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\r\n        this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\r\n        this._checkboxInputElement.tabIndex = 0;\r\n\r\n        if (this.defaultValue == this.valueOn) {\r\n            this._checkboxInputElement.checked = true;\r\n        }\r\n\r\n        this._checkboxInputElement.onchange = () => { this.valueChanged(); }\r\n\r\n        Utils.appendChild(element, this._checkboxInputElement);\r\n\r\n        if (!Utils.isNullOrEmpty(this.title) || this.isDesignMode()) {\r\n            var label = new Label();\r\n            label.forElementId = this._checkboxInputElement.id;\r\n            label.hostConfig = this.hostConfig;\r\n            label.text = Utils.isNullOrEmpty(this.title) ? this.getJsonTypeName() : this.title;\r\n            label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n\r\n            var labelElement = label.render();\r\n            labelElement.style.display = \"inline-block\";\r\n            labelElement.style.flex = \"1 1 auto\";\r\n            labelElement.style.marginLeft = \"6px\";\r\n            labelElement.style.verticalAlign = \"middle\";\r\n\r\n            Utils.appendChild(element, labelElement);\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    valueOn: string = \"true\";\r\n    valueOff: string = \"false\";\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Toggle\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"valueOn\", this.valueOn, \"true\");\r\n        Utils.setProperty(result, \"valueOff\", this.valueOff, \"false\");\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.title = json[\"title\"];\r\n\r\n        this.valueOn = Utils.getValueOrDefault<string>(json[\"valueOn\"], this.valueOn);\r\n        this.valueOff = Utils.getValueOrDefault<string>(json[\"valueOff\"], this.valueOff);\r\n    }\r\n\r\n    get value(): string {\r\n        if (this._checkboxInputElement) {\r\n            return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Choice {\r\n    title: string;\r\n    value: string;\r\n\r\n    constructor(title: string = undefined, value: string = undefined) {\r\n        this.title = title;\r\n        this.value = value;\r\n    }\r\n\r\n    toJSON() {\r\n        return { title: this.title, value: this.value };\r\n    }\r\n}\r\n\r\nexport class ChoiceSetInput extends Input {\r\n    private static uniqueCategoryCounter = 0;\r\n\r\n    private static getUniqueCategoryName(): string {\r\n        let uniqueCwtegoryName = \"__ac-category\" + ChoiceSetInput.uniqueCategoryCounter;\r\n        \r\n        ChoiceSetInput.uniqueCategoryCounter ++;\r\n\r\n        return uniqueCwtegoryName;\r\n    }\r\n\r\n    private _selectElement: HTMLSelectElement;\r\n    private _toggleInputs: Array<HTMLInputElement>;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                // Render as a combo box\r\n                this._selectElement = document.createElement(\"select\");\r\n                this._selectElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\");\r\n                this._selectElement.style.width = \"100%\";\r\n\r\n                var option = document.createElement(\"option\");\r\n                option.selected = true;\r\n                option.disabled = true;\r\n                option.hidden = true;\r\n                option.value = \"\";\r\n\r\n                if (this.placeholder) {\r\n                    option.text = this.placeholder;\r\n                }\r\n\r\n                Utils.appendChild(this._selectElement, option);\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var option = document.createElement(\"option\");\r\n                    option.value = this.choices[i].value;\r\n                    option.text = this.choices[i].title;\r\n                    option.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        option.selected = true;\r\n                    }\r\n\r\n                    Utils.appendChild(this._selectElement, option);\r\n                }\r\n\r\n                this._selectElement.onchange = () => { this.valueChanged(); }\r\n\r\n                return this._selectElement;\r\n            }\r\n            else {\r\n                // Render as a series of radio buttons\r\n                let uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\r\n\r\n                var element = document.createElement(\"div\");\r\n                element.className = this.hostConfig.makeCssClassName(\"ac-input\");\r\n                element.style.width = \"100%\";\r\n\r\n                this._toggleInputs = [];\r\n\r\n                for (var i = 0; i < this.choices.length; i++) {\r\n                    var radioInput = document.createElement(\"input\");\r\n                    radioInput.id = generateUniqueId(); \r\n                    radioInput.type = \"radio\";\r\n                    radioInput.style.margin = \"0\";\r\n                    radioInput.style.display = \"inline-block\";\r\n                    radioInput.style.verticalAlign = \"middle\";\r\n                    radioInput.name = Utils.isNullOrEmpty(this.id) ? uniqueCategoryName : this.id;\r\n                    radioInput.value = this.choices[i].value;\r\n                    radioInput.style.flex = \"0 0 auto\";\r\n                    radioInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                    if (this.choices[i].value == this.defaultValue) {\r\n                        radioInput.checked = true;\r\n                    }\r\n\r\n                    radioInput.onchange = () => { this.valueChanged(); }\r\n\r\n                    this._toggleInputs.push(radioInput);\r\n\r\n                    var label = new Label();\r\n                    label.forElementId = radioInput.id;\r\n                    label.hostConfig = this.hostConfig;\r\n                    label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                    label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n\r\n                    var labelElement = label.render();\r\n                    labelElement.style.display = \"inline-block\";\r\n                    labelElement.style.flex = \"1 1 auto\";\r\n                    labelElement.style.marginLeft = \"6px\";\r\n                    labelElement.style.verticalAlign = \"middle\";\r\n\r\n                    var compoundInput = document.createElement(\"div\");\r\n                    compoundInput.style.display = \"flex\";\r\n\r\n                    Utils.appendChild(compoundInput, radioInput);\r\n                    Utils.appendChild(compoundInput, labelElement);\r\n\r\n                    Utils.appendChild(element, compoundInput);\r\n                }\r\n\r\n                return element;\r\n            }\r\n        }\r\n        else {\r\n            // Render as a list of toggle inputs\r\n            var defaultValues = this.defaultValue ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator) : null;\r\n\r\n            var element = document.createElement(\"div\");\r\n            element.className = this.hostConfig.makeCssClassName(\"ac-input\");\r\n            element.style.width = \"100%\";\r\n\r\n            this._toggleInputs = [];\r\n\r\n            for (var i = 0; i < this.choices.length; i++) {\r\n                var checkboxInput = document.createElement(\"input\");\r\n                checkboxInput.id = generateUniqueId();\r\n                checkboxInput.type = \"checkbox\";\r\n                checkboxInput.style.margin = \"0\";\r\n                checkboxInput.style.display = \"inline-block\";\r\n                checkboxInput.style.verticalAlign = \"middle\";\r\n                checkboxInput.value = this.choices[i].value;\r\n                checkboxInput.style.flex = \"0 0 auto\";\r\n                checkboxInput.setAttribute(\"aria-label\", this.choices[i].title);\r\n\r\n                if (defaultValues) {\r\n                    if (defaultValues.indexOf(this.choices[i].value) >= 0) {\r\n                        checkboxInput.checked = true;\r\n                    }\r\n                }\r\n\r\n                checkboxInput.onchange = () => { this.valueChanged(); }\r\n\r\n                this._toggleInputs.push(checkboxInput);\r\n\r\n                var label = new Label();\r\n                label.forElementId = checkboxInput.id;\r\n                label.hostConfig = this.hostConfig;\r\n                label.text = Utils.isNullOrEmpty(this.choices[i].title) ? \"Choice \" + i : this.choices[i].title;\r\n                label.useMarkdown = AdaptiveCard.useMarkdownInRadioButtonAndCheckbox;\r\n\r\n                var labelElement = label.render();\r\n                labelElement.style.display = \"inline-block\";\r\n                labelElement.style.flex = \"1 1 auto\";\r\n                labelElement.style.marginLeft = \"6px\";\r\n                labelElement.style.verticalAlign = \"middle\";\r\n\r\n                var compoundInput = document.createElement(\"div\");\r\n                compoundInput.style.display = \"flex\";\r\n                compoundInput.style.alignItems = \"center\";\r\n\r\n                Utils.appendChild(compoundInput, checkboxInput);\r\n                Utils.appendChild(compoundInput, labelElement);\r\n\r\n                Utils.appendChild(element, compoundInput);\r\n            }\r\n\r\n            return element;\r\n        }\r\n    }\r\n\r\n    choices: Array<Choice> = [];\r\n    isCompact: boolean;\r\n    isMultiSelect: boolean;\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.ChoiceSet\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n\r\n        if (this.choices.length > 0) {\r\n            var choices = [];\r\n\r\n            for (let choice of this.choices) {\r\n                choices.push(choice.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"choices\", choices);\r\n        }\r\n\r\n        if (!this.isCompact) {\r\n            Utils.setProperty(result, \"style\", \"expanded\", false);\r\n        }\r\n\r\n        Utils.setProperty(result, \"isMultiSelect\", this.isMultiSelect, false);\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this.choices.length == 0) {\r\n            result = [{ error: Enums.ValidationError.CollectionCantBeEmpty, message: \"An Input.ChoiceSet must have at least one choice defined.\" }];\r\n        }\r\n\r\n        for (var i = 0; i < this.choices.length; i++) {\r\n            if (!this.choices[i].title || !this.choices[i].value) {\r\n                result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All choices in an Input.ChoiceSet must have their title and value properties set.\" }])\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.isCompact = !(json[\"style\"] === \"expanded\");\r\n        this.isMultiSelect = json[\"isMultiSelect\"];\r\n        this.placeholder = json[\"placeholder\"];\r\n\r\n        this.choices = [];\r\n\r\n        if (json[\"choices\"] != undefined) {\r\n            var choiceArray = json[\"choices\"] as Array<any>;\r\n\r\n            for (var i = 0; i < choiceArray.length; i++) {\r\n                var choice = new Choice();\r\n\r\n                choice.title = choiceArray[i][\"title\"];\r\n                choice.value = choiceArray[i][\"value\"];\r\n\r\n                this.choices.push(choice);\r\n            }\r\n        }\r\n    }\r\n\r\n    get value(): string {\r\n        if (!this.isMultiSelect) {\r\n            if (this.isCompact) {\r\n                return this._selectElement ? this._selectElement.value : null;\r\n            }\r\n            else {\r\n                if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                    return null;\r\n                }\r\n\r\n                for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                    if (this._toggleInputs[i].checked) {\r\n                        return this._toggleInputs[i].value;\r\n                    }\r\n                }\r\n\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            if (!this._toggleInputs || this._toggleInputs.length == 0) {\r\n                return null;\r\n            }\r\n\r\n            var result: string = \"\";\r\n\r\n            for (var i = 0; i < this._toggleInputs.length; i++) {\r\n                if (this._toggleInputs[i].checked) {\r\n                    if (result != \"\") {\r\n                        result += this.hostConfig.choiceSetInputValueSeparator;\r\n                    }\r\n\r\n                    result += this._toggleInputs[i].value;\r\n                }\r\n            }\r\n\r\n            return result == \"\" ? null : result;\r\n        }\r\n    }\r\n}\r\n\r\nexport class NumberInput extends Input {\r\n    private _numberInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._numberInputElement = document.createElement(\"input\");\r\n        this._numberInputElement.setAttribute(\"type\", \"number\");\r\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-numberInput\");\r\n        this._numberInputElement.setAttribute(\"min\", this.min);\r\n        this._numberInputElement.setAttribute(\"max\", this.max);\r\n        this._numberInputElement.style.width = \"100%\";\r\n        this._numberInputElement.tabIndex = 0;\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._numberInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        if (!Utils.isNullOrEmpty(this.placeholder)) {\r\n            this._numberInputElement.placeholder = this.placeholder;\r\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\r\n        }\r\n\r\n        this._numberInputElement.oninput = () => { this.valueChanged(); }\r\n\r\n        return this._numberInputElement;\r\n    }\r\n\r\n    min: string;\r\n    max: string;\r\n    placeholder: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Number\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"placeholder\", this.placeholder);\r\n        Utils.setProperty(result, \"min\", this.min);\r\n        Utils.setProperty(result, \"max\", this.max);\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.placeholder = json[\"placeholder\"];\r\n        this.min = json[\"min\"];\r\n        this.max = json[\"max\"];\r\n    }\r\n\r\n    get value(): string {\r\n        return this._numberInputElement ? this._numberInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class DateInput extends Input {\r\n    private _dateInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._dateInputElement = document.createElement(\"input\");\r\n        this._dateInputElement.setAttribute(\"type\", \"date\");\r\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-dateInput\");\r\n        this._dateInputElement.style.width = \"100%\";\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._dateInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._dateInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Date\";\r\n    }\r\n\r\n    get value(): string {\r\n        return this._dateInputElement ? this._dateInputElement.value : null;\r\n    }\r\n}\r\n\r\nexport class TimeInput extends Input {\r\n    private _timeInputElement: HTMLInputElement;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._timeInputElement = document.createElement(\"input\");\r\n        this._timeInputElement.setAttribute(\"type\", \"time\");\r\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-timeInput\");\r\n        this._timeInputElement.style.width = \"100%\";\r\n\r\n        if (!Utils.isNullOrEmpty(this.defaultValue)) {\r\n            this._timeInputElement.value = this.defaultValue;\r\n        }\r\n\r\n        return this._timeInputElement;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Input.Time\";\r\n    }\r\n\r\n    get value(): string {\r\n        return this._timeInputElement ? this._timeInputElement.value : null;\r\n    }\r\n}\r\n\r\nenum ActionButtonState {\r\n    Normal,\r\n    Expanded,\r\n    Subdued\r\n}\r\n\r\nclass ActionButton {\r\n    private _parentContainerStyle: string;\r\n    private _action: Action;\r\n    private _element: HTMLButtonElement = null;\r\n    private _state: ActionButtonState = ActionButtonState.Normal;\r\n\r\n    private updateCssStyle() {\r\n        let hostConfig = this.action.parent.hostConfig;\r\n\r\n        this.action.renderedElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n        this.action.renderedElement.classList.add(\"style-\" + this._parentContainerStyle);\r\n\r\n        if (this.action instanceof ShowCardAction) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expandable\"));\r\n        }\r\n\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"expanded\"));\r\n        this.action.renderedElement.classList.remove(hostConfig.makeCssClassName(\"subdued\"));\r\n\r\n        switch (this._state) {\r\n            case ActionButtonState.Expanded:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\r\n                break;\r\n            case ActionButtonState.Subdued:\r\n                this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\r\n                break;\r\n        }\r\n\r\n        if (this.action.isPrimary) {\r\n            this.action.renderedElement.classList.add(hostConfig.makeCssClassName(\"primary\"));\r\n        }\r\n\r\n    }\r\n\r\n    readonly action: Action;\r\n\r\n    constructor(action: Action, parentContainerStyle: string) {\r\n        this.action = action;\r\n        this._parentContainerStyle = parentContainerStyle;\r\n\r\n        this.action.render();\r\n        this.action.renderedElement.onclick = (e) => { this.click(); };\r\n\r\n        this.updateCssStyle();\r\n    }\r\n\r\n    onClick: (actionButton: ActionButton) => void = null;\r\n\r\n    click() {\r\n        if (this.onClick != null) {\r\n            this.onClick(this);\r\n        }\r\n    }\r\n\r\n    get state(): ActionButtonState {\r\n        return this._state;\r\n    }\r\n\r\n    set state(value: ActionButtonState) {\r\n        this._state = value;\r\n\r\n        this.updateCssStyle();\r\n    }\r\n}\r\n\r\nexport abstract class Action {\r\n    private _parent: CardElement = null;\r\n    private _actionCollection: ActionCollection = null; // hold the reference to its action collection\r\n    private _renderedElement: HTMLElement = null;\r\n\r\n    private setCollection(actionCollection: ActionCollection) {\r\n        this._actionCollection = actionCollection;\r\n    }\r\n\r\n    protected addCssClasses(element: HTMLElement) {\r\n        // Do nothing in base implementation\r\n    }\r\n\r\n    abstract getJsonTypeName(): string;\r\n\r\n    id: string;\r\n    title: string;\r\n    iconUrl: string;\r\n    isPrimary: boolean;\r\n\r\n    onExecute: (sender: Action) => void;\r\n\r\n    toJSON() {\r\n        let result = {};\r\n\r\n        Utils.setProperty(result, \"type\", this.getJsonTypeName());\r\n        Utils.setProperty(result, \"id\", this.id);\r\n        Utils.setProperty(result, \"title\", this.title);\r\n        Utils.setProperty(result, \"iconUrl\", this.iconUrl);\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        // Cache hostConfig for perf\r\n        let hostConfig = this.parent.hostConfig;\r\n\r\n        var buttonElement = document.createElement(\"button\");\r\n        buttonElement.className = hostConfig.makeCssClassName(\"ac-pushButton\");\r\n\r\n        this.addCssClasses(buttonElement);\r\n\r\n        buttonElement.setAttribute(\"aria-label\", this.title);\r\n        buttonElement.type = \"button\";\r\n        buttonElement.style.display = \"flex\";\r\n        buttonElement.style.alignItems = \"center\";\r\n        buttonElement.style.justifyContent = \"center\";\r\n\r\n        let hasTitle = !Utils.isNullOrEmpty(this.title);\r\n\r\n        let titleElement = document.createElement(\"div\");\r\n        titleElement.style.overflow = \"hidden\";\r\n        titleElement.style.textOverflow = \"ellipsis\";\r\n\r\n        if (!(hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle || hostConfig.actions.allowTitleToWrap)) {\r\n            titleElement.style.whiteSpace = \"nowrap\";\r\n        }\r\n\r\n        if (hasTitle) {\r\n            titleElement.innerText = this.title;\r\n        }\r\n\r\n        if (Utils.isNullOrEmpty(this.iconUrl)) {\r\n            buttonElement.classList.add(\"noIcon\");\r\n\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n        else {\r\n            let iconElement = document.createElement(\"img\");\r\n            iconElement.src = this.iconUrl;\r\n            iconElement.style.width = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.height = hostConfig.actions.iconSize + \"px\";\r\n            iconElement.style.flex = \"0 0 auto\";\r\n\r\n            if (hostConfig.actions.iconPlacement == Enums.ActionIconPlacement.AboveTitle) {\r\n                buttonElement.classList.add(\"iconAbove\");\r\n                buttonElement.style.flexDirection = \"column\";\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginBottom = \"4px\";\r\n                }\r\n            }\r\n            else {\r\n                buttonElement.classList.add(\"iconLeft\");\r\n\r\n                if (hasTitle) {\r\n                    iconElement.style.marginRight = \"4px\";\r\n                }\r\n            }\r\n\r\n            buttonElement.appendChild(iconElement);\r\n            buttonElement.appendChild(titleElement);\r\n        }\r\n\r\n        this._renderedElement = buttonElement;\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        this._parent = value;\r\n    }\r\n\r\n    execute() {\r\n        if (this.onExecute) {\r\n            this.onExecute(this);\r\n        }\r\n\r\n        raiseExecuteActionEvent(this);\r\n    }\r\n\r\n    // Expand the action card pane with a inline status card\r\n    // Null status will clear the status bar\r\n    setStatus(status: any) {\r\n        if (this._actionCollection == null) {\r\n            return;\r\n        }\r\n\r\n        if (status) {\r\n            let statusCard = new InlineAdaptiveCard();\r\n            statusCard.parse(status);\r\n            this._actionCollection.showStatusCard(statusCard);\r\n        }\r\n        else {\r\n            this._actionCollection.hideStatusCard();\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return [];\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        // Do nothing in base implementation\r\n    };\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        raiseParseActionEvent(this, json, errors);\r\n    \r\n        this.id = json[\"id\"];\r\n\r\n        if (!json[\"title\"] && json[\"title\"] !== \"\") {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: \"Actions should always have a title.\"\r\n                },\r\n                errors\r\n            );\r\n        }\r\n\r\n        this.title = json[\"title\"];\r\n        this.iconUrl = json[\"iconUrl\"];\r\n    }\r\n\r\n    remove(): boolean {\r\n        if (this._actionCollection) {\r\n            return this._actionCollection.removeAction(this);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return [];\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        if (!Utils.isNullOrEmpty(this.iconUrl)) {\r\n            return [ { url: this.iconUrl, mimeType: \"image\" } ]\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        if (this.id == id) {\r\n            return this;\r\n        }\r\n    }\r\n\r\n    get parent(): CardElement {\r\n        return this._parent;\r\n    }\r\n\r\n    get renderedElement(): HTMLElement {\r\n        return this._renderedElement;\r\n    }\r\n}\r\n\r\nexport class SubmitAction extends Action {\r\n    private _isPrepared: boolean = false;\r\n    private _originalData: Object;\r\n    private _processedData: Object;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.Submit\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"data\", this._originalData);\r\n\r\n        return result;\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        if (this._originalData) {\r\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\r\n        }\r\n        else {\r\n            this._processedData = {};\r\n        }\r\n\r\n        for (var i = 0; i < inputs.length; i++) {\r\n            var inputValue = inputs[i].value;\r\n\r\n            if (inputValue != null) {\r\n                this._processedData[inputs[i].id] = inputs[i].value;\r\n            }\r\n        }\r\n\r\n        this._isPrepared = true;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.data = json[\"data\"];\r\n    }\r\n\r\n    get data(): Object {\r\n        return this._isPrepared ? this._processedData : this._originalData;\r\n    }\r\n\r\n    set data(value: Object) {\r\n        this._originalData = value;\r\n        this._isPrepared = false;\r\n    }\r\n}\r\n\r\nexport class OpenUrlAction extends Action {\r\n    url: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.OpenUrl\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"url\", this.url);\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        if (!this.url) {\r\n            return [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.OpenUrl must have its url property set.\" }];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = json[\"url\"];\r\n    }\r\n}\r\n\r\nexport class HttpHeader {\r\n    private _value = new Utils.StringWithSubstitutions();\r\n\r\n    name: string;\r\n\r\n    constructor(name: string = \"\", value: string = \"\") {\r\n        this.name = name;\r\n        this.value = value;\r\n    }\r\n\r\n    toJSON() {\r\n        return { name: this.name, value: this._value.getOriginal() };\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        this._value.substituteInputValues(inputs, Utils.ContentTypes.applicationXWwwFormUrlencoded);\r\n    }\r\n\r\n    get value(): string {\r\n        return this._value.get();\r\n    }\r\n\r\n    set value(newValue: string) {\r\n        this._value.set(newValue);\r\n    }\r\n}\r\n\r\nexport class HttpAction extends Action {\r\n    private _url = new Utils.StringWithSubstitutions();\r\n    private _body = new Utils.StringWithSubstitutions();\r\n    private _headers: Array<HttpHeader> = [];\r\n\r\n    method: string;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.Http\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"method\", this.method);\r\n        Utils.setProperty(result, \"url\", this._url.getOriginal());\r\n        Utils.setProperty(result, \"body\", this._body.getOriginal());\r\n\r\n        if (this._headers.length > 0) {\r\n            let headers = [];\r\n\r\n            for (let header of this._headers) {\r\n                headers.push(header.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"headers\", headers);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (!this.url) {\r\n            result = [{ error: Enums.ValidationError.PropertyCantBeNull, message: \"An Action.Http must have its url property set.\" }];\r\n        }\r\n\r\n        if (this.headers.length > 0) {\r\n            for (var i = 0; i < this.headers.length; i++) {\r\n                if (!this.headers[i].name || !this.headers[i].value) {\r\n                    result = result.concat([{ error: Enums.ValidationError.PropertyCantBeNull, message: \"All headers of an Action.Http must have their name and value properties set.\" }]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    prepare(inputs: Array<Input>) {\r\n        this._url.substituteInputValues(inputs, Utils.ContentTypes.applicationXWwwFormUrlencoded);\r\n\r\n        let contentType = Utils.ContentTypes.applicationJson;\r\n\r\n        for (var i = 0; i < this._headers.length; i++) {\r\n            this._headers[i].prepare(inputs);\r\n\r\n            if (this._headers[i].name && this._headers[i].name.toLowerCase() == \"content-type\") {\r\n                contentType = this._headers[i].value;\r\n            }\r\n        }\r\n\r\n        this._body.substituteInputValues(inputs, contentType);\r\n    };\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.url = json[\"url\"];\r\n        this.method = json[\"method\"];\r\n        this.body = json[\"body\"];\r\n\r\n        this._headers = [];\r\n\r\n        if (json[\"headers\"] != null) {\r\n            var jsonHeaders = json[\"headers\"] as Array<any>;\r\n\r\n            for (var i = 0; i < jsonHeaders.length; i++) {\r\n                let httpHeader = new HttpHeader();\r\n\r\n                httpHeader.name = jsonHeaders[i][\"name\"];\r\n                httpHeader.value = jsonHeaders[i][\"value\"];\r\n\r\n                this.headers.push(httpHeader);\r\n            }\r\n        }\r\n    }\r\n\r\n    get url(): string {\r\n        return this._url.get();\r\n    }\r\n\r\n    set url(value: string) {\r\n        this._url.set(value);\r\n    }\r\n\r\n    get body(): string {\r\n        return this._body.get();\r\n    }\r\n\r\n    set body(value: string) {\r\n        this._body.set(value);\r\n    }\r\n\r\n    get headers(): Array<HttpHeader> {\r\n        return this._headers ? this._headers : [];\r\n    }\r\n\r\n    set headers(value: Array<HttpHeader>) {\r\n        this._headers = value;\r\n    }\r\n}\r\n\r\nexport class ShowCardAction extends Action {\r\n    protected addCssClasses(element: HTMLElement) {\r\n        super.addCssClasses(element);\r\n\r\n        element.classList.add(this.parent.hostConfig.makeCssClassName(\"expandable\"));\r\n    }\r\n\r\n    readonly card: AdaptiveCard = new InlineAdaptiveCard();\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Action.ShowCard\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this.card) {\r\n            Utils.setProperty(result, \"card\", this.card.toJSON());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return this.card.validate();\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this.card.parse(json[\"card\"], errors);\r\n    }\r\n\r\n    setParent(value: CardElement) {\r\n        super.setParent(value);\r\n\r\n        this.card.setParent(value);\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this.card.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        return super.getResourceInformation().concat(this.card.getResourceInformation());\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            result = this.card.getActionById(id);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass ActionCollection {\r\n    private _owner: CardElement;\r\n    private _actionCardContainer: HTMLDivElement;\r\n    private _expandedAction: ShowCardAction = null;\r\n    private _renderedActionCount: number = 0;\r\n    private _statusCard: HTMLElement = null;\r\n    private _actionCard: HTMLElement = null;\r\n\r\n    private isActionCardContainerVisible(): boolean {\r\n        return this._actionCardContainer.children.length > 0;\r\n    }\r\n\r\n    private refreshContainer() {\r\n        this._actionCardContainer.innerHTML = \"\";\r\n\r\n        if (this._actionCard === null && this._statusCard === null) {\r\n            this._actionCardContainer.style.padding = \"0px\";\r\n            this._actionCardContainer.style.marginTop = \"0px\";\r\n\r\n            return;\r\n        }\r\n\r\n        this._actionCardContainer.style.marginTop = this._renderedActionCount > 0 ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\" : \"0px\";\r\n\r\n        var padding = this._owner.getNonZeroPadding().toSpacingDefinition(this._owner.hostConfig);\r\n\r\n        if (this._actionCard !== null) {\r\n            this._actionCard.style.paddingLeft = padding.left + \"px\";\r\n            this._actionCard.style.paddingRight = padding.right + \"px\";\r\n\r\n            this._actionCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._actionCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\r\n        }\r\n\r\n        if (this._statusCard !== null) {\r\n            this._statusCard.style.paddingLeft = padding.left + \"px\";\r\n            this._statusCard.style.paddingRight = padding.right + \"px\";\r\n\r\n            this._statusCard.style.marginLeft = \"-\" + padding.left + \"px\";\r\n            this._statusCard.style.marginRight = \"-\" + padding.right + \"px\";\r\n\r\n            Utils.appendChild(this._actionCardContainer, this._statusCard);\r\n        }\r\n    }\r\n\r\n    private layoutChanged() {\r\n        this._owner.getRootElement().updateLayout();\r\n    }\r\n\r\n    private hideActionCard() {\r\n        var previouslyExpandedAction = this._expandedAction;\r\n\r\n        this._expandedAction = null;\r\n        this._actionCard = null;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (previouslyExpandedAction) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\r\n        }\r\n    }\r\n\r\n    private showActionCard(action: ShowCardAction, suppressStyle: boolean = false, raiseEvent: boolean = true) {\r\n        if (action.card == null) {\r\n            return;\r\n        }\r\n\r\n        (<InlineAdaptiveCard>action.card).suppressStyle = suppressStyle;\r\n\r\n        var renderedCard = action.card.render();\r\n\r\n        this._actionCard = renderedCard;\r\n        this._expandedAction = action;\r\n\r\n        this.refreshContainer();\r\n\r\n        if (raiseEvent) {\r\n            this.layoutChanged();\r\n\r\n            raiseInlineCardExpandedEvent(action, true);\r\n        }\r\n    }\r\n\r\n    private collapseExpandedAction() {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            this.buttons[i].state = ActionButtonState.Normal;\r\n        }\r\n\r\n        this.hideActionCard();\r\n    }\r\n\r\n    private expandShowCardAction(action: ShowCardAction, raiseEvent: boolean) {\r\n        for (var i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].action !== action) {\r\n                this.buttons[i].state = ActionButtonState.Subdued;\r\n            }\r\n            else {\r\n                this.buttons[i].state = ActionButtonState.Expanded;\r\n            }\r\n        }\r\n\r\n        this.showActionCard(\r\n            action,\r\n            !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()),\r\n            raiseEvent);\r\n    }\r\n\r\n    private actionClicked(actionButton: ActionButton) {\r\n        if (!(actionButton.action instanceof ShowCardAction)) {\r\n            for (var i = 0; i < this.buttons.length; i++) {\r\n                this.buttons[i].state = ActionButtonState.Normal;\r\n            }\r\n\r\n            this.hideStatusCard();\r\n            this.hideActionCard();\r\n\r\n            actionButton.action.execute();\r\n        }\r\n        else {\r\n            this.hideStatusCard();\r\n\r\n            if (this._owner.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\r\n                actionButton.action.execute();\r\n            }\r\n            else if (actionButton.action === this._expandedAction) {\r\n                this.collapseExpandedAction();\r\n            }\r\n            else {\r\n                this.expandShowCardAction(actionButton.action, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getParentContainer(): Container {\r\n        if (this._owner instanceof Container) {\r\n            return this._owner;\r\n        }\r\n        else {\r\n            return this._owner.getParentContainer();\r\n        }\r\n    }\r\n\r\n    private findActionButton(action: Action): ActionButton {\r\n        for (let actionButton of this.buttons) {\r\n            if (actionButton.action == action) {\r\n                return actionButton;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    items: Array<Action> = [];\r\n    buttons: Array<ActionButton> = [];\r\n\r\n    constructor(owner: CardElement) {\r\n        this._owner = owner;\r\n    }\r\n\r\n    toJSON() {\r\n        if (this.items.length > 0) {\r\n            let result = [];\r\n\r\n            for (let action of this.items) {\r\n                result.push(action.toJSON());\r\n            }\r\n\r\n            return result;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    showStatusCard(status: AdaptiveCard) {\r\n        status.setParent(this._owner);\r\n\r\n        this._statusCard = status.render();\r\n\r\n        this.refreshContainer();\r\n    }\r\n\r\n    hideStatusCard() {\r\n        this._statusCard = null;\r\n\r\n        this.refreshContainer();\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = this.items[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this._owner.hostConfig.actions.maxActions && this.items.length > this._owner.hostConfig.actions.maxActions) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.TooManyActions,\r\n                    message: \"A maximum of \" + this._owner.hostConfig.actions.maxActions + \" actions are allowed.\"\r\n                });\r\n        }\r\n\r\n        if (this.items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.InteractivityNotAllowed,\r\n                    message: \"Interactivity is not allowed.\"\r\n                });\r\n        }\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            if (!isActionAllowed(this.items[i], this._owner.getForbiddenActionTypes())) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.ActionTypeNotAllowed,\r\n                        message: \"Actions of type \" + this.items[i].getJsonTypeName() + \" are not allowe.\"\r\n                    });\r\n            }\r\n\r\n        }\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].validate());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render(orientation: Enums.Orientation, isDesignMode: boolean): HTMLElement {\r\n        if (!this._owner.hostConfig.supportsInteractivity) {\r\n            return null;\r\n        }\r\n\r\n        let element = document.createElement(\"div\");\r\n        let maxActions = this._owner.hostConfig.actions.maxActions ? Math.min(this._owner.hostConfig.actions.maxActions, this.items.length) : this.items.length;\r\n        let forbiddenActionTypes = this._owner.getForbiddenActionTypes();\r\n\r\n        this._actionCardContainer = document.createElement(\"div\");\r\n        this._renderedActionCount = 0;\r\n\r\n        if (this._owner.hostConfig.actions.preExpandSingleShowCardAction && maxActions == 1 && this.items[0] instanceof ShowCardAction && isActionAllowed(this.items[0], forbiddenActionTypes)) {\r\n            this.showActionCard(<ShowCardAction>this.items[0], true);\r\n            this._renderedActionCount = 1;\r\n        }\r\n        else {\r\n            let buttonStrip = document.createElement(\"div\");\r\n            buttonStrip.className = this._owner.hostConfig.makeCssClassName(\"ac-actionSet\");\r\n            buttonStrip.style.display = \"flex\";\r\n\r\n            if (orientation == Enums.Orientation.Horizontal) {\r\n                buttonStrip.style.flexDirection = \"row\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.justifyContent = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.justifyContent = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.justifyContent = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                buttonStrip.style.flexDirection = \"column\";\r\n\r\n                if (this._owner.horizontalAlignment && this._owner.hostConfig.actions.actionAlignment != Enums.ActionAlignment.Stretch) {\r\n                    switch (this._owner.horizontalAlignment) {\r\n                        case Enums.HorizontalAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.HorizontalAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    switch (this._owner.hostConfig.actions.actionAlignment) {\r\n                        case Enums.ActionAlignment.Center:\r\n                            buttonStrip.style.alignItems = \"center\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Right:\r\n                            buttonStrip.style.alignItems = \"flex-end\";\r\n                            break;\r\n                        case Enums.ActionAlignment.Stretch:\r\n                            buttonStrip.style.alignItems = \"stretch\";\r\n                            break;\r\n                        default:\r\n                            buttonStrip.style.alignItems = \"flex-start\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let parentContainerStyle = this.getParentContainer().style;\r\n\r\n            for (let i = 0; i < this.items.length; i++) {\r\n                if (isActionAllowed(this.items[i], forbiddenActionTypes)) {\r\n                    let actionButton: ActionButton = this.findActionButton(this.items[i]);\r\n\r\n                    if (!actionButton) {\r\n                        actionButton = new ActionButton(this.items[i], parentContainerStyle);\r\n                        actionButton.action.renderedElement.style.overflow = \"hidden\";\r\n                        actionButton.action.renderedElement.style.overflow = \"table-cell\";\r\n                        actionButton.action.renderedElement.style.flex = this._owner.hostConfig.actions.actionAlignment === Enums.ActionAlignment.Stretch ? \"0 1 100%\" : \"0 1 auto\";\r\n                        actionButton.onClick = (ab) => { this.actionClicked(ab); };\r\n\r\n                        this.buttons.push(actionButton);\r\n                    }\r\n\r\n                    buttonStrip.appendChild(actionButton.action.renderedElement);\r\n\r\n                    this._renderedActionCount++;\r\n\r\n                    if (this._renderedActionCount >= this._owner.hostConfig.actions.maxActions || i == this.items.length - 1) {\r\n                        break;\r\n                    }\r\n                    else if (this._owner.hostConfig.actions.buttonSpacing > 0) {\r\n                        var spacer = document.createElement(\"div\");\r\n\r\n                        if (orientation === Enums.Orientation.Horizontal) {\r\n                            spacer.style.flex = \"0 0 auto\";\r\n                            spacer.style.width = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n                        else {\r\n                            spacer.style.height = this._owner.hostConfig.actions.buttonSpacing + \"px\";\r\n                        }\r\n\r\n                        Utils.appendChild(buttonStrip, spacer);\r\n                    }\r\n                }\r\n            }\r\n\r\n            let buttonStripContainer = document.createElement(\"div\");\r\n            buttonStripContainer.style.overflow = \"hidden\";\r\n            buttonStripContainer.appendChild(buttonStrip);\r\n\r\n            Utils.appendChild(element, buttonStripContainer);\r\n        }\r\n\r\n        Utils.appendChild(element, this._actionCardContainer);\r\n\r\n        for (let i = 0; i < this.buttons.length; i++) {\r\n            if (this.buttons[i].state == ActionButtonState.Expanded) {\r\n                this.expandShowCardAction(<ShowCardAction>this.buttons[i].action, false);\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this._renderedActionCount > 0 ? element : null;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if ((!action.parent || action.parent === this._owner) && this.items.indexOf(action) < 0) {\r\n            this.items.push(action);\r\n\r\n            if (!action.parent) {\r\n                action.setParent(this._owner);\r\n            }\r\n\r\n            invokeSetCollection(action, this);\r\n        }\r\n        else {\r\n            throw new Error(\"The action already belongs to another element.\")\r\n        }\r\n    }\r\n\r\n    removeAction(action: Action): boolean {\r\n        if (this.expandedAction && this._expandedAction == action) {\r\n            this.collapseExpandedAction();\r\n        }\r\n\r\n        var actionIndex = this.items.indexOf(action);\r\n\r\n        if (actionIndex >= 0) {\r\n            this.items.splice(actionIndex, 1);\r\n\r\n            action.setParent(null);\r\n\r\n            invokeSetCollection(action, null);\r\n\r\n            for (let i = 0; i < this.buttons.length; i++) {\r\n                if (this.buttons[i].action == action) {\r\n                    this.buttons.splice(i, 1);\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this.items = [];\r\n        this.buttons = [];\r\n\r\n        this._expandedAction = null;\r\n        this._renderedActionCount = 0;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            var action = this.items[i];\r\n\r\n            result = result.concat(action.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        let result: Array<IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this.items.length; i++) {\r\n            result = result.concat(this.items[i].getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    get renderedActionCount(): number {\r\n        return this._renderedActionCount;\r\n    }\r\n\r\n    get expandedAction(): ShowCardAction {\r\n        return this._expandedAction;\r\n    }\r\n}\r\n\r\nexport class ActionSet extends CardElement {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        return this._actionCollection.render(this.orientation ? this.orientation : this.hostConfig.actions.actionsOrientation, this.isDesignMode());\r\n    }\r\n\r\n    orientation?: Enums.Orientation = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setEnumProperty(Enums.Orientation, result, \"orientation\", this.orientation);\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return this._actionCollection.expandedAction ? true : false;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ActionSet\";\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        return this._actionCollection.validate();\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonOrientation = json[\"orientation\"];\r\n\r\n        if (jsonOrientation) {\r\n            this.orientation = Utils.getEnumValueOrDefault(Enums.Orientation, jsonOrientation, Enums.Orientation.Horizontal);\r\n        }\r\n\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"] as Array<any>;\r\n\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                let action = createActionInstance(jsonActions[i], errors);\r\n\r\n                if (action) {\r\n                    action.setParent(this);\r\n                    action.parse(jsonActions[i]);\r\n\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (action != null) {\r\n            this._actionCollection.addAction(action);\r\n        }\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return this._actionCollection.getAllInputs();\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        return this._actionCollection.getResourceInformation();\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        // TODO: What's the right thing to do here?\r\n        return \"\";\r\n    }\r\n\r\n    get isInteractive(): boolean {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class BackgroundImage {\r\n    url: string;\r\n    mode: Enums.BackgroundImageMode = Enums.BackgroundImageMode.Stretch;\r\n    horizontalAlignment: Enums.HorizontalAlignment = Enums.HorizontalAlignment.Left;\r\n    verticalAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        this.url = json[\"url\"];\r\n        this.mode = Utils.getEnumValueOrDefault(Enums.BackgroundImageMode, json[\"mode\"], this.mode);\r\n        this.horizontalAlignment = Utils.getEnumValueOrDefault(Enums.HorizontalAlignment, json[\"horizontalAlignment\"], this.horizontalAlignment);\r\n        this.verticalAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalAlignment\"], this.verticalAlignment);\r\n    }\r\n\r\n    apply(element: HTMLElement) {\r\n        if (this.url) {\r\n            element.style.backgroundImage = \"url('\" + this.url + \"')\";\r\n\r\n            switch (this.mode) {\r\n                case Enums.BackgroundImageMode.Repeat:\r\n                    element.style.backgroundRepeat = \"repeat\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatHorizontally:\r\n                    element.style.backgroundRepeat = \"repeat-x\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.RepeatVertically:\r\n                    element.style.backgroundRepeat = \"repeat-y\";\r\n                    break;\r\n                case Enums.BackgroundImageMode.Stretch:\r\n                default:\r\n                    element.style.backgroundRepeat = \"no-repeat\";\r\n                    element.style.backgroundSize = \"cover\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.backgroundPositionX = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.backgroundPositionX = \"right\";\r\n                    break;\r\n            }\r\n\r\n            switch (this.verticalAlignment) {\r\n                case Enums.VerticalAlignment.Center:\r\n                    element.style.backgroundPositionY = \"center\";\r\n                    break;\r\n                case Enums.VerticalAlignment.Bottom:\r\n                    element.style.backgroundPositionY = \"bottom\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Container extends CardElementContainer {\r\n    private _selectAction: Action;\r\n    private _items: Array<CardElement> = [];\r\n    private _renderedItems: Array<CardElement> = [];\r\n    private _style?: string = null;\r\n\r\n    private isElementAllowed(element: CardElement, forbiddenElementTypes: Array<string>) {\r\n        if (!this.hostConfig.supportsInteractivity && element.isInteractive) {\r\n            return false;\r\n        }\r\n\r\n        if (forbiddenElementTypes) {\r\n            for (var i = 0; i < forbiddenElementTypes.length; i++) {\r\n                if (element.getJsonTypeName() === forbiddenElementTypes[i]) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private insertItemAt(item: CardElement, index: number) {\r\n        if (!item.parent) {\r\n            if (item.isStandalone) {\r\n                if (index < 0 || index >= this._items.length) {\r\n                    this._items.push(item);\r\n                }\r\n                else {\r\n                    this._items.splice(index, 0, item);\r\n                }\r\n\r\n                item.setParent(this);\r\n            }\r\n            else {\r\n                throw new Error(\"Elements of type \" + item.getJsonTypeName() + \" cannot be used as standalone elements.\");\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(\"The element already belongs to another container.\")\r\n        }\r\n    }\r\n\r\n    private get hasExplicitStyle(): boolean {\r\n        return this._style != null;\r\n    }\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"items\";\r\n    }\r\n\r\n    protected isLastElementBleeding(): boolean {\r\n        return this._renderedItems.length > 0 ? this._renderedItems[this._renderedItems.length - 1].isBleeding() : false;\r\n    }\r\n\r\n    protected applyPadding() {\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        if (this.padding) {\r\n            var physicalPadding = this.padding.toSpacingDefinition(this.hostConfig);\r\n\r\n            this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n            this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n            this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n            this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n        }\r\n        else if (this.hasBackground) {\r\n            var physicalMargin: SpacingDefinition = new SpacingDefinition();\r\n            var physicalPadding: SpacingDefinition = new SpacingDefinition();\r\n\r\n            var useAutoPadding = (this.parent ? this.parent.canContentBleed() : false) && AdaptiveCard.useAutomaticContainerBleeding;\r\n\r\n            if (useAutoPadding) {\r\n                var effectivePadding = this.getNonZeroPadding();\r\n                var effectiveMargin: PaddingDefinition = new PaddingDefinition(\r\n                    effectivePadding.top,\r\n                    effectivePadding.right,\r\n                    effectivePadding.bottom,\r\n                    effectivePadding.left);\r\n\r\n                if (!this.isAtTheVeryTop()) {\r\n                    effectivePadding.top = Enums.Spacing.None;\r\n                    effectiveMargin.top = Enums.Spacing.None;\r\n                }\r\n\r\n                if (!this.isAtTheVeryBottom()) {\r\n                    effectivePadding.bottom = Enums.Spacing.None;\r\n                    effectiveMargin.bottom = Enums.Spacing.None;\r\n                }\r\n\r\n                if (!this.isAtTheVeryLeft()) {\r\n                    effectivePadding.left = Enums.Spacing.None;\r\n                    effectiveMargin.left = Enums.Spacing.None;\r\n                }\r\n\r\n                if (!this.isAtTheVeryRight()) {\r\n                    effectivePadding.right = Enums.Spacing.None;\r\n                    effectiveMargin.right = Enums.Spacing.None;\r\n                }\r\n\r\n                if (effectivePadding.left != Enums.Spacing.None || effectivePadding.right != Enums.Spacing.None) {\r\n                    if (effectivePadding.left == Enums.Spacing.None) {\r\n                        effectivePadding.left = effectivePadding.right;\r\n                    }\r\n\r\n                    if (effectivePadding.right == Enums.Spacing.None) {\r\n                        effectivePadding.right = effectivePadding.left;\r\n                    }\r\n                }\r\n\r\n                if (effectivePadding.top != Enums.Spacing.None || effectivePadding.bottom != Enums.Spacing.None) {\r\n                    if (effectivePadding.top == Enums.Spacing.None) {\r\n                        effectivePadding.top = effectivePadding.bottom;\r\n                    }\r\n\r\n                    if (effectivePadding.bottom == Enums.Spacing.None) {\r\n                        effectivePadding.bottom = effectivePadding.top;\r\n                    }\r\n                }\r\n\r\n                if (effectivePadding.top != Enums.Spacing.None\r\n                    || effectivePadding.right != Enums.Spacing.None\r\n                    || effectivePadding.bottom != Enums.Spacing.None\r\n                    || effectivePadding.left != Enums.Spacing.None) {\r\n                    if (effectivePadding.top == Enums.Spacing.None) {\r\n                        effectivePadding.top = Enums.Spacing.Default;\r\n                    }\r\n\r\n                    if (effectivePadding.right == Enums.Spacing.None) {\r\n                        effectivePadding.right = Enums.Spacing.Default;\r\n                    }\r\n\r\n                    if (effectivePadding.bottom == Enums.Spacing.None) {\r\n                        effectivePadding = Object.assign(\r\n                            {},\r\n                            effectivePadding,\r\n                            { bottom: Enums.Spacing.Default }\r\n                        );\r\n                    }\r\n\r\n                    if (effectivePadding.left == Enums.Spacing.None) {\r\n                        effectivePadding = Object.assign(\r\n                            {},\r\n                            effectivePadding,\r\n                            { left: Enums.Spacing.Default }\r\n                        );\r\n                    }\r\n                }\r\n\r\n                if (effectivePadding.top == Enums.Spacing.None &&\r\n                    effectivePadding.right == Enums.Spacing.None &&\r\n                    effectivePadding.bottom == Enums.Spacing.None &&\r\n                    effectivePadding.left == Enums.Spacing.None) {\r\n                    effectivePadding = new PaddingDefinition(\r\n                        Enums.Spacing.Padding,\r\n                        Enums.Spacing.Padding,\r\n                        Enums.Spacing.Padding,\r\n                        Enums.Spacing.Padding);\r\n                }\r\n\r\n                physicalMargin = effectiveMargin.toSpacingDefinition(this.hostConfig);\r\n                physicalPadding = effectivePadding.toSpacingDefinition(this.hostConfig);\r\n            }\r\n            else {\r\n                physicalPadding = new PaddingDefinition(\r\n                    Enums.Spacing.Padding,\r\n                    Enums.Spacing.Padding,\r\n                    Enums.Spacing.Padding,\r\n                    Enums.Spacing.Padding\r\n                ).toSpacingDefinition(this.hostConfig);\r\n            }\r\n\r\n            this.renderedElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n            this.renderedElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n            this.renderedElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n            this.renderedElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n\r\n            this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n            this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n            this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n            this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n\r\n            if (this.separatorElement) {\r\n                if (this.separatorOrientation == Enums.Orientation.Horizontal) {\r\n                    this.separatorElement.style.marginLeft = \"-\" + physicalMargin.left + \"px\";\r\n                    this.separatorElement.style.marginRight = \"-\" + physicalMargin.right + \"px\";\r\n                }\r\n                else {\r\n                    this.separatorElement.style.marginTop = \"-\" + physicalMargin.top + \"px\";\r\n                    this.separatorElement.style.marginBottom = \"-\" + physicalMargin.bottom + \"px\";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.isLastElementBleeding()) {\r\n            this.renderedElement.style.paddingBottom = \"0px\";\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        this._renderedItems = [];\r\n\r\n        // Cache hostConfig to avoid walking the parent hierarchy several times\r\n        let hostConfig = this.hostConfig;\r\n\r\n        var element = document.createElement(\"div\");\r\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\r\n        element.style.display = \"flex\";\r\n        element.style.flexDirection = \"column\";\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Forces the container to be at least as tall as its content.\r\n            //\r\n            // Fixes a quirk in Chrome where, for nested flex elements, the\r\n            // inner element's height would never exceed the outer element's\r\n            // height. This caused overflow truncation to break -- containers\r\n            // would always be measured as not overflowing, since their heights\r\n            // were constrained by their parents as opposed to truly reflecting\r\n            // the height of their content.\r\n            //\r\n            // See the \"Browser Rendering Notes\" section of this answer:\r\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\r\n            element.style.minHeight = '-webkit-min-content';\r\n        }\r\n\r\n        switch (this.verticalContentAlignment) {\r\n            case Enums.VerticalAlignment.Center:\r\n                element.style.justifyContent = \"center\";\r\n                break;\r\n            case Enums.VerticalAlignment.Bottom:\r\n                element.style.justifyContent = \"flex-end\";\r\n                break;\r\n            default:\r\n                element.style.justifyContent = \"flex-start\";\r\n                break;\r\n        }\r\n\r\n        if (this.hasBackground) {\r\n            if (this.backgroundImage) {\r\n                this.backgroundImage.apply(element);\r\n            }\r\n\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.default);\r\n\r\n            if (!Utils.isNullOrEmpty(styleDefinition.backgroundColor)) {\r\n                element.style.backgroundColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\r\n            }\r\n        }\r\n\r\n        if (this.selectAction && hostConfig.supportsInteractivity) {\r\n            element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n            element.tabIndex = 0;\r\n            element.setAttribute(\"role\", \"button\");\r\n            element.setAttribute(\"aria-label\", this.selectAction.title);\r\n\r\n            element.onclick = (e) => {\r\n                if (this.selectAction != null) {\r\n                    this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            element.onkeypress = (e) => {\r\n                if (this.selectAction != null) {\r\n                    // Enter or space pressed\r\n                    if (e.keyCode == 13 || e.keyCode == 32) {\r\n                        this.selectAction.execute();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._items.length > 0) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var renderedElement = this.isElementAllowed(this._items[i], this.getForbiddenElementTypes()) ? this._items[i].render() : null;\r\n\r\n                if (renderedElement) {\r\n                    if (this._renderedItems.length > 0 && this._items[i].separatorElement) {\r\n                        this._items[i].separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, this._items[i].separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedElement);\r\n\r\n                    this._renderedItems.push(this._items[i]);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.isDesignMode()) {\r\n                var placeholderElement = this.createPlaceholderElement();\r\n                placeholderElement.style.width = \"100%\";\r\n                placeholderElement.style.height = \"100%\";\r\n\r\n                element.appendChild(placeholderElement);\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        // Add 1 to account for rounding differences between browsers\r\n        var boundary = this.renderedElement.offsetTop + maxHeight + 1;\r\n\r\n        var handleElement = (cardElement: CardElement) => {\r\n            let elt = cardElement.renderedElement;\r\n\r\n            if (elt) {\r\n                switch (Utils.getFitStatus(elt, boundary)) {\r\n                    case Enums.ContainerFitStatus.FullyInContainer:\r\n                        let sizeChanged = cardElement['resetOverflow']();\r\n                        // If the element's size changed after resetting content,\r\n                        // we have to check if it still fits fully in the card\r\n                        if (sizeChanged) {\r\n                            handleElement(cardElement);\r\n                        }\r\n                        break;\r\n                    case Enums.ContainerFitStatus.Overflowing:\r\n                        let maxHeight = boundary - elt.offsetTop;\r\n                        cardElement['handleOverflow'](maxHeight);\r\n                        break;\r\n                    case Enums.ContainerFitStatus.FullyOutOfContainer:\r\n                        cardElement['handleOverflow'](0);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n\r\n        for (let item of this._items) {\r\n            handleElement(item);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let item of this._items) {\r\n            item['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        var parentContainer = this.getParentContainer();\r\n\r\n        return this.backgroundImage != undefined || (this.hasExplicitStyle && (parentContainer ? parentContainer.style != this.style : false));\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        return Enums.ContainerStyle.Default;\r\n    }\r\n\r\n    protected get allowCustomStyle(): boolean {\r\n        return true;\r\n    }\r\n\r\n    backgroundImage: BackgroundImage;\r\n    verticalContentAlignment: Enums.VerticalAlignment = Enums.VerticalAlignment.Top;\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this._selectAction.toJSON());\r\n        }\r\n\r\n        if (this.backgroundImage) {\r\n            Utils.setProperty(result, \"backgroundImage\", this.backgroundImage.url);\r\n        }\r\n\r\n        Utils.setProperty(result, \"style\", this.style, \"default\");\r\n        Utils.setEnumProperty(Enums.VerticalAlignment, result, \"verticalContentAlignment\", this.verticalContentAlignment, Enums.VerticalAlignment.Top);\r\n\r\n        if (this._items.length > 0) {\r\n            let elements = [];\r\n\r\n            for (let element of this._items) {\r\n                elements.push(element.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, this.getItemsCollectionPropertyName(), elements);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    isBleeding(): boolean {\r\n        return this.isLastElementBleeding();\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this._items[index];\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Container\";\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        for (var i = this._items.length - 1; i >= 0; i--) {\r\n            if (this._items[i].isVisible) {\r\n                return this._items[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this._style) {\r\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this._style);\r\n\r\n            if (!styleDefinition) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: \"Unknown container style: \" + this._style\r\n                    });\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (!this.hostConfig.supportsInteractivity && this._items[i].isInteractive) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Interactivity is not allowed.\"\r\n                    });\r\n            }\r\n\r\n            if (!this.isElementAllowed(this._items[i], this.getForbiddenElementTypes())) {\r\n                result.push(\r\n                    {\r\n                        error: Enums.ValidationError.InteractivityNotAllowed,\r\n                        message: \"Elements of type \" + this._items[i].getJsonTypeName() + \" are not allowed in this container.\"\r\n                    });\r\n            }\r\n\r\n            result = result.concat(this._items[i].validate());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._items = [];\r\n        this._renderedItems = [];\r\n\r\n        var jsonBackgroundImage = json[\"backgroundImage\"];\r\n\r\n        if (jsonBackgroundImage) {\r\n            this.backgroundImage = new BackgroundImage();\r\n\r\n            if (typeof jsonBackgroundImage === \"string\") {\r\n                this.backgroundImage.url = jsonBackgroundImage;\r\n                this.backgroundImage.mode = Enums.BackgroundImageMode.Stretch;\r\n            }\r\n            else if (typeof jsonBackgroundImage === \"object\") {\r\n                this.backgroundImage = new BackgroundImage();\r\n                this.backgroundImage.parse(json[\"backgroundImage\"], errors);\r\n            }\r\n        }\r\n\r\n        this.verticalContentAlignment = Utils.getEnumValueOrDefault(Enums.VerticalAlignment, json[\"verticalContentAlignment\"], this.verticalContentAlignment);\r\n\r\n        this._style = json[\"style\"];\r\n\r\n        if (json[this.getItemsCollectionPropertyName()] != null) {\r\n            var items = json[this.getItemsCollectionPropertyName()] as Array<any>;\r\n\r\n            this.clear();\r\n\r\n            for (var i = 0; i < items.length; i++) {\r\n                var elementType = items[i][\"type\"];\r\n\r\n                var element = AdaptiveCard.elementTypeRegistry.createInstance(elementType);\r\n\r\n                if (!element) {\r\n                    raiseParseError(\r\n                        {\r\n                            error: Enums.ValidationError.UnknownElementType,\r\n                            message: \"Unknown element type: \" + elementType\r\n                        },\r\n                        errors\r\n                    );\r\n                }\r\n                else {\r\n                    this.addItem(element);\r\n\r\n                    element.parse(items[i], errors);\r\n                }\r\n            }\r\n        }\r\n\r\n        var selectActionJson = json[\"selectAction\"];\r\n\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson, errors);\r\n\r\n            if (this.selectAction) {\r\n                this.selectAction.setParent(this);\r\n                this.selectAction.parse(selectActionJson);\r\n            }\r\n        }\r\n    }\r\n\r\n    addItem(item: CardElement) {\r\n        this.insertItemAt(item, -1);\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return this._items.indexOf(cardElement);\r\n    }\r\n\r\n    insertItemBefore(item: CardElement, insertBefore: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertBefore));\r\n    }\r\n\r\n    insertItemAfter(item: CardElement, insertAfter: CardElement) {\r\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1);\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        var itemIndex = this._items.indexOf(item);\r\n\r\n        if (itemIndex >= 0) {\r\n            this._items.splice(itemIndex, 1);\r\n\r\n            item.setParent(null);\r\n\r\n            this.updateLayout();\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    canContentBleed(): boolean {\r\n        return this.hasBackground ? false : super.canContentBleed();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            var item: CardElement = this._items[i];\r\n\r\n            result = result.concat(item.getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        let result: Array<IResourceInformation> = [];\r\n        \r\n        if (this.backgroundImage && !Utils.isNullOrEmpty(this.backgroundImage.url)) {\r\n            result.push({ url: this.backgroundImage.url, mimeType: \"image\" });\r\n        }\r\n\r\n        for (var i = 0; i < this.getItemCount(); i++) {\r\n            result = result.concat(this.getItemAt(i).getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        var result: CardElement = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                result = this._items[i].getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = super.getActionById(id);\r\n\r\n        if (!result) {\r\n            if (this.selectAction) {\r\n                result = this.selectAction.getActionById(id);\r\n            }\r\n\r\n            if (!result) {\r\n                for (var i = 0; i < this._items.length; i++) {\r\n                    result = this._items[i].getActionById(id);\r\n\r\n                    if (result) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        // render each item\r\n        let speak = null;\r\n\r\n        if (this._items.length > 0) {\r\n            speak = '';\r\n\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                var result = this._items[i].renderSpeech();\r\n\r\n                if (result) {\r\n                    speak += result;\r\n                }\r\n            }\r\n        }\r\n\r\n        return speak;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        this.applyPadding();\r\n\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._items.length; i++) {\r\n                this._items[i].updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    get style(): string {\r\n        if (this.allowCustomStyle) {\r\n            if (this._style && this.hostConfig.containerStyles.getStyleByName(this._style)) {\r\n                return this._style;\r\n            }\r\n\r\n            let parentContainer = this.getParentContainer();\r\n\r\n            return parentContainer ? parentContainer.style : this.defaultStyle;\r\n        }\r\n        else {\r\n            return this.defaultStyle;\r\n        }\r\n    }\r\n\r\n    set style(value: string) {\r\n        this._style = value;\r\n    }\r\n\r\n    get padding(): PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport type ColumnWidth = Utils.SizeAndUnit | \"auto\" | \"stretch\";\r\n\r\nexport class Column extends Container {\r\n    private _computedWeight: number = 0;\r\n\r\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\r\n        if (this.isDesignMode()) {\r\n            renderedElement.style.minWidth = \"20px\";\r\n            renderedElement.style.minHeight = \"20px\";\r\n        }\r\n        else {\r\n            renderedElement.style.minWidth = \"0\";\r\n        }\r\n\r\n        if (this.width === \"auto\") {\r\n            renderedElement.style.flex = \"0 1 auto\";\r\n        }\r\n        else if (this.width === \"stretch\") {\r\n            renderedElement.style.flex = \"1 1 50px\";\r\n        }\r\n        else {\r\n            let sizeAndUnit = <SizeAndUnit>this.width;\r\n\r\n            if (sizeAndUnit.unit == Enums.SizeUnit.Pixel) {\r\n                renderedElement.style.flex = \"0 0 \" + sizeAndUnit.physicalSize + \"px\";\r\n            }\r\n            else {\r\n                renderedElement.style.flex = \"1 1 \" + (this._computedWeight > 0 ? this._computedWeight : sizeAndUnit.physicalSize) + \"%\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected get separatorOrientation(): Enums.Orientation {\r\n        return Enums.Orientation.Vertical;\r\n    }\r\n\r\n    width: ColumnWidth = \"auto\";\r\n\r\n    constructor(width: ColumnWidth = \"auto\") {\r\n        super();\r\n\r\n        this.width = width;\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"Column\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this.width instanceof SizeAndUnit) {\r\n            if (this.width.unit == Enums.SizeUnit.Pixel) {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize + \"px\");\r\n            }\r\n            else {\r\n                Utils.setProperty(result, \"width\", this.width.physicalSize);\r\n            }\r\n        }\r\n        else {\r\n            Utils.setProperty(result, \"width\", this.width);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var jsonWidth = json[\"width\"];\r\n\r\n        if (jsonWidth === undefined) {\r\n            jsonWidth = json[\"size\"];\r\n\r\n            if (jsonWidth !== undefined) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.Deprecated,\r\n                        message: \"The \\\"Column.size\\\" property is deprecated and will be removed. Use the \\\"Column.width\\\" property instead.\"\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        var invalidWidth = false;\r\n\r\n        if (typeof jsonWidth === \"number\") {\r\n            if (jsonWidth > 0) {\r\n                this.width = new Utils.SizeAndUnit(jsonWidth, Enums.SizeUnit.Weight);\r\n            }\r\n            else {\r\n                invalidWidth = true;\r\n            }\r\n        }\r\n        else if (typeof jsonWidth === \"string\") {\r\n            if (jsonWidth != \"auto\" && jsonWidth != \"stretch\") {\r\n                try {\r\n                    this.width = Utils.SizeAndUnit.parse(jsonWidth);\r\n                }\r\n                catch (e) {\r\n                    invalidWidth = true;\r\n                }\r\n            }\r\n            else {\r\n                this.width = jsonWidth;\r\n            }\r\n        }\r\n        else if (jsonWidth) {\r\n            invalidWidth = true;\r\n        }\r\n\r\n        if (invalidWidth) {\r\n            raiseParseError(\r\n                {\r\n                    error: Enums.ValidationError.InvalidPropertyValue,\r\n                    message: \"Invalid column width: \" + jsonWidth\r\n                },\r\n                errors\r\n            );\r\n        }\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        if (this.parent && this.parent instanceof ColumnSet) {\r\n            return this.separatorElement && !this.parent.isLeftMostElement(this);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class ColumnSet extends CardElementContainer {\r\n    private _columns: Array<Column> = [];\r\n    private _selectAction: Action;\r\n\r\n    protected applyPadding() {\r\n        if (this.padding) {\r\n            if (this.renderedElement) {\r\n                var physicalPadding = this.padding.toSpacingDefinition(this.hostConfig);\r\n\r\n                this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\r\n                this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\r\n                this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\r\n                this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        if (this._columns.length > 0) {\r\n            // Cache hostConfig to avoid walking the parent hierarchy several times\r\n            let hostConfig = this.hostConfig;\r\n\r\n            var element = document.createElement(\"div\");\r\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\r\n            element.style.display = \"flex\";\r\n\r\n            if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n                // See comment in Container.internalRender()\r\n                element.style.minHeight = '-webkit-min-content';\r\n            }\r\n\r\n            if (this.selectAction && hostConfig.supportsInteractivity) {\r\n                element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\r\n\r\n                element.onclick = (e) => {\r\n                    this.selectAction.execute();\r\n                    e.cancelBubble = true;\r\n                }\r\n            }\r\n\r\n            switch (this.horizontalAlignment) {\r\n                case Enums.HorizontalAlignment.Center:\r\n                    element.style.justifyContent = \"center\";\r\n                    break;\r\n                case Enums.HorizontalAlignment.Right:\r\n                    element.style.justifyContent = \"flex-end\";\r\n                    break;\r\n                default:\r\n                    element.style.justifyContent = \"flex-start\";\r\n                    break;\r\n            }\r\n\r\n            var totalWeight: number = 0;\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Utils.SizeAndUnit && (column.width.unit == Enums.SizeUnit.Weight)) {\r\n                    totalWeight += column.width.physicalSize;\r\n                }\r\n            }\r\n\r\n            var renderedColumnCount: number = 0;\r\n\r\n            for (let column of this._columns) {\r\n                if (column.width instanceof Utils.SizeAndUnit && column.width.unit == Enums.SizeUnit.Weight && totalWeight > 0) {\r\n                    var computedWeight = 100 / totalWeight * column.width.physicalSize;\r\n\r\n                    // Best way to emulate \"internal\" access I know of\r\n                    column[\"_computedWeight\"] = computedWeight;\r\n                }\r\n\r\n                var renderedColumn = column.render();\r\n\r\n                if (renderedColumn) {\r\n                    if (renderedColumnCount > 0 && column.separatorElement) {\r\n                        column.separatorElement.style.flex = \"0 0 auto\";\r\n\r\n                        Utils.appendChild(element, column.separatorElement);\r\n                    }\r\n\r\n                    Utils.appendChild(element, renderedColumn);\r\n\r\n                    renderedColumnCount++;\r\n                }\r\n            }\r\n\r\n            return renderedColumnCount > 0 ? element : null;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    protected truncateOverflow(maxHeight: number): boolean {\r\n        for (let column of this._columns) {\r\n            column['handleOverflow'](maxHeight);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected undoOverflowTruncation() {\r\n        for (let column of this._columns) {\r\n            column['resetOverflow']();\r\n        }\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        if (this._selectAction) {\r\n            Utils.setProperty(result, \"selectAction\", this.selectAction.toJSON());\r\n        }\r\n\r\n        if (this._columns.length > 0) {\r\n            let columns = [];\r\n\r\n            for (let column of this._columns) {\r\n                columns.push(column.toJSON());\r\n            }\r\n\r\n            Utils.setProperty(result, \"columns\", columns);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    isFirstElement(element: CardElement): boolean {\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (this._columns[i].isVisible) {\r\n                return this._columns[i] == element;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getCount(): number {\r\n        return this._columns.length;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this.getCount();\r\n    }\r\n\r\n    getColumnAt(index: number): Column {\r\n        return this._columns[index];\r\n    }\r\n\r\n    getItemAt(index: number): CardElement {\r\n        return this.getColumnAt(index);\r\n    }\r\n\r\n    getJsonTypeName(): string {\r\n        return \"ColumnSet\";\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        var selectActionJson = json[\"selectAction\"];\r\n\r\n        if (selectActionJson != undefined) {\r\n            this.selectAction = createActionInstance(selectActionJson, errors);\r\n\r\n            if (this.selectAction) {\r\n                this.selectAction.setParent(this);\r\n                this.selectAction.parse(selectActionJson);\r\n            }\r\n        }\r\n\r\n        if (json[\"columns\"] != null) {\r\n            let jsonColumns = json[\"columns\"] as Array<any>;\r\n\r\n            this._columns = [];\r\n\r\n            for (let i = 0; i < jsonColumns.length; i++) {\r\n                var column = new Column();\r\n\r\n                column.parse(jsonColumns[i], errors);\r\n\r\n                this.addColumn(column);\r\n            }\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n        var weightedColumns: number = 0;\r\n        var stretchedColumns: number = 0;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            if (typeof this._columns[i].width === \"number\") {\r\n                weightedColumns++;\r\n            }\r\n            else if (this._columns[i].width === \"stretch\") {\r\n                stretchedColumns++;\r\n            }\r\n\r\n            result = result.concat(this._columns[i].validate());\r\n        }\r\n\r\n        if (weightedColumns > 0 && stretchedColumns > 0) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.Hint,\r\n                    message: \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\r\n                });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        this.applyPadding();\r\n\r\n        if (processChildren) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                this._columns[i].updateLayout();\r\n            }\r\n        }\r\n    }\r\n\r\n    addColumn(column: Column) {\r\n        if (!column.parent) {\r\n            this._columns.push(column);\r\n\r\n            column.setParent(this);\r\n        }\r\n        else {\r\n            throw new Error(\"This column already belongs to another ColumnSet.\");\r\n        }\r\n    }\r\n\r\n    removeItem(item: CardElement): boolean {\r\n        if (item instanceof Column) {\r\n            var itemIndex = this._columns.indexOf(item);\r\n\r\n            if (itemIndex >= 0) {\r\n                this._columns.splice(itemIndex, 1);\r\n\r\n                item.setParent(null);\r\n\r\n                this.updateLayout();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    indexOf(cardElement: CardElement): number {\r\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\r\n    }\r\n\r\n    isLeftMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == 0;\r\n    }\r\n\r\n    isRightMostElement(element: CardElement): boolean {\r\n        return this._columns.indexOf(<Column>element) == this._columns.length - 1;\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        var result: Array<Input> = [];\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = result.concat(this._columns[i].getAllInputs());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        let result: Array<IResourceInformation> = [];\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = result.concat(this._columns[i].getResourceInformation());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getElementById(id: string): CardElement {\r\n        var result: CardElement = super.getElementById(id);\r\n\r\n        if (!result) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                result = this._columns[i].getElementById(id);\r\n\r\n                if (result) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = null;\r\n\r\n        for (var i = 0; i < this._columns.length; i++) {\r\n            result = this._columns[i].getActionById(id);\r\n\r\n            if (result) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    renderSpeech(): string {\r\n        if (this.speak != null) {\r\n            return this.speak;\r\n        }\r\n\r\n        // render each item\r\n        let speak = '';\r\n\r\n        if (this._columns.length > 0) {\r\n            for (var i = 0; i < this._columns.length; i++) {\r\n                speak += this._columns[i].renderSpeech();\r\n            }\r\n        }\r\n\r\n        return speak;\r\n    }\r\n\r\n    get padding(): PaddingDefinition {\r\n        return this.getPadding();\r\n    }\r\n\r\n    set padding(value: PaddingDefinition) {\r\n        this.setPadding(value);\r\n    }\r\n\r\n    get selectAction(): Action {\r\n        return this._selectAction;\r\n    }\r\n\r\n    set selectAction(value: Action) {\r\n        this._selectAction = value;\r\n\r\n        if (this._selectAction) {\r\n            this._selectAction.setParent(this);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Version {\r\n    private _versionString: string;\r\n    private _major: number;\r\n    private _minor: number;\r\n    private _isValid: boolean = true;\r\n\r\n    constructor(major: number = 1, minor: number = 1) {\r\n        this._major = major;\r\n        this._minor = minor;\r\n    }\r\n\r\n    static parse(versionString: string): Version {\r\n        if (!versionString) {\r\n            return null;\r\n        }\r\n\r\n        var result = new Version();\r\n        result._versionString = versionString;\r\n\r\n        var regEx = /(\\d+).(\\d+)/gi;\r\n        var matches = regEx.exec(versionString);\r\n\r\n        if (matches != null && matches.length == 3) {\r\n            result._major = parseInt(matches[1]);\r\n            result._minor = parseInt(matches[2]);\r\n        }\r\n        else {\r\n            result._isValid = false;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    toString(): string {\r\n        return !this._isValid ? this._versionString : this._major + \".\" + this._minor;\r\n    }\r\n\r\n    get major(): number {\r\n        return this._major;\r\n    }\r\n\r\n    get minor(): number {\r\n        return this._minor;\r\n    }\r\n\r\n    get isValid(): boolean {\r\n        return this._isValid;\r\n    }\r\n}\r\n\r\nfunction raiseImageLoadedEvent(image: Image) {\r\n    let card = image.getRootElement() as AdaptiveCard;\r\n    let onImageLoadedHandler = (card && card.onImageLoaded) ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\r\n\r\n    if (onImageLoadedHandler) {\r\n        onImageLoadedHandler(image);\r\n    }\r\n}\r\n\r\nfunction raiseAnchorClickedEvent(element: CardElement, anchor: HTMLAnchorElement): boolean {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onAnchorClickedHandler = (card && card.onAnchorClicked) ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\r\n\r\n    return onAnchorClickedHandler != null ? onAnchorClickedHandler(element, anchor) : false;\r\n}\r\n\r\nfunction raiseExecuteActionEvent(action: Action) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onExecuteActionHandler = (card && card.onExecuteAction) ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\r\n\r\n    if (onExecuteActionHandler) {\r\n        action.prepare(action.parent.getRootElement().getAllInputs());\r\n\r\n        onExecuteActionHandler(action);\r\n    }\r\n}\r\n\r\nfunction raiseInlineCardExpandedEvent(action: ShowCardAction, isExpanded: boolean) {\r\n    let card = action.parent.getRootElement() as AdaptiveCard;\r\n    let onInlineCardExpandedHandler = (card && card.onInlineCardExpanded) ? card.onInlineCardExpanded : AdaptiveCard.onInlineCardExpanded;\r\n\r\n    if (onInlineCardExpandedHandler) {\r\n        onInlineCardExpandedHandler(action, isExpanded);\r\n    }\r\n}\r\n\r\nfunction raiseElementVisibilityChangedEvent(element: CardElement, shouldUpdateLayout: boolean = true) {\r\n    let rootElement = element.getRootElement();\r\n\r\n    if (shouldUpdateLayout) {\r\n        rootElement.updateLayout();\r\n    }\r\n\r\n    let card = rootElement as AdaptiveCard;\r\n    let onElementVisibilityChangedHandler = (card && card.onElementVisibilityChanged) ? card.onElementVisibilityChanged : AdaptiveCard.onElementVisibilityChanged;\r\n\r\n    if (onElementVisibilityChangedHandler != null) {\r\n        onElementVisibilityChangedHandler(element);\r\n    }\r\n}\r\n\r\nfunction raiseParseElementEvent(element: CardElement, json: any, errors?: Array<IValidationError>) {\r\n    let card = element.getRootElement() as AdaptiveCard;\r\n    let onParseElementHandler = (card && card.onParseElement) ? card.onParseElement : AdaptiveCard.onParseElement;\r\n\r\n    if (onParseElementHandler != null) {\r\n        onParseElementHandler(element, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseActionEvent(action: Action, json: any, errors?: Array<IValidationError>) {\r\n    let card = action.parent ? action.parent.getRootElement() as AdaptiveCard : null;\r\n    let onParseActionHandler = (card && card.onParseAction) ? card.onParseAction : AdaptiveCard.onParseAction;\r\n\r\n    if (onParseActionHandler != null) {\r\n        onParseActionHandler(action, json, errors);\r\n    }\r\n}\r\n\r\nfunction raiseParseError(error: IValidationError, errors: Array<IValidationError>) {\r\n    if (errors) {\r\n        errors.push(error);\r\n    }\r\n\r\n    if (AdaptiveCard.onParseError != null) {\r\n        AdaptiveCard.onParseError(error);\r\n    }\r\n}\r\n\r\nexport interface ITypeRegistration<T> {\r\n    typeName: string,\r\n    createInstance: () => T;\r\n}\r\n\r\nexport abstract class ContainerWithActions extends Container {\r\n    private _actionCollection: ActionCollection;\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var element = super.internalRender();\r\n\r\n        var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation, false);\r\n\r\n        if (renderedActions) {\r\n            Utils.appendChild(\r\n                element,\r\n                Utils.renderSeparation(\r\n                    {\r\n                        spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing),\r\n                        lineThickness: null,\r\n                        lineColor: null\r\n                    },\r\n                    Enums.Orientation.Horizontal));\r\n            Utils.appendChild(element, renderedActions);\r\n        }\r\n\r\n        return element.children.length > 0 ? element : null;\r\n    }\r\n\r\n    protected isLastElementBleeding(): boolean {\r\n        if (this._actionCollection.renderedActionCount == 0) {\r\n            return super.isLastElementBleeding() ? !this.isDesignMode() : false;\r\n        }\r\n        else {\r\n            if (this._actionCollection.items.length == 1) {\r\n                return this._actionCollection.expandedAction != null && !this.hostConfig.actions.preExpandSingleShowCardAction;\r\n            }\r\n            else {\r\n                return this._actionCollection.expandedAction != null;\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._actionCollection = new ActionCollection(this);\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"actions\", this._actionCollection.toJSON());\r\n\r\n        return result;\r\n    }\r\n\r\n    getActionCount(): number {\r\n        return this._actionCollection.items.length;\r\n    }\r\n\r\n    getActionAt(index: number): Action {\r\n        if (index >= 0 && index < this.getActionCount()) {\r\n            return this._actionCollection.items[index];\r\n        }\r\n        else {\r\n            super.getActionAt(index);\r\n        }\r\n    }\r\n\r\n    getActionById(id: string): Action {\r\n        var result: Action = this._actionCollection.getActionById(id);\r\n\r\n        return result ? result : super.getActionById(id);\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        super.parse(json, errors);\r\n\r\n        this._actionCollection.clear();\r\n\r\n        if (json[\"actions\"] != undefined) {\r\n            var jsonActions = json[\"actions\"] as Array<any>;\r\n\r\n            for (var i = 0; i < jsonActions.length; i++) {\r\n                var action = createActionInstance(jsonActions[i], errors);\r\n\r\n                if (action != null) {\r\n                    action.setParent(this);\r\n                    action.parse(jsonActions[i]);\r\n\r\n                    this.addAction(action);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result = super.validate();\r\n\r\n        if (this._actionCollection) {\r\n            result = result.concat(this._actionCollection.validate());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    isLastElement(element: CardElement): boolean {\r\n        return super.isLastElement(element) && this._actionCollection.items.length == 0;\r\n    }\r\n\r\n    addAction(action: Action) {\r\n        if (action) {\r\n            this._actionCollection.addAction(action);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        super.clear();\r\n\r\n        this._actionCollection.clear();\r\n    }\r\n\r\n    getAllInputs(): Array<Input> {\r\n        return super.getAllInputs().concat(this._actionCollection.getAllInputs());\r\n    }\r\n\r\n    getResourceInformation(): Array<IResourceInformation> {\r\n        return super.getResourceInformation().concat(this._actionCollection.getResourceInformation());\r\n    }\r\n\r\n    get isStandalone(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport abstract class TypeRegistry<T> {\r\n    private _items: Array<ITypeRegistration<T>> = [];\r\n\r\n    private findTypeRegistration(typeName: string): ITypeRegistration<T> {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                return this._items[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    clear() {\r\n        this._items = [];\r\n    }\r\n\r\n    abstract reset();\r\n\r\n    registerType(typeName: string, createInstance: () => T) {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        if (registrationInfo != null) {\r\n            registrationInfo.createInstance = createInstance;\r\n        }\r\n        else {\r\n            registrationInfo = {\r\n                typeName: typeName,\r\n                createInstance: createInstance\r\n            }\r\n\r\n            this._items.push(registrationInfo);\r\n        }\r\n    }\r\n\r\n    unregisterType(typeName: string) {\r\n        for (var i = 0; i < this._items.length; i++) {\r\n            if (this._items[i].typeName === typeName) {\r\n                this._items.splice(i, 1);\r\n\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    createInstance(typeName: string): T {\r\n        var registrationInfo = this.findTypeRegistration(typeName);\r\n\r\n        return registrationInfo ? registrationInfo.createInstance() : null;\r\n    }\r\n\r\n    getItemCount(): number {\r\n        return this._items.length;\r\n    }\r\n\r\n    getItemAt(index: number): ITypeRegistration<T> {\r\n        return this._items[index];\r\n    }\r\n}\r\n\r\nexport class ElementTypeRegistry extends TypeRegistry<CardElement> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Container\", () => { return new Container(); });\r\n        this.registerType(\"TextBlock\", () => { return new TextBlock(); });\r\n        this.registerType(\"Image\", () => { return new Image(); });\r\n        this.registerType(\"ImageSet\", () => { return new ImageSet(); });\r\n        this.registerType(\"Media\", () => { return new Media(); });\r\n        this.registerType(\"FactSet\", () => { return new FactSet(); });\r\n        this.registerType(\"ColumnSet\", () => { return new ColumnSet(); });\r\n        this.registerType(\"Input.Text\", () => { return new TextInput(); });\r\n        this.registerType(\"Input.Date\", () => { return new DateInput(); });\r\n        this.registerType(\"Input.Time\", () => { return new TimeInput(); });\r\n        this.registerType(\"Input.Number\", () => { return new NumberInput(); });\r\n        this.registerType(\"Input.ChoiceSet\", () => { return new ChoiceSetInput(); });\r\n        this.registerType(\"Input.Toggle\", () => { return new ToggleInput(); });\r\n    }\r\n}\r\n\r\nexport class ActionTypeRegistry extends TypeRegistry<Action> {\r\n    reset() {\r\n        this.clear();\r\n\r\n        this.registerType(\"Action.OpenUrl\", () => { return new OpenUrlAction(); });\r\n        this.registerType(\"Action.Submit\", () => { return new SubmitAction(); });\r\n        this.registerType(\"Action.ShowCard\", () => { return new ShowCardAction(); });\r\n    }\r\n}\r\n\r\nexport class AdaptiveCard extends ContainerWithActions {\r\n    private static currentVersion: Version = new Version(1, 1);\r\n\r\n    static useAutomaticContainerBleeding: boolean = false;\r\n    static useAdvancedTextBlockTruncation: boolean = true;\r\n    static useAdvancedCardBottomTruncation: boolean = false;\r\n    static useMarkdownInRadioButtonAndCheckbox: boolean = true;\r\n\r\n    static readonly elementTypeRegistry = new ElementTypeRegistry();\r\n    static readonly actionTypeRegistry = new ActionTypeRegistry();\r\n\r\n    static onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    static onExecuteAction: (action: Action) => void = null;\r\n    static onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    static onImageLoaded: (image: Image) => void = null;\r\n    static onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    static onParseElement: (element: CardElement, json: any, errors?: Array<IValidationError>) => void = null;\r\n    static onParseAction: (element: Action, json: any, errors?: Array<IValidationError>) => void = null;\r\n    static onParseError: (error: IValidationError) => void = null;\r\n\r\n    static processMarkdown = function (text: string): string {\r\n        // Check for markdownit\r\n        if (window[\"markdownit\"]) {\r\n            return window[\"markdownit\"]().render(text);\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    private isVersionSupported(): boolean {\r\n        if (this.bypassVersionCheck) {\r\n            return true;\r\n        }\r\n        else {\r\n            var unsupportedVersion: boolean =\r\n                !this.version ||\r\n                (AdaptiveCard.currentVersion.major < this.version.major) ||\r\n                (AdaptiveCard.currentVersion.major == this.version.major && AdaptiveCard.currentVersion.minor < this.version.minor);\r\n\r\n            return !unsupportedVersion;\r\n        }\r\n    }\r\n\r\n    private _cardTypeName?: string = \"AdaptiveCard\";\r\n\r\n    protected getItemsCollectionPropertyName(): string {\r\n        return \"body\";\r\n    }\r\n\r\n    protected applyPadding() {\r\n        if (!this.renderedElement) {\r\n            return;\r\n        }\r\n\r\n        var effectivePadding = this.padding ? this.padding.toSpacingDefinition(this.hostConfig) : this.internalPadding.toSpacingDefinition(this.hostConfig);\r\n\r\n        this.renderedElement.style.paddingTop = effectivePadding.top + \"px\";\r\n        this.renderedElement.style.paddingRight = effectivePadding.right + \"px\";\r\n        this.renderedElement.style.paddingBottom = effectivePadding.bottom + \"px\";\r\n        this.renderedElement.style.paddingLeft = effectivePadding.left + \"px\";\r\n\r\n        if (this.isLastElementBleeding()) {\r\n            this.renderedElement.style.paddingBottom = \"0px\";\r\n        }\r\n    }\r\n\r\n    protected internalRender(): HTMLElement {\r\n        var renderedElement = super.internalRender();\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation) {\r\n            // Unlike containers, the root card element should be allowed to\r\n            // be shorter than its content (otherwise the overflow truncation\r\n            // logic would never get triggered)\r\n            renderedElement.style.minHeight = null;\r\n        }\r\n\r\n        return renderedElement;\r\n    }\r\n\r\n    protected get bypassVersionCheck(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get defaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition(\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get allowCustomPadding(): boolean {\r\n        return false;\r\n    }\r\n\r\n    protected get allowCustomStyle() {\r\n        return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\r\n    }\r\n\r\n    protected get hasBackground(): boolean {\r\n        return true;\r\n    }\r\n\r\n    onAnchorClicked: (element: CardElement, anchor: HTMLAnchorElement) => boolean = null;\r\n    onExecuteAction: (action: Action) => void = null;\r\n    onElementVisibilityChanged: (element: CardElement) => void = null;\r\n    onImageLoaded: (image: Image) => void = null;\r\n    onInlineCardExpanded: (action: ShowCardAction, isExpanded: boolean) => void = null;\r\n    onParseElement: (element: CardElement, json: any, errors?: Array<IValidationError>) => void = null;\r\n    onParseAction: (element: Action, json: any, errors?: Array<IValidationError>) => void = null;\r\n\r\n    version?: Version = new Version(1, 0);\r\n    fallbackText: string;\r\n    designMode: boolean = false;\r\n\r\n    getJsonTypeName(): string {\r\n        return \"AdaptiveCard\";\r\n    }\r\n\r\n    toJSON() {\r\n        let result = super.toJSON();\r\n\r\n        Utils.setProperty(result, \"$schema\", \"http://adaptivecards.io/schemas/adaptive-card.json\");\r\n\r\n        if (!this.bypassVersionCheck && this.version) {\r\n            Utils.setProperty(result, \"version\", this.version.toString());\r\n        }\r\n\r\n        Utils.setProperty(result, \"fallbackText\", this.fallbackText);\r\n        Utils.setProperty(result, \"lang\", this.lang);\r\n        Utils.setProperty(result, \"speak\", this.speak);\r\n\r\n        return result;\r\n    }\r\n\r\n    validate(): Array<IValidationError> {\r\n        var result: Array<IValidationError> = [];\r\n\r\n        if (this._cardTypeName != \"AdaptiveCard\") {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.MissingCardType,\r\n                    message: \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\"\r\n                });\r\n        }\r\n\r\n        if (!this.bypassVersionCheck && (!this.version || !this.version.isValid)) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.PropertyCantBeNull,\r\n                    message: !this.version ? \"The version property must be specified.\" : \"Invalid version: \" + this.version\r\n                });\r\n        }\r\n        else if (!this.isVersionSupported()) {\r\n            result.push(\r\n                {\r\n                    error: Enums.ValidationError.UnsupportedCardVersion,\r\n                    message: \"The specified card version (\" + this.version + \") is not supported. The maximum supported card version is \" + AdaptiveCard.currentVersion\r\n                });\r\n        }\r\n\r\n        return result.concat(super.validate());\r\n    }\r\n\r\n    parse(json: any, errors?: Array<IValidationError>) {\r\n        this._cardTypeName = json[\"type\"];\r\n\r\n        var langId = json[\"lang\"];\r\n\r\n        if (langId && typeof langId === \"string\") {\r\n            try {\r\n                this.lang = langId;\r\n            }\r\n            catch (e) {\r\n                raiseParseError(\r\n                    {\r\n                        error: Enums.ValidationError.InvalidPropertyValue,\r\n                        message: e.message\r\n                    },\r\n                    errors\r\n                );\r\n            }\r\n        }\r\n\r\n        this.version = Version.parse(json[\"version\"]);\r\n\r\n        this.fallbackText = json[\"fallbackText\"];\r\n\r\n        super.parse(json, errors);\r\n    }\r\n\r\n    render(target?: HTMLElement): HTMLElement {\r\n        var renderedCard: HTMLElement;\r\n\r\n        if (!this.isVersionSupported()) {\r\n            renderedCard = document.createElement(\"div\");\r\n            renderedCard.innerHTML = this.fallbackText ? this.fallbackText : \"The specified card version is not supported.\";\r\n        }\r\n        else {\r\n            renderedCard = super.render();\r\n\r\n            if (renderedCard) {\r\n                renderedCard.tabIndex = 0;\r\n\r\n                if (!Utils.isNullOrEmpty(this.speak)) {\r\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (target) {\r\n            target.appendChild(renderedCard);\r\n\r\n            this.updateLayout();\r\n        }\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    updateLayout(processChildren: boolean = true) {\r\n        super.updateLayout(processChildren);\r\n\r\n        if (AdaptiveCard.useAdvancedCardBottomTruncation && this.isRendered()) {\r\n            var card = this.renderedElement;\r\n            var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\r\n\r\n            this['handleOverflow'](card.offsetHeight - padding);\r\n        }\r\n    }\r\n\r\n    canContentBleed(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get hasVisibleSeparator(): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nclass InlineAdaptiveCard extends AdaptiveCard {\r\n    protected get bypassVersionCheck(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected get defaultPadding(): PaddingDefinition {\r\n        return new PaddingDefinition(\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding,\r\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\r\n            Enums.Spacing.Padding);\r\n    }\r\n\r\n    protected get defaultStyle(): string {\r\n        if (this.suppressStyle) {\r\n            return Enums.ContainerStyle.Default;\r\n        }\r\n        else {\r\n            return this.hostConfig.actions.showCard.style ? this.hostConfig.actions.showCard.style : Enums.ContainerStyle.Emphasis;\r\n        }\r\n    }\r\n\r\n    suppressStyle: boolean = false;\r\n\r\n    render(target?: HTMLElement) {\r\n        var renderedCard = super.render(target);\r\n        renderedCard.setAttribute(\"aria-live\", \"polite\");\r\n        renderedCard.removeAttribute(\"tabindex\");\r\n\r\n        return renderedCard;\r\n    }\r\n\r\n    getForbiddenActionTypes(): Array<any> {\r\n        return [ShowCardAction];\r\n    }\r\n}\r\n\r\nconst defaultHostConfig: HostConfig.HostConfig = new HostConfig.HostConfig(\r\n    {\r\n        supportsInteractivity: true,\r\n        fontFamily: \"Segoe UI\",\r\n        spacing: {\r\n            small: 10,\r\n            default: 20,\r\n            medium: 30,\r\n            large: 40,\r\n            extraLarge: 50,\r\n            padding: 20\r\n        },\r\n        separator: {\r\n            lineThickness: 1,\r\n            lineColor: \"#EEEEEE\"\r\n        },\r\n        fontSizes: {\r\n            small: 12,\r\n            default: 14,\r\n            medium: 17,\r\n            large: 21,\r\n            extraLarge: 26\r\n        },\r\n        fontWeights: {\r\n            lighter: 200,\r\n            default: 400,\r\n            bolder: 600\r\n        },\r\n        imageSizes: {\r\n            small: 40,\r\n            medium: 80,\r\n            large: 160\r\n        },\r\n        containerStyles: {\r\n            default: {\r\n                backgroundColor: \"#FFFFFF\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            },\r\n            emphasis: {\r\n                backgroundColor: \"#08000000\",\r\n                foregroundColors: {\r\n                    default: {\r\n                        default: \"#333333\",\r\n                        subtle: \"#EE333333\"\r\n                    },\r\n                    dark: {\r\n                        default: \"#000000\",\r\n                        subtle: \"#66000000\"\r\n                    },\r\n                    light: {\r\n                        default: \"#FFFFFF\",\r\n                        subtle: \"#33000000\"\r\n                    },\r\n                    accent: {\r\n                        default: \"#2E89FC\",\r\n                        subtle: \"#882E89FC\"\r\n                    },\r\n                    attention: {\r\n                        default: \"#cc3300\",\r\n                        subtle: \"#DDcc3300\"\r\n                    },\r\n                    good: {\r\n                        default: \"#54a254\",\r\n                        subtle: \"#DD54a254\"\r\n                    },\r\n                    warning: {\r\n                        default: \"#e69500\",\r\n                        subtle: \"#DDe69500\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        actions: {\r\n            maxActions: 5,\r\n            spacing: Enums.Spacing.Default,\r\n            buttonSpacing: 10,\r\n            showCard: {\r\n                actionMode: Enums.ShowCardActionMode.Inline,\r\n                inlineTopMargin: 16\r\n            },\r\n            actionsOrientation: Enums.Orientation.Horizontal,\r\n            actionAlignment: Enums.ActionAlignment.Left\r\n        },\r\n        adaptiveCard: {\r\n            allowCustomStyle: false\r\n        },\r\n        imageSet: {\r\n            imageSize: Enums.Size.Medium,\r\n            maxImageHeight: 100\r\n        },\r\n        factSet: {\r\n            title: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Bolder,\r\n                wrap: true,\r\n                maxWidth: 150,\r\n            },\r\n            value: {\r\n                color: Enums.TextColor.Default,\r\n                size: Enums.TextSize.Default,\r\n                isSubtle: false,\r\n                weight: Enums.TextWeight.Default,\r\n                wrap: true,\r\n            },\r\n            spacing: 10\r\n        }\r\n    });\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/card-elements.ts","abstract class AbstractTextFormatter {\r\n    private _regularExpression: RegExp;\r\n\r\n    protected abstract internalFormat(lang: string, matches: RegExpExecArray): string;\r\n\r\n    constructor(regularExpression: RegExp) {\r\n        this._regularExpression = regularExpression;\r\n    }\r\n\r\n    format(lang: string, input: string): string {\r\n        var matches;\r\n        var result = input;\r\n\r\n        while ((matches = this._regularExpression.exec(input)) != null) {\r\n            result = result.replace(matches[0], this.internalFormat(lang, matches));\r\n        };\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass DateFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n        var format = matches[2] != undefined ? matches[2].toLowerCase() : \"compact\";\r\n\r\n        if (format != \"compact\") {\r\n            return date.toLocaleDateString(lang, { day: \"numeric\", weekday: format, month: format, year: \"numeric\" });\r\n        }\r\n        else {\r\n            return date.toLocaleDateString();\r\n        }\r\n    }\r\n}\r\n\r\nclass TimeFormatter extends AbstractTextFormatter {\r\n    protected internalFormat(lang: string, matches: RegExpExecArray): string {\r\n        var date = new Date(Date.parse(matches[1]));\r\n\r\n        return date.toLocaleTimeString(lang, { hour: 'numeric', minute: '2-digit' });\r\n    }\r\n}\r\n\r\nexport function formatText(lang: string, text: string): string {\r\n    const formatters: Array<AbstractTextFormatter> = [\r\n        new DateFormatter(/\\{{2}DATE\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))(?:, ?(COMPACT|LONG|SHORT))?\\)\\}{2}/g),\r\n        new TimeFormatter(/\\{{2}TIME\\((\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:Z|(?:(?:-|\\+)\\d{2}:\\d{2})))\\)\\}{2}/g)\r\n    ];\r\n\r\n    var result = text;\r\n\r\n    for (var i = 0; i < formatters.length; i++) {\r\n        result = formatters[i].format(lang, result);\r\n    }\r\n\r\n    return result;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/text-formatters.ts"],"sourceRoot":""}